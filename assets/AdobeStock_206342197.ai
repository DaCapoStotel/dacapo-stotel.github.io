%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: SF-ChoirGroup-1.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Meh
%%CreationDate: 5/23/2018
%%BoundingBox: 0 0 1000 500
%%HiResBoundingBox: 0 0 1000 500
%%CropBox: 0 0 1000 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-05-23T15:17:10+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-05-23T15:17:11+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-05-23T15:17:11+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>128</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAgAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWN+cPzE8peUHsY9evDby6izJaRpHJKzcOIY0jVqAFx1xVk&#xA;mKuxV2KuxV2KsP8AKf5k6d5g9dnsrvTofrj2dhNcwTCO4CHhzEvp+ihaTkgQycqjx2xVmGKpN5u8&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:d6aa7364-7c77-b94d-85ea-f76516b70ae4</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:d6aa7364-7c77-b94d-85ea-f76516b70ae4</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:31a655bf-05fc-4874-8135-3b804aeca09d</stRef:instanceID>
            <stRef:documentID>xmp.did:09164f8b-7713-1d45-9d96-4e23e4b1fce9</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d6aa7364-7c77-b94d-85ea-f76516b70ae4</stEvt:instanceID>
                  <stEvt:when>2018-05-23T15:17:11+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1000.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Cold</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
1000 500 li
1000 0 li
cp
clp
0 0 mo
0 500 li
1000 500 li
1000 0 li
0 0 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
210.313 191.545 mo
209.548 194.666 209.69 197.724 206.773 199.792 cv
203.476 202.13 200.376 200.636 196.979 199.591 cv
196.081 199.315 195.507 200.316 195.854 201.057 cv
198.023 205.704 205.244 205.563 208.839 202.862 cv
212.041 200.457 214.659 194.624 211.503 191.23 cv
211.142 190.842 210.438 191.033 210.313 191.545 cv
cp
.14902 .14902 .14902 rgb
f
242.793 186.978 mo
243.285 189.746 242.077 193.354 238.764 193.447 cv
234.999 193.552 232.312 189.221 230.498 186.5 cv
229.963 185.699 228.483 186.179 228.849 187.196 cv
230.645 192.195 234.544 198.936 241.021 196.717 cv
245.018 195.348 247.376 189.442 244.023 186.261 cv
243.461 185.727 242.668 186.272 242.793 186.978 cv
cp
f
235.154 219.553 mo
233.487 220.521 231.503 222.164 229.479 221.102 cv
227.048 219.827 227.801 216.92 228.953 215.158 cv
230.354 213.014 233.086 210.429 231.54 207.7 cv
231.251 207.19 230.572 207.259 230.269 207.7 cv
229.405 208.954 228.765 210.207 227.719 211.352 cv
226.771 212.39 225.704 213.344 224.938 214.537 cv
223.356 216.999 223.256 219.939 224.816 222.453 cv
227.605 226.949 237.086 227.23 237.047 220.641 cv
237.042 219.686 235.982 219.072 235.154 219.553 cv
cp
f
232.453 256.579 mo
223.684 259.42 213.539 257.773 205.303 254.007 cv
189.045 246.571 178.956 229.574 176.808 212.186 cv
174.391 192.625 182.983 173.57 200.049 163.509 cv
216.012 154.861 238.255 161.001 248.911 175.259 cv
261.385 191.95 265.128 217.035 254.924 235.582 cv
250.103 244.346 242.248 253.405 232.453 256.579 cv
cp
290.24 280.231 mo
283.68 265.391 273.991 251.919 264.306 238.991 cv
264.111 238.73 263.815 238.542 263.453 238.411 cv
275.822 217.92 273.064 191.037 259.127 171.591 cv
244.98 151.853 216.101 148.765 195.364 158.841 cv
193.876 154.373 192.389 149.904 190.901 145.435 cv
189.977 142.658 179.483 145.712 180.334 148.269 cv
182.201 153.878 184.068 159.487 185.936 165.097 cv
184.366 166.39 182.86 167.743 181.457 169.177 cv
178.152 165.928 174.848 162.679 171.543 159.43 cv
169.552 157.472 159.875 161.379 161.597 163.072 cv
165.945 167.348 170.294 171.624 174.643 175.899 cv
174.863 176.116 175.189 176.25 175.572 176.334 cv
173.725 178.997 172.097 181.799 170.753 184.743 cv
165.422 183.073 160.761 179.809 157.354 175.197 cv
155.523 172.717 146.073 177.064 146.787 178.031 cv
151.64 184.602 158.622 188.745 166.734 189.786 cv
167.395 189.871 168.076 189.881 168.762 189.837 cv
166.546 196.354 165.507 203.355 165.865 210.602 cv
166.455 222.539 170.72 234.292 177.895 243.724 cv
174.337 252.882 170.272 261.834 166.733 271 cv
165.845 273.299 176.066 272.202 177.194 269.281 cv
179.553 263.174 182.14 257.159 184.662 251.118 cv
189.123 255.164 194.281 258.454 200.041 260.699 cv
221.029 268.881 242.74 262.999 257.289 246.722 cv
265.747 258.157 273.918 270.047 279.673 283.065 cv
281.059 286.201 291.388 282.828 290.24 280.231 cv
cp
f
245.392 263.915 mo
245.392 263.915 238.101 270.915 234.244 274.818 cv
233.257 274.121 232.068 273.687 230.771 273.632 cv
228.168 273.521 225.865 274.958 224.728 277.121 cv
211.364 271.85 li
215.92 289.181 li
225.185 283.926 li
226.312 285.512 228.127 286.582 230.22 286.67 cv
233.429 286.806 236.188 284.594 236.856 281.56 cv
248.815 285.459 li
245.392 263.915 li
cp
f
379.68 207.737 mo
379.407 207.044 378.563 206.477 377.831 206.984 cv
375.447 208.639 374.219 210.07 371.037 209.871 cv
367.26 209.635 365.534 207.467 363.17 204.79 cv
362.401 203.918 361.21 204.701 361.104 205.647 cv
360.493 211.031 366.5 214.048 371.037 214.363 cv
374.518 214.604 381.647 212.746 379.68 207.737 cv
cp
f
411.94 210.053 mo
410.336 210.763 409.292 212.38 407.549 212.924 cv
405.599 213.532 403.349 212.643 402.141 211.039 cv
400.693 209.115 397.542 210.777 398.82 212.981 cv
400.668 216.167 404.073 218.011 407.771 217.396 cv
410.672 216.915 414.735 214.216 413.685 210.763 cv
413.442 209.966 412.646 209.74 411.94 210.053 cv
cp
f
395.875 227.721 mo
387.904 231.164 380.011 229.796 372.217 226.708 cv
371.314 226.351 370.56 227.721 371.271 228.337 cv
377.646 233.868 386.529 234.772 394.399 232.445 cv
393.426 237.286 391.397 242.081 386.953 244.643 cv
381.382 247.854 376.495 244.89 373.266 240.129 cv
372.794 239.434 371.371 239.357 371.226 240.396 cv
370.169 247.984 378.883 251.786 385.256 250.023 cv
394.459 247.478 397.93 238.011 398.886 229.45 cv
399.074 227.761 397.088 227.196 395.875 227.721 cv
cp
f
427.14 233.616 mo
422.307 248.567 409.49 262.897 392.923 263.508 cv
377.342 264.083 361.354 254.892 353.723 241.352 cv
345.331 226.461 347.552 207.672 357.594 194.159 cv
363.948 185.609 373.456 178.552 384.309 177.63 cv
387.207 177.384 390.069 177.531 392.875 177.981 cv
397.228 180.389 401.816 182.05 405.045 182.636 cv
405.629 182.742 406.296 182.832 407.024 182.905 cv
409.52 184.233 411.919 185.744 414.196 187.384 cv
427.995 198.293 432.465 217.142 427.14 233.616 cv
cp
369.242 177.569 mo
368.777 177.781 368.312 177.993 367.85 178.22 cv
367.965 177.925 368.063 177.618 368.171 177.318 cv
368.528 177.405 368.882 177.494 369.242 177.569 cv
cp
358.15 156.608 mo
362.976 153.572 363.279 162.96 363.023 168.176 cv
359.779 165.379 354.151 159.124 358.15 156.608 cv
cp
387.82 161.509 mo
388.13 157.44 393.388 155.153 393.667 160.627 cv
393.811 163.462 392.313 165.914 390.17 167.866 cv
388.759 166.029 387.645 163.798 387.82 161.509 cv
cp
426.231 168.726 mo
430.264 166.224 431.756 167.229 430.709 171.743 cv
429.91 173.824 427.711 175.057 425.506 175.881 cv
425.346 174.845 425.258 173.803 425.307 172.768 cv
425.322 171.36 425.63 170.013 426.231 168.726 cv
cp
457.006 197.3 mo
446.988 199.424 436.485 194.731 430.37 186.691 cv
429.078 184.992 427.911 183.035 427.011 180.96 cv
434.13 178.734 439.625 174.545 438.057 167.303 cv
436.632 160.724 428.354 160.382 423.576 163.385 cv
418.595 166.515 417.59 172.263 418.508 177.668 cv
417.23 177.851 415.925 177.954 414.608 177.988 cv
408.584 175.167 402.221 173.459 395.774 172.922 cv
395.237 172.57 394.713 172.201 394.206 171.813 cv
395.501 170.695 396.694 169.438 397.745 168.02 cv
400.98 163.65 402.673 156.292 397.22 152.875 cv
392.847 150.133 386.924 152.032 383.61 155.61 cv
378.315 161.329 379.93 166.916 384.245 171.529 cv
383.334 171.904 382.439 172.209 381.608 172.422 cv
377.656 173.439 373.519 173.121 369.696 171.818 cv
371.305 163.767 371.519 151.353 361.017 150.961 cv
356.624 150.798 351.624 153.214 350.315 157.673 cv
348.486 163.91 354.322 170.365 359.112 173.48 cv
360.003 174.059 360.94 174.568 361.897 175.044 cv
360.1 181.404 356.405 187.458 349.887 189.623 cv
346.939 190.602 341.765 191.945 340.687 187.947 cv
340.123 185.855 341.281 183.376 342.263 181.606 cv
344.203 178.109 337.059 177.939 335.509 180.731 cv
330.797 189.223 335.277 196.641 345.102 195.805 cv
345.863 195.741 346.608 195.644 347.339 195.523 cv
339.713 206.11 336.01 219.323 338.824 232.582 cv
340.255 239.327 343.301 245.344 347.467 250.436 cv
343.316 253.912 339.994 258.246 337.065 262.783 cv
334.638 266.543 332.04 270.628 331.11 275.07 cv
330.006 280.346 340.823 279.103 341.827 274.304 cv
342.503 271.069 344.828 267.722 346.592 264.995 cv
348.549 261.97 350.757 258.956 353.381 256.432 cv
360.816 262.733 370.233 266.835 380.052 268.088 cv
394.117 269.884 408.529 265.807 419.659 257.29 cv
422.914 263.89 425.742 270.829 426.282 278.195 cv
426.58 282.258 437.183 279.9 436.85 275.361 cv
436.201 266.519 432.257 258.285 428.232 250.521 cv
428.076 250.22 427.868 249.964 427.628 249.742 cv
428.625 248.571 429.591 247.369 430.483 246.103 cv
440.073 232.488 442.565 214.506 436.371 199.733 cv
443.101 202.854 450.866 203.849 458.335 202.265 cv
462.773 201.324 461.395 196.37 457.006 197.3 cv
cp
f
609.661 251.453 mo
606.533 253.565 603.078 255.201 599.341 256.194 cv
584.041 260.262 567.403 251.313 558.728 238.858 cv
538.464 209.768 569.303 159.94 604.53 178.955 cv
619.632 187.105 629.098 204.999 627.511 222.035 cv
626.136 232.06 621.041 241.853 613.369 248.572 cv
611.637 249.188 610.13 250.235 609.661 251.453 cv
cp
640.451 166.474 mo
641.015 161.064 630.244 162.501 629.745 167.282 cv
629.149 173.005 627.524 178.292 624.876 183.131 cv
623.253 181.409 621.503 179.804 619.636 178.334 cv
619.444 168.511 619.253 158.688 619.061 148.865 cv
618.959 143.629 608.31 145.456 608.395 149.819 cv
608.539 157.214 608.684 164.609 608.827 172.004 cv
606.616 171.106 604.352 170.406 602.055 169.896 cv
599.407 158.529 593.718 148.389 585.427 140.092 cv
583.174 137.838 573.277 141.701 575.543 143.968 cv
582.623 151.054 587.617 159.458 590.453 168.87 cv
579.027 169.322 567.715 173.919 559.073 181.635 cv
543.258 195.756 535.472 219.274 546.281 238.731 cv
546.61 239.323 546.955 239.904 547.309 240.477 cv
537.057 246.213 526.807 252.149 517.428 259.248 cv
515.51 260.7 516.539 262.32 518.404 262.896 cv
520.812 263.638 523.992 262.318 525.877 260.892 cv
533.655 255.005 542.188 250.039 550.706 245.252 cv
561.04 257.969 577.873 264.711 594.284 262.557 cv
600.553 261.733 606.604 259.708 612.119 256.722 cv
617.006 263.858 621.894 270.994 626.78 278.131 cv
629.013 281.391 639.225 277.726 636.546 273.813 cv
631.301 266.154 626.056 258.495 620.811 250.836 cv
629.91 243.266 636.411 232.692 638.063 220.653 cv
639.04 210.154 636.313 199.655 630.827 190.855 cv
636.198 183.735 639.516 175.45 640.451 166.474 cv
cp
f
566.857 207.36 mo
569.986 209.701 575.437 209.482 577.043 205.499 cv
577.373 204.681 576.418 203.921 575.671 204.125 cv
573.455 204.732 571.104 205.66 568.941 204.342 cv
566.745 203.003 566.067 200.383 566.897 198.029 cv
567.271 196.969 565.669 196.35 565.118 197.279 cv
563.224 200.473 563.782 205.061 566.857 207.36 cv
cp
f
604.218 208.849 mo
602.99 210.757 601.177 212.98 598.681 213.066 cv
596.057 213.156 593.821 210.483 593.528 208.048 cv
593.332 206.422 590.813 205.707 590.403 207.625 cv
589.347 212.579 592.729 217.584 597.926 218.008 cv
602.773 218.403 607.874 214.288 606.735 209.178 cv
606.464 207.963 604.826 207.904 604.218 208.849 cv
cp
f
568.722 214.282 mo
568.225 213.057 566.574 213.244 566.437 214.591 cv
565.201 226.663 588.141 224.804 594.581 230.829 cv
599.618 235.542 586.687 243.198 582.133 243.39 cv
573.239 243.765 569.023 231.899 566.405 225.354 cv
566.027 224.408 564.4 224.099 564.162 225.354 cv
562.573 233.703 568.595 242.95 576.045 246.551 cv
583.312 250.063 590.773 245.559 596.271 240.72 cv
614.736 224.467 572.136 222.704 568.722 214.282 cv
cp
f
859.837 199.47 mo
851.383 201.137 840.148 202.938 834.562 194.449 cv
829.798 187.208 836.348 179.464 834.839 171.77 cv
834.706 171.091 834.529 170.474 834.334 169.885 cv
837.062 169.372 839.723 168.383 842.128 167.151 cv
847.402 164.45 852.605 158.369 856.786 165.902 cv
862.473 176.149 853.289 190.336 862.736 199.075 cv
862.902 199.229 863.086 199.354 863.258 199.499 cv
861.958 199.286 860.563 199.327 859.837 199.47 cv
cp
822.804 184.674 mo
821.342 178.179 818.722 172.575 815.2 167.858 cv
819.023 168.357 822.954 169.579 824.125 173.739 cv
825.115 177.26 823.732 181.037 822.804 184.674 cv
cp
723.73 201.128 mo
720.958 184.96 728.244 168.389 742.208 159.786 cv
753.789 152.651 768.589 151.48 781.51 155.284 cv
797.997 160.138 809.729 172.803 812.727 189.797 cv
815.919 212.222 800.928 238.304 777.157 241.197 cv
752.411 244.208 727.918 225.547 723.73 201.128 cv
cp
796.051 152.76 mo
802.497 146.598 809.922 153.956 813.877 159.137 cv
814.378 159.793 814.882 160.453 815.394 161.106 cv
812.216 160.815 809.14 160.384 806.588 159.205 cv
805.565 158.428 804.507 157.698 803.421 157.004 cv
802.979 156.553 802.563 156.063 802.198 155.501 cv
801.475 154.385 799.952 154.002 798.3 154.131 cv
797.471 153.729 796.625 153.356 795.771 152.995 cv
795.863 152.916 795.964 152.842 796.051 152.76 cv
cp
881.276 197.168 mo
875.656 201.69 869.706 192.108 869 187.51 cv
867.974 180.829 870.395 174.086 868.887 167.427 cv
866.316 156.081 855.682 154.597 846.255 158.912 cv
840.095 161.731 835.781 167.824 829.293 161.947 cv
824.442 157.552 821.909 151.139 815.998 147.872 cv
807.773 143.325 796.9 145.368 789.352 150.711 cv
788.969 150.6 788.58 150.504 788.194 150.4 cv
788.291 150.248 788.377 150.093 788.438 149.931 cv
790.105 145.475 793.606 140.146 798.131 138.123 cv
803.248 135.835 807.386 140.439 812.158 141.953 cv
815.952 143.157 819.899 143.119 823.659 141.791 cv
827.465 140.446 828.969 137.987 831.693 135.372 cv
833.556 133.583 833.852 132.668 836.681 133.992 cv
839.16 135.153 840.968 137.659 842.516 139.804 cv
845.413 143.82 847.49 148.458 851.382 151.667 cv
857.635 156.821 865.441 156.821 872.354 153.086 cv
874.255 152.058 874.981 150.353 873.274 148.938 cv
871.478 147.447 867.447 149.026 865.79 149.922 cv
864.438 150.652 860.124 146.618 859.351 145.814 cv
857.219 143.597 855.685 140.806 854.026 138.24 cv
851.296 134.013 848.315 130.164 843.562 128.132 cv
839.787 126.519 835.512 126.401 831.607 127.562 cv
827.13 128.893 825.476 131.553 822.291 134.516 cv
818.23 138.292 813.301 132.631 808.59 131.562 cv
804.563 130.648 800.245 131.326 796.413 132.705 cv
788.769 135.458 782.502 141.362 778.998 148.632 cv
778.657 148.592 778.313 148.565 777.972 148.531 cv
778.504 148.1 778.855 147.626 778.891 147.127 cv
779.749 134.967 770.363 121.725 758.75 118.088 cv
746.354 114.206 733.919 119.013 724.677 127.309 cv
721.666 130.011 719.426 132.913 715.16 131.333 cv
711.469 129.965 708.349 127.374 704.657 125.988 cv
699.012 123.87 692.386 124.103 687.106 127.196 cv
681.726 130.35 679.474 136.57 678.574 142.466 cv
677.645 148.564 678.423 156.348 672.923 160.483 cv
671.063 161.882 671.889 162.943 673.721 163.463 cv
675.905 164.083 679.45 162.769 681.192 161.459 cv
689.623 155.121 687.334 145.466 690.03 136.449 cv
690.905 133.521 691.73 129.741 695.24 130.269 cv
698.217 130.715 701.18 133.234 703.849 134.596 cv
708.64 137.042 713.555 137.86 718.829 136.643 cv
723.252 135.622 727.128 133.333 730.564 130.423 cv
735.559 126.195 739.523 121.241 746.766 121.977 cv
758.227 123.142 768.667 136.393 768.437 147.836 cv
762.026 145.776 756.655 141.337 750.106 139.527 cv
743.465 137.691 736.364 137.893 729.715 139.601 cv
715.746 143.188 704.873 153.444 697.683 165.626 cv
696.14 168.241 694.794 172.271 692.303 174.152 cv
689.416 176.333 684.366 174.811 680.855 174.836 cv
674.773 174.881 668.96 176.975 664.943 181.69 cv
655.343 192.958 662.258 208.104 659.181 221.043 cv
658.061 225.757 668.816 224.351 669.838 220.055 cv
672.429 209.16 665.91 193.659 673.657 184.325 cv
677.315 179.918 685.177 182.916 690.317 182.172 cv
695.379 181.439 699.637 178.865 702.719 174.81 cv
706.041 170.439 708.094 165.243 711.411 160.84 cv
715.381 155.573 720.356 150.816 726.376 148 cv
732.74 145.022 740.068 144.447 746.654 147.08 cv
748.966 148.004 751.13 149.167 753.283 150.334 cv
747.646 151.755 742.225 153.854 737.282 156.627 cv
730.973 160.167 725.552 164.904 721.404 170.472 cv
715.986 171.51 710.854 174.609 707.582 178.911 cv
701.408 187.026 702.112 203.791 691.17 207.437 cv
683.405 210.024 674.068 212.186 675.057 222.578 cv
675.537 227.623 678.716 231.911 679.384 236.899 cv
680.083 242.123 676.986 250.148 671.017 250.871 cv
666.207 251.453 661.988 256.875 669.373 255.98 cv
677.052 255.051 684.557 251.107 688.194 244.013 cv
690.098 240.301 690.541 236.292 689.569 232.245 cv
688.362 227.212 684.471 222.1 685.776 216.676 cv
687 211.59 694.951 211.661 699.035 209.55 cv
702.71 207.65 705.614 204.821 707.762 201.298 cv
709.848 197.875 711.96 187.962 715.327 181.51 cv
712.697 188.442 711.811 196.076 713.163 203.962 cv
714.561 212.109 717.944 219.311 722.695 225.376 cv
707.598 241.361 695.519 258.93 688.628 279.963 cv
687.309 283.993 697.974 282.663 699.239 278.802 cv
705.199 260.607 715.345 245.192 727.982 231.145 cv
739.895 242.32 757.063 248.045 773.74 246.34 cv
782.135 245.482 790.127 242.737 797.168 238.555 cv
801.592 246.819 803.919 256.635 806.947 265.454 cv
808.604 270.28 819.143 267.361 817.515 262.62 cv
814.174 252.892 811.556 242.416 806.577 233.37 cv
806.354 232.962 806.052 232.635 805.696 232.377 cv
815.998 223.364 822.879 210.781 823.691 196.718 cv
825.623 200.624 829.131 203.688 833.434 205.603 cv
839.667 208.377 846.457 208.263 853.117 207.326 cv
847.031 222.876 856.375 240.305 873.67 243.614 cv
876.114 244.082 879.444 243.69 881.143 241.61 cv
882.472 239.983 882.47 237.595 879.938 237.111 cv
864.014 234.063 857.005 216.563 865.681 203.035 cv
866.094 202.391 866.226 201.857 866.172 201.408 cv
873.435 205.018 883.492 202.891 889.519 198.042 cv
893.892 194.524 883.425 195.44 881.276 197.168 cv
cp
f
755.578 191.623 mo
757.723 189.721 759.207 186.446 757.139 183.977 cv
756.827 183.605 756.181 183.652 755.862 183.977 cv
753.48 186.402 752.074 190.748 747.784 188.929 cv
745.933 188.144 744.866 186.468 744.738 184.474 cv
744.636 182.869 745.626 181.456 745.336 179.897 cv
745.273 179.558 744.89 179.298 744.558 179.304 cv
741.715 179.354 740.735 183.55 740.854 185.839 cv
741.026 189.126 743.34 191.94 746.326 193.132 cv
749.441 194.375 753.038 193.877 755.578 191.623 cv
cp
f
801.578 194.189 mo
801.497 193.633 800.615 193.403 800.27 193.843 cv
798.072 196.638 795.399 200.448 791.489 200.542 cv
786.722 200.656 783.932 195.351 786.816 191.513 cv
787.311 190.856 786.359 189.991 785.712 190.407 cv
779.804 194.215 782.202 202.541 788.419 204.462 cv
795.051 206.511 802.641 201.399 801.578 194.189 cv
cp
f
778.754 208.841 mo
770.979 202.809 759.449 211.492 753.12 202.692 cv
752.751 202.179 751.641 202.257 751.748 203.064 cv
753.093 213.13 765.64 208.975 772.14 210 cv
775.366 210.509 775.684 210.812 777.041 214.097 cv
778.56 217.773 778.007 219.433 775.084 222.357 cv
772.242 225.201 768.384 226.729 764.394 226.887 cv
757.559 227.159 752.726 222.896 747.646 218.99 cv
746.971 218.47 746.17 219.325 746.32 220.009 cv
749.631 235.042 771.353 233.501 779.144 223.237 cv
782.434 218.902 783.534 212.549 778.754 208.841 cv
cp
f
616.489 346.195 mo
615.493 340.339 615.643 334.314 616.696 328.407 cv
620.598 328.047 625.288 324.656 621.8 322.04 cv
620.826 321.311 619.853 320.58 618.879 319.85 cv
619.818 317.042 620.952 314.297 622.27 311.65 cv
624.678 313.829 634.412 309.989 632.089 307.695 cv
630.526 306.153 628.965 304.611 627.402 303.069 cv
628.667 301.289 630.015 299.585 631.439 297.973 cv
637.178 291.477 644.613 285.964 653.239 284.185 cv
663.536 282.06 673.206 286.138 681.345 292.232 cv
687.192 296.921 691.965 302.729 695.574 309.194 cv
694.842 309.856 694.109 310.519 693.378 311.181 cv
691.493 312.884 692.667 315.342 694.699 316.118 cv
696.071 316.642 697.524 316.535 698.877 316.074 cv
700.157 319.224 701.187 322.477 701.949 325.795 cv
700.088 327.202 698.227 328.609 696.366 330.018 cv
694.393 331.51 698.108 331.762 698.853 331.716 cv
700.197 331.632 701.582 331.316 702.893 330.822 cv
703.951 338.005 703.798 345.372 702.318 352.503 cv
697.773 374.421 678.287 389.866 655.67 386.524 cv
635.69 383.573 619.805 365.689 616.489 346.195 cv
cp
724.477 461.511 mo
720.362 434.245 711.536 407.449 698.619 384.009 cv
706.979 389.998 714.283 397.98 720.999 405.373 cv
729.319 414.532 739.962 425.46 744.287 437.322 cv
745.067 439.463 745.354 441.509 745.251 443.46 cv
744.946 449.207 741.226 454.13 736.499 458.186 cv
723.776 469.102 706.953 475.627 691.646 481.886 cv
689.763 482.657 687.684 484.737 689.009 486.805 cv
690.362 488.918 694.343 488.014 696.105 487.293 cv
712.866 480.439 730.88 473.103 744.733 461.091 cv
750.054 456.478 754.797 450.581 755.831 443.757 cv
756.168 441.534 756.116 439.214 755.557 436.807 cv
754.373 431.712 751.141 427.023 748.246 422.769 cv
743.618 415.969 738.394 409.566 732.948 403.411 cv
724.022 393.323 713.903 382.047 701.998 375.146 cv
703.973 372.783 705.741 370.225 707.261 367.477 cv
714.635 354.14 716.046 338.6 712.735 324.048 cv
716.914 320.888 721.093 317.728 725.271 314.567 cv
727.244 313.074 723.528 312.822 722.785 312.869 cv
720.318 313.022 717.687 313.892 715.711 315.386 cv
714.24 316.498 712.77 317.61 711.299 318.723 cv
710.285 315.479 709.028 312.311 707.556 309.247 cv
711.94 305.283 716.325 301.319 720.711 297.355 cv
722.595 295.651 721.421 293.193 719.389 292.417 cv
716.769 291.417 713.842 292.68 711.916 294.421 cv
709.12 296.949 706.323 299.477 703.527 302.005 cv
699.824 296.198 695.261 290.967 689.946 286.626 cv
689.821 286.509 689.684 286.392 689.53 286.277 cv
671.951 273.113 649.641 273.157 632.043 286.361 cv
628.034 289.37 624.364 292.917 621.102 296.849 cv
618.115 293.9 615.129 290.952 612.143 288.004 cv
609.827 285.718 599.927 289.602 602.267 291.912 cv
606.638 296.227 611.008 300.541 615.378 304.855 cv
613.624 307.701 612.054 310.664 610.718 313.729 cv
607.637 311.418 604.556 309.107 601.476 306.797 cv
598.146 304.3 588.647 309.071 593.223 312.503 cv
597.955 316.052 602.687 319.601 607.418 323.149 cv
605.845 328.932 605.033 334.88 605.173 340.783 cv
605.492 354.205 611.024 367.105 619.957 376.884 cv
608.279 388.82 596.913 401.609 588.843 416.289 cv
583.403 426.181 579.179 437.485 580.773 448.952 cv
580.868 449.638 580.999 450.305 581.132 450.97 cv
586.479 477.736 621.651 487.902 644.149 493.488 cv
647.592 494.343 656.58 489.147 650.599 487.662 cv
629.545 482.435 596.819 473.107 591.706 448.176 cv
591.567 447.499 591.438 446.817 591.341 446.118 cv
589.85 435.396 594.171 424.523 599.364 415.378 cv
605.895 403.88 614.387 393.589 623.438 383.941 cv
611.043 403.64 605.466 428.09 601.619 450.53 cv
601.296 452.419 600.988 454.312 600.691 456.207 cv
603.017 460.141 606.078 463.549 609.637 466.52 cv
610.377 460.756 611.233 455.015 612.215 449.311 cv
615.831 428.274 620.879 405.575 631.907 386.772 cv
635.901 389.218 640.226 391.155 644.813 392.452 cv
659.292 396.546 675.183 394.262 688.024 386.83 cv
698.804 406.557 706.081 428.155 710.745 450.107 cv
711.961 455.832 713.012 461.619 713.875 467.444 cv
717.104 465.802 720.282 464.073 723.369 462.203 cv
723.739 461.979 724.107 461.739 724.477 461.511 cv
cp
f
607.682 485.243 mo
604.216 483.679 600.854 481.938 597.682 479.982 cv
597.041 486.641 596.575 493.317 596.28 500 cv
606.801 500 li
607 495.077 607.289 490.156 607.682 485.243 cv
cp
f
726.384 478.046 mo
722.874 479.9 719.313 481.657 715.711 483.332 cv
716.169 488.88 716.414 494.442 716.445 500 cv
727.091 500 li
727.212 492.728 726.972 485.391 726.384 478.046 cv
cp
f
666.089 364.012 mo
669.263 363.177 671.407 358.523 667.808 356.753 cv
667.091 356.401 666.324 356.834 666.271 357.636 cv
666.149 359.497 664.104 359.446 663.021 358.603 cv
661.77 357.626 660.942 355.924 660.819 354.366 cv
660.693 352.779 661.323 351.683 662.693 350.972 cv
663.521 350.542 665.471 349.916 666.353 350.397 cv
667.073 350.791 668.173 349.927 667.587 349.162 cv
666.584 347.853 666.067 346.828 664.298 346.494 cv
662.698 346.192 660.975 346.549 659.597 347.396 cv
656.101 349.543 655.167 354.043 656.565 357.737 cv
657.941 361.373 661.89 365.116 666.089 364.012 cv
cp
f
640.911 337.818 mo
644.51 337.974 649.848 334.817 648.427 330.563 cv
648.214 329.925 647.445 329.509 646.823 329.91 cv
645.1 331.021 643.739 332.805 641.584 333.109 cv
638.851 333.496 636.671 331.068 636.181 328.589 cv
635.84 326.867 633.491 327.467 633.336 328.975 cv
632.868 333.503 636.304 337.619 640.911 337.818 cv
cp
f
677.727 339.041 mo
682.522 338.556 689.275 332.264 685.854 327.162 cv
685.524 326.671 684.744 326.31 684.197 326.728 cv
682.092 328.34 681.643 331.057 679.682 332.742 cv
677.446 334.663 672.472 334.144 673.414 330.252 cv
673.887 328.302 670.95 326.844 670.029 328.824 cv
667.522 334.212 671.996 339.621 677.727 339.041 cv
cp
f
683.345 404.418 mo
672.051 399.865 li
662.048 439.316 li
650.318 399.865 li
636.878 402.88 li
641.648 418.208 li
651.353 417.706 li
645.9 423.234 li
662.048 444.09 li
677.274 423.863 li
670.522 419.465 li
679.518 418.853 li
683.345 404.418 li
cp
f
663.232 489.656 mo
668.608 490.148 673.452 486.539 677.867 484.03 cv
684.988 479.982 692.11 475.936 699.231 471.889 cv
703.375 469.534 699.629 465.398 696.033 467.441 cv
690.607 470.524 685.182 473.608 679.756 476.691 cv
676.846 478.346 673.992 480.427 671.014 481.801 cv
677.536 474.304 685.69 467.705 694.077 462.653 cv
696.996 460.896 689.985 461.701 688.691 462.48 cv
680.307 467.529 672.29 473.979 665.616 481.324 cv
658.796 474.263 650.377 468.737 641.399 464.865 cv
639.514 464.052 634.066 466.956 634.758 467.254 cv
642.212 470.47 649.271 474.833 655.36 480.26 cv
652.551 479.122 649.736 477.988 646.795 477.08 cv
641.784 475.533 636.871 473.953 632.194 471.547 cv
629.132 469.972 624.16 474.442 628.185 476.513 cv
634.046 479.528 640.319 481.199 646.563 483.212 cv
647.052 483.37 647.544 483.553 648.037 483.746 cv
651.219 484.994 654.481 486.881 657.763 488.199 cv
659.584 488.932 661.411 489.489 663.232 489.656 cv
cp
f
827.551 352.858 mo
836.803 358.657 847.864 359.01 858.171 356.456 cv
856.769 358.59 855.131 360.608 853.49 362.335 cv
850.937 365.021 841.618 370.604 839.322 363.794 cv
838.761 362.127 836.184 362.802 836.667 364.526 cv
838.394 370.686 845.119 372.945 850.721 370.561 cv
857.53 367.662 863.185 359.55 865.82 352.879 cv
866.528 351.089 864.391 349.045 862.634 349.689 cv
848.129 355.013 822.098 354.15 818.003 335.051 cv
817.819 334.193 816.442 334.187 816.263 335.051 cv
814.755 342.311 822.085 349.434 827.551 352.858 cv
cp
f
765.638 315.587 mo
766.029 314.846 766.486 314.148 766.973 313.472 cv
767.151 313.626 767.399 313.785 767.73 313.952 cv
768.62 315.057 769.3 316.273 769.771 317.603 cv
770.865 320.559 770.644 323.642 769.352 326.284 cv
768.239 325.179 767.247 324.089 766.45 323.117 cv
764.312 320.513 764.142 318.534 765.638 315.587 cv
cp
766.494 335.819 mo
769.373 337.631 772.463 338.936 775.58 339.247 cv
777.858 339.475 781.365 338.97 783.053 337.243 cv
784.373 335.892 784.651 334.407 782.229 334.165 cv
779.938 333.936 777.392 332.68 774.955 330.997 cv
780.61 326.068 783.243 318.462 778.724 311.597 cv
774.777 305.603 767.011 305.761 761.432 309.531 cv
755.544 313.51 751.514 321.089 756.57 327.008 cv
758.078 328.772 759.851 330.604 761.803 332.302 cv
758.236 333.021 754.36 331.862 751.224 329.765 cv
744.492 325.264 741.54 316.087 743.836 308.416 cv
749.317 290.106 774.724 292.546 789.383 288.337 cv
800.103 285.259 815.542 280.678 821.989 270.757 cv
824.314 267.179 813.913 268.488 812.276 271.007 cv
808.104 277.426 799.046 280.41 792.136 282.756 cv
783.028 285.848 773.497 286.504 764.137 288.471 cv
748.782 291.696 728.574 302.068 733.02 321.091 cv
736.579 336.323 753.299 340.565 766.494 335.819 cv
cp
f
763.708 408.425 mo
762.296 409.473 763.042 407.949 763.708 408.425 cv
763.708 408.425 li
cp
801.712 339.385 mo
798.187 320.915 805.288 303.302 820.613 292.36 cv
821.064 292.039 821.522 291.729 821.983 291.421 cv
822.221 293.851 822.855 296.359 823.954 298.913 cv
827.729 307.696 836.173 312.746 845.623 312.882 cv
848.366 312.921 851.727 312.421 855.013 311.368 cv
858.078 315.131 861.973 318.342 864.848 320.181 cv
872.182 324.873 881.024 326.799 889.656 326.14 cv
890.481 332.756 890.259 339.44 888.876 345.685 cv
886.76 355.236 882.206 364.652 874.791 371.199 cv
866.703 378.34 856.182 378.321 846.024 376.642 cv
824.612 373.1 806.671 361.412 801.712 339.385 cv
cp
908.012 292.766 mo
905.329 290.094 893.56 279.23 896.381 275.201 cv
898.5 272.175 905.709 281.447 907.26 283.705 cv
910.033 287.743 913.115 292.646 913.113 297.673 cv
911.392 296.059 909.684 294.431 908.012 292.766 cv
cp
913.681 377.034 mo
912.578 374.869 910.959 370.972 911.089 370.937 cv
913.738 370.204 913.997 373.918 913.681 377.034 cv
cp
818.829 375.247 mo
825.083 378.125 831.984 380.058 839.16 381.136 cv
844.674 381.964 850.211 382.182 855.584 381.724 cv
854.795 382.202 854.289 382.748 854.335 383.34 cv
857.349 422.446 860.744 462.925 873.721 500 cv
885.3 500 li
872.726 465.563 868.703 428.055 865.754 391.357 cv
879.101 409.902 892.363 428.538 904.786 447.71 cv
907.644 452.12 910.495 456.556 913.046 461.153 cv
913.82 462.55 914.737 465.996 915.766 467.789 cv
915.446 467.805 915.138 467.813 914.87 467.788 cv
911.746 467.502 908.637 466.684 905.681 465.661 cv
899.261 463.44 893.147 460.058 888.945 454.602 cv
886.868 451.905 876.676 455.495 879.108 458.653 cv
885.995 467.594 898.574 472.406 909.532 473.424 cv
914.821 473.915 928.587 473.076 926.685 464.745 cv
925.063 457.637 918.841 450.183 914.976 444.203 cv
907.929 433.299 900.538 422.616 893.091 411.982 cv
885.317 400.882 877.434 389.859 869.51 378.866 cv
869.497 378.849 869.48 378.835 869.468 378.817 cv
880.089 375.093 889.173 367.922 894.849 356.587 cv
899.854 346.591 901.53 335.117 900.241 323.961 cv
906.237 321.904 911.725 318.485 916.026 313.77 cv
925.206 321.779 934.632 329.779 942.187 339.271 cv
947.348 345.757 948.811 352.163 947.904 360.583 cv
946.741 371.386 941.528 384.212 928.998 384.575 cv
926.735 384.641 924.44 384.289 922.272 383.573 cv
922.405 383.345 922.543 383.12 922.668 382.886 cv
925.963 376.686 925.81 367.782 918.76 364.311 cv
912.561 361.258 903.626 363.476 901.457 370.56 cv
899.711 376.267 903.197 382.091 907.57 385.94 cv
900.594 389.459 890.657 387.66 894.074 377.852 cv
896.108 372.012 885.542 371.899 883.936 376.512 cv
879.043 390.554 892.052 397.85 904.524 395.506 cv
908.537 394.752 912.431 393.12 915.741 390.719 cv
927.473 395.058 942.111 391.864 950.066 382.058 cv
958.237 371.984 962.203 354.071 956.599 341.956 cv
952.39 332.856 943.891 325.607 936.69 318.921 cv
931.757 314.339 926.673 309.912 921.638 305.434 cv
924.56 299.152 924.39 293.283 921.344 286.78 cv
918.381 280.455 914.2 273.989 908.44 269.863 cv
902.862 265.867 895.587 265.188 889.956 269.553 cv
886.241 272.432 884.544 276.372 885.966 280.924 cv
886.094 281.334 886.259 281.736 886.411 282.142 cv
888.541 287.808 892.942 292.957 897.8 297.61 cv
901.686 301.332 905.835 304.735 909.322 307.842 cv
907.532 310.301 905.256 312.396 902.663 314.047 cv
897.697 317.21 891.621 318.779 885.817 318.321 cv
880.659 317.913 875.715 315.963 871.514 312.972 cv
869.194 311.319 867.124 309.385 865.341 307.163 cv
865.162 306.94 864.893 306.506 864.566 305.949 cv
866.574 303.967 867.959 301.553 868.252 298.691 cv
869.294 288.532 854.993 288.839 851.168 295.97 cv
849.718 298.673 849.851 301.62 850.915 304.524 cv
848.431 305.126 845.721 304.979 843.311 304.153 cv
838 302.332 834.431 297.564 833.206 292.197 cv
830.599 280.773 839.318 270.031 851.169 271.33 cv
853.149 271.547 855.136 270.618 856.488 269.325 cv
858.775 267.14 859.242 263.911 854.769 263.421 cv
839.686 261.769 824.075 271.991 822.087 286.181 cv
800.642 296.863 786.433 317.535 791.145 342.219 cv
793.933 354.602 800.787 363.775 809.963 370.191 cv
802.778 379.284 793.764 387.157 784.854 394.397 cv
779.85 398.464 774.678 402.499 769.08 405.723 cv
767.485 406.641 765.247 407.232 763.835 408.332 cv
763.834 408.332 763.832 408.325 763.832 408.326 cv
763.997 407.367 762.801 405.069 762.597 403.972 cv
762.149 401.571 761.969 399.13 761.825 396.695 cv
761.466 390.635 761.483 384.556 761.308 378.488 cv
761.015 368.379 761.329 356.032 755.562 347.226 cv
752.753 342.936 742.754 347.185 745.926 352.027 cv
748.96 356.661 749.529 362.893 750.011 368.276 cv
750.652 375.455 750.627 382.688 750.808 389.888 cv
750.987 397.104 749.458 413.211 758.26 416.437 cv
768.266 420.104 782.648 407.082 789.593 401.608 cv
794.465 397.767 799.396 393.709 804.116 389.398 cv
792.936 426.266 781.755 463.133 770.575 500 cv
780.996 500 li
793.607 458.416 806.218 416.832 818.829 375.247 cv
cp
f
823.653 326.895 mo
827.321 328.618 833.724 327.204 834.168 322.407 cv
834.229 321.749 833.473 321.519 832.989 321.73 cv
830.55 322.798 828.005 324.281 825.272 322.903 cv
822.794 321.654 822.184 318.528 821.793 316.046 cv
821.688 315.378 820.708 315.176 820.285 315.647 cv
816.991 319.325 819.642 325.009 823.653 326.895 cv
cp
f
862.143 341.592 mo
865.226 342.173 872.563 339.824 870.5 335.475 cv
870.334 335.125 869.857 334.858 869.475 334.886 cv
867.278 335.041 866.014 337.334 863.673 337.455 cv
860.978 337.594 858.776 334.775 858.45 332.298 cv
858.28 331.006 856.43 330.514 856.025 331.969 cv
854.793 336.403 857.63 340.74 862.143 341.592 cv
cp
f
135.791 348.108 mo
137.244 354.586 144.778 362.68 151.393 363.877 cv
158.633 365.188 164.602 358.965 164.229 351.889 cv
164.143 350.246 161.713 350.229 161.665 351.889 cv
161.437 359.694 153.627 361.944 148.043 357.495 cv
145.61 355.557 142.886 352.795 141.362 349.753 cv
155.82 348.887 171.115 340.964 178.606 328.588 cv
179.266 327.498 177.693 326.229 176.816 327.206 cv
167.795 337.256 151.591 345.004 138.06 345.128 cv
136.475 345.143 135.456 346.616 135.791 348.108 cv
cp
f
139.991 333.725 mo
144.264 331.15 145.666 325.929 143.645 321.49 cv
143.292 320.715 141.916 321.08 142.008 321.934 cv
142.354 325.135 140.968 328.761 138.016 330.343 cv
135.001 331.959 131.611 330.847 128.762 329.504 cv
127.973 329.133 127.295 329.873 127.625 330.643 cv
129.605 335.252 136.014 336.12 139.991 333.725 cv
cp
f
172.474 319.536 mo
176.747 316.962 178.148 311.74 176.128 307.303 cv
175.775 306.526 174.398 306.893 174.491 307.746 cv
174.836 310.946 173.451 314.573 170.499 316.155 cv
167.483 317.771 164.094 316.658 161.245 315.316 cv
160.456 314.945 159.777 315.686 160.108 316.454 cv
162.088 321.063 168.497 321.933 172.474 319.536 cv
cp
f
113.895 500 mo
115.494 491.853 117.275 483.74 119.099 475.669 cv
115.519 476.395 111.917 476.977 108.3 477.374 cv
106.607 484.883 104.953 492.426 103.451 500 cv
113.895 500 li
cp
f
194.31 476.639 mo
196.51 484.427 198.721 492.213 200.925 500 cv
212.293 500 li
210.112 492.282 207.92 484.567 205.736 476.851 cv
201.921 477.084 198.108 476.985 194.31 476.639 cv
cp
f
90.6934 272.647 mo
79.2671 274.049 76.6558 283.489 75.5352 293.303 cv
74.231 304.726 74.4937 317.041 70.166 327.869 cv
66.2964 337.55 57.7139 338.802 48.7993 334.691 cv
39.9888 330.628 34.7368 322.888 32.2842 314.104 cv
38.5132 315.947 45.6963 315.321 50.2334 311.739 cv
57.7422 305.813 58.2891 293.521 59.7881 284.872 cv
61.3291 275.981 63.0557 260.12 73.2422 256.686 cv
89.8477 251.086 111.188 265.206 117.665 280.027 cv
117.877 280.514 118.183 280.913 118.551 281.241 cv
117.966 281.672 117.387 282.117 116.816 282.58 cv
115.814 283.395 114.844 284.248 113.903 285.135 cv
108.794 277.589 99.6816 271.546 90.6934 272.647 cv
cp
105.744 321.799 mo
113.416 321.353 120.281 316.726 126.234 311.271 cv
133.349 315.386 144.227 317.07 150.973 312.475 cv
160.861 305.74 163.997 293.903 163.768 282.524 cv
167.256 284.274 170.58 286.357 173.674 288.662 cv
191.228 301.731 199.502 322.497 192.25 343.61 cv
185.155 362.21 169.632 370.821 150.223 371.422 cv
140.943 371.709 130.56 370.456 122.711 365.091 cv
114.849 359.716 109.865 351.025 107.369 341.987 cv
105.553 335.412 105.064 328.555 105.744 321.799 cv
cp
131.589 280.093 mo
134.455 289.094 130.622 297.035 124.456 303.612 cv
120.194 308.157 113.409 316.946 106.652 315.911 cv
108.531 306.645 112.568 297.785 118.396 290.369 cv
122.158 285.58 126.48 281.754 131.546 279.452 cv
131.515 279.664 131.52 279.878 131.589 280.093 cv
cp
146.834 305.555 mo
144.347 308.32 144.205 308.279 140.167 307.487 cv
137.572 306.978 135.18 306.008 133.007 304.553 cv
140.048 296.987 145.648 288.228 142.156 277.26 cv
142.134 277.188 142.083 277.136 142.052 277.07 cv
142.762 277.054 143.483 277.059 144.218 277.095 cv
147.116 277.238 149.977 277.694 152.779 278.397 cv
152.748 278.643 152.733 278.893 152.765 279.151 cv
153.874 288.14 153.137 298.547 146.834 305.555 cv
cp
101.3 474.67 mo
116.263 474.518 131.087 470.201 145.08 465.24 cv
146.128 464.869 149.217 463.842 148.267 462.368 cv
147.429 461.07 142.372 462.726 141.48 463.042 cv
130.707 466.861 119.231 470.453 107.685 470.508 cv
101.22 470.538 93.5532 469.359 89.2725 463.942 cv
88.3423 462.765 87.6274 461.514 87.0835 460.21 cv
81.4238 446.643 95.3979 427.022 102.36 417.36 cv
110.141 406.561 119.019 396.59 128.368 387.097 cv
123.753 412.682 117.27 437.945 111.506 463.275 cv
111.19 464.666 110.872 466.059 110.554 467.452 cv
114.016 467.532 117.647 467.063 121.228 466.302 cv
121.537 464.949 121.845 463.597 122.152 462.246 cv
128.65 433.696 136.047 405.227 140.666 376.288 cv
141.801 376.314 142.932 376.324 144.053 376.313 cv
152.214 376.232 160.39 375.089 168.016 372.723 cv
174.073 402.511 181.809 431.894 189.967 461.169 cv
194.002 462.442 198.104 463.571 202.223 464.378 cv
193.781 434.283 185.7 404.095 179.333 373.492 cv
193.912 388.18 206.432 405.596 215.568 424.037 cv
219.801 432.581 223.716 441.962 224.368 451.587 cv
224.501 453.548 224.445 455.752 224.092 457.92 cv
223.373 462.345 221.399 466.616 217.141 468.337 cv
212.592 470.176 206.278 469.062 201.624 468.335 cv
191.836 466.809 182.313 463.778 173.011 460.445 cv
170.618 459.588 161.188 463.461 164.341 464.591 cv
179.241 469.929 195.899 475.291 211.944 473.016 cv
220.706 471.773 230.8 468.021 233.885 458.878 cv
234.162 458.056 234.372 457.218 234.551 456.374 cv
236.284 448.185 233.587 439.132 230.718 431.597 cv
226.169 419.651 219.538 408.483 212.286 398.002 cv
204.106 386.181 194.888 374.923 184.385 365.089 cv
184.363 365.068 184.328 365.058 184.305 365.039 cv
192.364 359.589 198.879 352.007 202.722 341.932 cv
210.553 319.135 200.896 296.677 181.457 283.35 cv
165.857 272.655 145.039 268.733 127.689 276.059 cv
121.065 262.028 107.317 252.341 92.2686 249.124 cv
79.4395 246.382 64.9707 248.202 57.272 259.858 cv
50.9189 269.477 49.8789 281.69 47.8535 292.751 cv
47.1284 296.711 46.6919 302.664 43.9648 305.893 cv
40.5859 309.894 30.8823 304.641 30.7134 299.848 cv
30.7007 299.491 30.6431 299.165 30.5498 298.865 cv
30.5342 298.813 30.5034 298.771 30.4834 298.721 cv
28.9531 294.539 19.8462 296.214 20.002 300.632 cv
20.0117 300.903 20.0425 301.164 20.0679 301.429 cv
19.6997 313.54 22.6475 325.891 32.0117 334.243 cv
39.3828 340.817 49.4204 343.872 59.2041 342.598 cv
85.1187 339.221 83.7676 311.469 86.1665 291.332 cv
86.4941 288.58 86.8564 285.789 87.5972 283.111 cv
87.9077 281.987 88.3022 280.926 88.7642 279.856 cv
88.9663 279.39 89.4009 279.092 89.6309 278.659 cv
89.6641 278.597 89.6699 278.561 89.6919 278.51 cv
96.5171 279.897 103.192 286.244 105.872 292.558 cv
106.033 292.938 106.311 293.227 106.645 293.463 cv
101.347 300.854 97.6758 309.532 95.9536 318.519 cv
95.6265 318.931 95.5259 319.327 95.7349 319.674 cv
94.4385 327.19 94.5103 334.891 96.1421 342.203 cv
98.5332 352.922 104.47 363.819 114.058 369.686 cv
119.025 372.726 124.655 374.472 130.438 375.401 cv
130.344 375.619 130.266 375.842 130.229 376.076 cv
130.182 376.374 130.126 376.671 130.079 376.969 cv
117.087 389.325 104.579 402.331 93.8384 416.71 cv
86.647 426.337 79.3838 437.148 76.5747 449.018 cv
75.4224 453.887 75.0762 459.155 76.9663 463.681 cv
77.6235 465.256 78.5474 466.742 79.8081 468.088 cv
85.1196 473.758 93.9683 474.745 101.3 474.67 cv
cp
f
179.29 453.383 mo
183.537 452.398 182.65 449.118 178.411 450.101 cv
172.604 451.446 166.93 453.14 161.336 455.11 cv
166.22 449.728 173.55 446.772 178.96 441.892 cv
180.486 440.515 173.881 441.174 172.566 442.36 cv
167.581 446.857 161.378 449.666 156.528 454.065 cv
151.779 447.515 143.327 445.731 136.297 441.226 cv
134.59 440.132 128.617 442.986 129.668 443.659 cv
134.637 446.845 140.475 448.621 145.081 451.828 cv
141.855 450.994 138.533 450.371 135.163 449.665 cv
133.052 449.223 126.904 452.505 130.802 453.321 cv
135.438 454.293 140.298 454.932 144.764 456.558 cv
145.981 457.001 147.137 457.746 148.277 458.51 cv
149.866 459.573 151.427 460.675 153.086 461.059 cv
153.826 461.229 154.636 461.194 155.476 461.03 cv
158 460.54 160.792 458.891 162.743 458.183 cv
168.157 456.219 173.683 454.683 179.29 453.383 cv
cp
f
282.854 314.416 mo
292.969 317.05 303.915 317.374 314.045 316.818 cv
326.818 316.118 340.048 313.741 351.455 307.721 cv
354.352 311.572 356.802 315.959 358.741 320.819 cv
365.995 339.006 368.42 358.255 359.115 376.187 cv
354.384 385.304 346.75 393.126 337.064 396.862 cv
324.866 401.567 311.654 399.01 299.898 394.297 cv
286.774 388.692 277.029 379.788 271.326 368.499 cv
280.361 351.12 285.571 333.845 282.854 314.416 cv
cp
286.234 299.536 mo
304.847 306.427 321.865 303.741 339.848 296.763 cv
342.012 298.173 344.051 299.782 345.959 301.574 cv
336.168 306.816 323.984 308.284 313.185 308.73 cv
302.458 309.174 290.992 308.42 280.918 304.302 cv
282.579 302.591 284.35 300.993 286.234 299.536 cv
cp
329.667 291.907 mo
318.605 295.497 308.029 296.61 296.609 293.439 cv
300.498 291.782 304.664 290.629 309.068 290.104 cv
316.517 289.216 323.43 289.891 329.667 291.907 cv
cp
265.574 340.158 mo
265.928 331.796 268.24 323.604 272.141 316.335 cv
274.286 330.59 272.003 343.531 266.956 356.27 cv
265.814 351.205 265.333 345.818 265.574 340.158 cv
cp
272.278 483.726 mo
270.847 479.106 269.822 474.879 270.813 469.939 cv
272.542 461.323 277.571 453.37 281.473 445.604 cv
286.85 434.9 292.227 424.196 297.604 413.492 cv
303.38 442.143 304.173 470.995 304.007 500 cv
314.555 500 li
314.799 468.323 314.056 436.825 307.088 405.572 cv
322.499 408.72 338.32 406.778 351.202 398.152 cv
363.138 430.407 370.228 465.271 371.74 500 cv
382.424 500 li
381.384 470.125 376.195 440.097 367.332 411.659 cv
371.417 416.28 375.274 421.102 378.816 426.167 cv
386.878 437.697 394.711 451.626 396.701 465.802 cv
397.974 474.867 392.904 484.93 389.041 492.806 cv
387.866 495.198 386.636 497.608 385.344 500 cv
395.775 500 li
396.782 498.123 397.759 496.24 398.693 494.361 cv
403.03 485.638 408.313 474.833 407.493 464.793 cv
406.383 451.205 398.659 437.143 391.389 425.921 cv
382.791 412.647 372.044 400.896 360.257 390.403 cv
360.952 389.653 361.639 388.886 362.304 388.081 cv
377.496 369.713 378.684 346.276 371.601 324.386 cv
367.947 313.094 362.52 302.154 353.553 294.155 cv
344.199 285.812 331.82 282.319 319.501 281.886 cv
302.199 281.276 285.544 288.018 273.453 299.611 cv
272.045 294.524 271.047 289.344 270.452 284.042 cv
270.165 281.482 259.521 283.632 259.885 286.876 cv
260.571 292.997 261.803 298.956 263.575 304.797 cv
259.677 303.467 255.778 302.137 251.88 300.806 cv
249.435 299.971 246.079 300.792 244.408 302.81 cv
242.857 304.683 243.385 307.018 245.751 307.825 cv
251.351 309.736 256.951 311.647 262.551 313.56 cv
259.848 318.297 257.756 323.444 256.42 328.925 cv
253.108 342.509 254.314 358.281 260.117 371.067 cv
260.013 371.754 260.3 372.258 260.843 372.6 cv
267.637 386.376 279.804 395.566 293.717 401.531 cv
285.639 417.612 277.56 433.694 269.481 449.776 cv
265.883 456.939 261.399 464.342 260.079 472.357 cv
259.259 477.334 260.251 481.848 261.71 486.559 cv
263.146 491.196 264.908 495.699 266.987 500 cv
279.026 500 li
276.273 494.888 274.038 489.407 272.278 483.726 cv
cp
f
301.616 355.352 mo
308.593 355.71 311.947 348.824 312.161 342.811 cv
312.27 339.757 307.487 339.751 307.415 342.811 cv
307.313 347.138 305.421 351.083 300.562 350.889 cv
297.275 350.758 295.479 349.843 293.925 346.763 cv
293.207 345.34 290.769 346.332 291.321 347.861 cv
293.115 352.825 296.412 355.085 301.616 355.352 cv
cp
f
342.389 341.906 mo
346.241 340.598 353.071 333.383 348.561 329.44 cv
348.042 328.987 347.334 328.964 346.814 329.44 cv
344.393 331.663 344.722 335.354 341.417 337.093 cv
337.944 338.921 333.644 337.115 331.688 333.964 cv
330.472 332.003 327.741 333.71 328.655 335.738 cv
330.99 340.925 336.918 343.765 342.389 341.906 cv
cp
f
339.969 370.186 mo
339.505 367.649 335.198 368.199 335.433 370.8 cv
335.633 373.006 333.592 373.773 332.082 372.194 cv
330.713 370.764 331.22 368.405 332.058 366.831 cv
333.694 363.756 337.057 362.349 339.575 360.157 cv
340.383 359.454 339.489 358.387 338.627 358.529 cv
331.749 359.67 323.212 366.963 327.994 374.431 cv
331.857 380.464 341.311 377.512 339.969 370.186 cv
cp
f
350.551 423.844 mo
345.857 406.096 li
345.857 406.096 341.452 410.631 338.675 413.662 cv
337.66 413.01 336.46 412.621 335.165 412.621 cv
332.561 412.621 330.332 414.159 329.287 416.367 cv
318.474 412.621 li
324.029 429.299 li
330.491 423.683 li
331.676 424.905 333.328 425.671 335.165 425.671 cv
338.269 425.671 340.855 423.495 341.513 420.588 cv
350.551 423.844 li
cp
f
460.949 324.956 mo
464.597 325.852 470.096 324.874 471.542 320.927 cv
471.822 320.163 471.005 319.611 470.345 319.729 cv
467.537 320.225 465.341 322.038 462.316 321.563 cv
459.078 321.055 457.306 318.604 456.16 315.723 cv
455.699 314.564 453.978 314.67 453.921 316.026 cv
453.74 320.387 456.769 323.93 460.949 324.956 cv
cp
f
501.041 327.729 mo
504.506 327.899 508.584 326.702 509.858 323.154 cv
510.151 322.339 509.247 321.501 508.457 321.751 cv
506.09 322.5 503.985 323.84 501.431 323.91 cv
498.626 323.987 495.841 322.967 493.883 320.953 cv
492.887 319.929 491.05 321.272 491.869 322.508 cv
493.993 325.71 497.194 327.538 501.041 327.729 cv
cp
f
440.39 323.337 mo
441.515 306.024 453.711 289.664 469.225 282.351 cv
471.18 281.429 473.144 280.702 475.105 280.143 cv
469.119 287.404 464.89 295.808 462.466 305.074 cv
461.177 310.005 471.973 308.744 473.157 304.214 cv
475.708 294.465 480.728 285.981 487.746 278.874 cv
489.939 279.051 492.101 279.43 494.214 279.995 cv
489.139 287.422 486.144 295.938 485.6 305.062 cv
485.269 310.616 496.025 309.176 496.316 304.294 cv
496.769 296.697 498.976 289.751 502.97 283.538 cv
509.718 287.248 515.612 292.923 519.984 299.89 cv
527.641 313.229 530.937 334.216 522.56 347.865 cv
511.756 365.47 487.642 367.947 469.3 363.025 cv
450.978 358.109 439.147 342.456 440.39 323.337 cv
cp
436.756 436.229 mo
442.437 416.74 450.094 397.018 461.403 379.906 cv
453.505 419.938 445.606 459.969 437.708 500 cv
448.213 500 li
456.674 457.116 465.135 414.232 473.596 371.349 cv
484.979 372.775 497.008 371.66 507.664 367.694 cv
513.482 411.797 519.302 455.898 525.121 500 cv
536.063 500 li
530.978 461.465 525.894 422.929 520.809 384.394 cv
542.616 418.97 555.767 459.425 561.345 500 cv
572.286 500 li
565.928 450.775 548.439 401.747 518.144 362.546 cv
520.07 361.328 521.913 359.991 523.65 358.524 cv
542.079 342.96 541.046 315.262 529.755 295.59 cv
526.748 290.799 523.103 286.682 518.987 283.289 cv
527.164 287.271 533.705 294.758 538.798 303.057 cv
546.945 316.333 550.051 334.983 547.089 350.201 cv
546.224 354.648 556.928 353.036 557.703 349.052 cv
564.109 316.131 542.512 269.197 504.016 273.965 cv
503.084 273.796 502.055 273.786 501.062 273.948 cv
500.854 273.892 500.647 273.837 500.44 273.782 cv
517.95 266.252 538.106 275.245 551.063 287.557 cv
564.334 300.169 573.504 317.206 572.729 335.855 cv
572.678 337.063 583.176 335.896 583.296 333.021 cv
584.244 310.223 569.87 288.234 551.115 276.052 cv
534.508 265.264 513.812 264.971 495.914 272.209 cv
495.971 271.934 495.792 271.702 495.291 271.547 cv
473.013 264.627 448.788 271.674 430.612 285.484 cv
414.324 297.859 394.056 322.411 406.196 343.796 cv
407.703 346.45 417.675 342.568 416.763 340.962 cv
406.918 323.619 419.456 303.912 431.959 291.798 cv
444.264 279.876 459.374 272.367 475.798 273.622 cv
475.69 273.648 475.583 273.669 475.475 273.695 cv
455.033 278.729 436.915 295.365 431.256 315.837 cv
425.315 337.332 435.95 358.995 456.632 367.104 cv
458.083 367.672 459.572 368.188 461.086 368.659 cv
460.798 368.886 460.525 369.126 460.291 369.402 cv
443.28 389.408 432.981 414.883 425.851 439.898 cv
420.323 459.291 416.395 479.678 415.826 500 cv
426.334 500 li
426.603 478.44 430.765 456.785 436.756 436.229 cv
cp
f
461.173 333.722 mo
470.603 342.057 484.121 344.167 495.959 340.202 cv
493.349 343.698 490.556 347.468 487.532 350.41 cv
480.552 357.204 475.152 352.987 470.613 346.381 cv
470.003 345.493 468.586 345.573 468.27 346.688 cv
466.089 354.369 476.231 360.616 482.902 358.627 cv
491.221 356.146 495.826 345.977 498.954 338.893 cv
499.25 338.22 498.766 337.586 498.041 337.704 cv
485.228 339.78 473.736 339.121 462.497 332.005 cv
461.462 331.35 460.235 332.892 461.173 333.722 cv
cp
f
939.084 201.438 mo
935.112 199.797 930.198 201.711 927.371 204.634 cv
925.29 206.785 923.383 210.854 926.163 212.985 cv
926.079 223.222 925.996 233.459 925.912 243.696 cv
924.444 243.12 922.749 242.796 921.416 242.311 cv
917.054 240.721 914.416 236.549 914.253 232.012 cv
914.23 231.38 911.047 231.905 911.081 232.862 cv
911.217 236.613 913.015 240.183 916.183 242.291 cv
918.971 244.147 924.927 244.039 925.88 247.633 cv
925.875 248.257 925.869 248.881 925.864 249.505 cv
925.851 251.217 929.072 250.791 929.085 249.291 cv
929.087 248.983 929.09 248.676 929.093 248.368 cv
929.146 248.287 929.184 248.202 929.189 248.11 cv
929.215 247.668 929.176 247.277 929.104 246.913 cv
929.193 235.989 929.283 225.064 929.373 214.14 cv
932.484 214.415 935.846 212.758 938.151 210.97 cv
938.259 210.887 938.331 210.813 938.389 210.742 cv
940.994 208.243 943.726 203.354 939.084 201.438 cv
cp
f
590.231 54.3965 mo
586.26 52.7563 581.346 54.6704 578.519 57.5928 cv
576.438 59.7441 574.53 63.8135 577.311 65.9448 cv
577.227 76.1816 577.144 86.4185 577.06 96.6553 cv
575.592 96.0791 573.896 95.7554 572.563 95.2695 cv
568.201 93.6807 565.563 89.5083 565.4 84.9712 cv
565.378 84.3398 562.194 84.8643 562.229 85.8218 cv
562.364 89.5723 564.162 93.1421 567.33 95.2505 cv
570.118 97.1064 576.074 96.998 577.027 100.592 cv
577.022 101.216 577.017 101.84 577.012 102.464 cv
576.998 104.175 580.22 103.75 580.232 102.25 cv
580.234 101.942 580.237 101.635 580.24 101.328 cv
580.293 101.246 580.332 101.161 580.337 101.069 cv
580.363 100.627 580.323 100.236 580.252 99.8721 cv
580.341 88.9478 580.431 78.0234 580.521 67.0991 cv
583.632 67.3745 586.993 65.7168 589.299 63.9292 cv
589.406 63.8462 589.479 63.7715 589.536 63.7012 cv
592.142 61.2026 594.873 56.3135 590.231 54.3965 cv
cp
f
124.536 203.048 mo
124.788 191.403 123.461 179.787 123.684 168.142 cv
123.776 167.768 123.609 167.393 123.009 167.143 cv
113.662 163.25 104.083 159.942 94.7368 156.049 cv
94.2085 155.83 93.5474 155.985 93.0342 156.303 cv
92.5806 156.521 92.2397 156.862 92.228 157.288 cv
92.2266 157.34 92.2251 157.393 92.2236 157.445 cv
92.2241 157.462 92.2207 157.479 92.2227 157.495 cv
91.9385 167.698 91.6182 178.313 92.813 188.534 cv
90.1772 188.522 87.4072 190.332 85.623 191.993 cv
83.3657 194.096 80.1929 198.777 84.3311 200.795 cv
88.1543 202.659 93.0151 199.831 95.6548 197.182 cv
95.7573 197.078 95.8296 196.981 95.8872 196.887 cv
97.3784 194.937 98.0566 191.859 96.293 189.974 cv
94.8774 179.91 95.0864 169.391 95.3682 159.224 cv
103.71 162.602 112.193 165.625 120.512 169.062 cv
120.493 170.081 120.491 171.1 120.494 172.118 cv
113.455 169.599 106.664 166.398 99.563 164.046 cv
98.4473 163.677 95.8418 165.303 97.6567 165.904 cv
105.405 168.47 112.783 172.05 120.52 174.648 cv
120.668 183.38 121.382 192.101 121.382 200.835 cv
118.594 199.912 115.131 201.147 112.775 202.565 cv
110.259 204.079 106.875 207.203 108.11 210.514 cv
109.763 214.944 116.378 213.33 119.531 211.863 cv
122.586 210.441 125.564 206.699 124.273 203.508 cv
124.431 203.372 124.532 203.219 124.536 203.048 cv
cp
f
237.284 336.147 mo
240.249 333.392 240.501 329.588 236.178 328.003 cv
232.371 326.607 228.548 328.056 225.659 330.613 cv
224.032 332.055 220.622 335.346 221.379 337.839 cv
221.371 337.875 221.36 337.912 221.362 337.951 cv
221.985 351.344 221.693 364.752 222.317 378.145 cv
222.348 378.808 225.533 378.263 225.488 377.294 cv
224.911 364.904 225.109 352.502 224.649 340.11 cv
226.282 340.367 228.133 340.109 229.532 339.836 cv
232.34 339.287 234.83 338.049 237.097 336.326 cv
237.175 336.267 237.237 336.207 237.284 336.147 cv
cp
f
585.059 393.129 mo
585.084 382.762 585.108 372.395 585.133 362.026 cv
585.137 360.585 581.95 361.197 581.947 362.37 cv
581.925 371.96 581.901 381.55 581.879 391.14 cv
578.403 390.424 574.315 392.485 571.818 394.625 cv
570.358 395.876 567.497 399.245 569.631 401.161 cv
571.31 402.666 574.537 401.941 576.442 401.411 cv
579.128 400.666 581.961 399.394 583.953 397.394 cv
585.32 396.022 585.702 394.572 585.03 393.296 cv
585.045 393.241 585.059 393.187 585.059 393.129 cv
cp
f
74.8774 403.631 mo
72.0112 404.863 70.4243 401.697 71.5112 399.386 cv
73.0332 396.149 80.5688 394.445 79.332 399.613 cv
78.5015 401.431 76.6958 402.849 74.8774 403.631 cv
cp
79.1323 362.418 mo
79.2832 373.093 79.9033 383.696 79.5889 394.369 cv
78.771 394.104 77.8628 393.995 76.9478 394.072 cv
73.6221 394.353 69.5552 396.378 68.2915 399.667 cv
67.0659 402.856 69.2808 406.067 72.6606 406.094 cv
76.3462 406.122 80.9834 403.085 82.4087 399.689 cv
82.4263 399.647 82.4307 399.611 82.4434 399.571 cv
82.4673 399.521 82.4932 399.472 82.5068 399.418 cv
82.7607 398.446 82.7036 397.594 82.4321 396.867 cv
82.6011 396.694 82.7109 396.493 82.7207 396.267 cv
83.2026 384.851 82.4912 373.524 82.3296 362.118 cv
82.3076 360.577 79.1138 361.143 79.1323 362.418 cv
cp
f
45.625 202.73 mo
42.3545 200.43 38.0317 203.014 35.5771 205.301 cv
33.6343 207.11 31.0273 210.825 32.9697 213.112 cv
32.8794 213.235 32.8271 213.369 32.8291 213.512 cv
32.9863 225.62 33.144 237.727 33.3018 249.834 cv
33.312 250.649 36.4878 250.094 36.4731 248.983 cv
36.3242 237.531 36.1748 226.078 36.0259 214.625 cv
39.4878 215.13 43.356 212.75 45.6079 210.489 cv
45.7109 210.386 45.7832 210.289 45.8403 210.195 cv
47.4868 208.042 48.1528 204.509 45.625 202.73 cv
cp
f
51.6318 201.238 mo
51.0669 201.303 49.8687 201.7 49.8687 202.461 cv
49.8687 202.679 49.8687 202.896 49.8687 203.114 cv
49.8687 203.865 50.6528 204.126 51.3066 204.05 cv
51.8716 203.985 53.0698 203.589 53.0698 202.827 cv
53.0698 202.609 53.0698 202.392 53.0698 202.175 cv
53.0698 201.424 52.2852 201.162 51.6318 201.238 cv
cp
f
255.567 86.7881 mo
252.297 84.4878 247.974 87.0723 245.519 89.3594 cv
243.577 91.1685 240.969 94.8828 242.912 97.1704 cv
242.821 97.2935 242.769 97.4268 242.771 97.5698 cv
242.928 109.678 243.086 121.785 243.244 133.892 cv
243.254 134.707 246.43 134.152 246.416 133.042 cv
246.266 121.589 246.117 110.136 245.968 98.6831 cv
249.43 99.188 253.298 96.8071 255.55 94.5474 cv
255.653 94.4443 255.726 94.3472 255.783 94.2534 cv
257.429 92.1001 258.095 88.5664 255.567 86.7881 cv
cp
f
261.574 85.2954 mo
261.009 85.3613 259.811 85.7578 259.811 86.5195 cv
259.811 86.7368 259.811 86.9541 259.811 87.1719 cv
259.811 87.9229 260.595 88.1841 261.249 88.1084 cv
261.814 88.043 263.012 87.647 263.012 86.8853 cv
263.012 86.6675 263.012 86.4497 263.012 86.2324 cv
263.012 85.4819 262.228 85.2197 261.574 85.2954 cv
cp
f
167.401 78.2046 mo
164.612 76.3481 158.656 76.457 157.703 72.8628 cv
157.708 72.2388 157.713 71.6147 157.719 70.9907 cv
157.733 69.2793 154.511 69.7051 154.499 71.2051 cv
154.496 71.5122 154.493 71.8198 154.491 72.1274 cv
154.438 72.209 154.399 72.2939 154.394 72.3857 cv
154.368 72.8281 154.407 73.2188 154.479 73.5825 cv
154.39 84.5073 154.3 95.4316 154.21 106.356 cv
151.099 106.081 147.737 107.738 145.432 109.525 cv
145.325 109.609 145.252 109.683 145.195 109.754 cv
142.59 112.252 139.857 117.142 144.499 119.059 cv
148.471 120.699 153.384 118.785 156.212 115.862 cv
158.293 113.711 160.2 109.642 157.42 107.51 cv
157.503 97.2734 157.587 87.0366 157.671 76.7998 cv
159.139 77.376 160.834 77.6997 162.167 78.1855 cv
166.529 79.7744 169.167 83.9468 169.331 88.4839 cv
169.353 89.1152 172.536 88.5908 172.502 87.6333 cv
172.367 83.8823 170.569 80.313 167.401 78.2046 cv
cp
f
523.703 185.931 mo
523.874 185.987 524.082 185.992 524.302 185.966 cv
524.27 187.098 524.238 188.221 524.206 189.343 cv
515.862 185.964 507.378 182.94 499.058 179.503 cv
499.073 178.481 499.073 177.46 499.055 176.44 cv
507.352 179.38 515.345 183.162 523.703 185.931 cv
cp
536.101 142.788 mo
532.042 140.827 526.867 143.796 524.034 146.581 cv
523.93 146.683 523.856 146.779 523.799 146.873 cv
522.19 148.922 521.465 152.184 523.366 154.162 cv
524.661 163.774 524.617 173.823 524.363 183.639 cv
515.795 180.689 507.577 176.769 498.982 173.893 cv
498.774 168.406 498.27 162.934 498.202 157.44 cv
501.018 158.079 504.173 156.708 506.402 155.085 cv
508.804 153.338 511.947 149.833 510.42 146.617 cv
508.344 142.249 501.859 144.477 498.801 146.333 cv
495.8 148.155 493.489 152.112 495.129 155.109 cv
495.076 155.194 495.038 155.282 495.036 155.377 cv
494.866 163.75 496.022 172.057 495.886 180.428 cv
495.796 180.801 495.964 181.174 496.563 181.424 cv
505.909 185.316 515.488 188.624 524.834 192.517 cv
525.363 192.737 526.024 192.582 526.537 192.263 cv
526.991 192.045 527.332 191.704 527.344 191.278 cv
527.345 191.225 527.347 191.169 527.349 191.115 cv
527.348 191.101 527.351 191.086 527.35 191.072 cv
527.674 179.479 528.165 167.292 526.854 155.646 cv
529.709 155.743 532.746 153.79 534.691 152.005 cv
537.077 149.818 540.486 144.907 536.101 142.788 cv
cp
f
373.161 105.642 mo
368.906 106.681 364.153 110.317 362.948 114.673 cv
362.909 114.757 362.879 114.843 362.871 114.936 cv
362.846 115.039 362.847 115.128 362.859 115.211 cv
362.664 118.907 365.996 119.98 369.268 119.407 cv
373.418 118.68 376.723 115.432 378.494 111.707 cv
380.505 107.477 377.459 104.592 373.161 105.642 cv
cp
f
319.521 137.671 mo
319.017 126.651 320.206 115.154 318.725 104.217 cv
318.626 103.486 315.43 104.152 315.554 105.067 cv
316.9 115.011 316.043 125.425 316.254 135.516 cv
314.616 135.253 312.755 135.512 311.35 135.787 cv
308.541 136.335 306.051 137.573 303.785 139.296 cv
303.706 139.356 303.645 139.416 303.598 139.475 cv
300.633 142.23 300.38 146.035 304.704 147.619 cv
308.511 149.015 312.333 147.566 315.223 145.009 cv
316.85 143.568 320.26 140.276 319.502 137.784 cv
319.51 137.746 319.522 137.71 319.521 137.671 cv
cp
f
661.598 89.7759 mo
658.855 90.6084 656.117 92.2275 654.311 94.4844 cv
653.003 96.1187 652.684 97.8462 653.53 99.2969 cv
653.521 99.3438 653.507 99.3892 653.507 99.437 cv
653.58 111.267 655.274 123.167 653.423 134.935 cv
653.208 136.3 656.42 135.792 656.608 134.591 cv
658.338 123.601 656.976 112.496 656.729 101.443 cv
660.061 102.146 664.07 100.47 666.562 98.5288 cv
668.764 96.8125 670.603 93.1362 668.447 90.5962 cv
666.828 88.6885 663.7 89.1377 661.598 89.7759 cv
cp
f
631.084 84.5596 mo
627.398 84.5308 622.762 87.5684 621.336 90.9639 cv
621.318 91.0054 621.314 91.041 621.302 91.0806 cv
621.277 91.1318 621.252 91.1812 621.237 91.2354 cv
620.984 92.207 621.041 93.0591 621.313 93.7866 cv
621.145 93.9595 621.034 94.1602 621.024 94.3867 cv
620.542 105.803 621.254 117.129 621.415 128.535 cv
621.437 130.076 624.631 129.511 624.612 128.235 cv
624.461 117.561 623.841 106.957 624.155 96.2837 cv
624.974 96.5493 625.882 96.6582 626.797 96.5811 cv
630.123 96.3008 634.189 94.2749 635.453 90.9868 cv
636.679 87.7964 634.465 84.5859 631.084 84.5596 cv
cp
f
425.656 84.2881 mo
422.915 85.1201 420.177 86.7397 418.37 88.9966 cv
417.062 90.6304 416.743 92.3579 417.589 93.8091 cv
417.579 93.8555 417.566 93.9009 417.566 93.9492 cv
417.639 105.778 419.334 117.68 417.482 129.447 cv
417.267 130.812 420.479 130.304 420.668 129.103 cv
422.397 118.113 421.035 107.008 420.787 95.9551 cv
424.12 96.6577 428.13 94.9824 430.621 93.041 cv
432.822 91.3247 434.662 87.6479 432.506 85.1084 cv
430.887 83.2007 427.759 83.6499 425.656 84.2881 cv
cp
f
482.698 208.179 mo
479.012 208.15 474.375 211.188 472.95 214.583 cv
472.932 214.625 472.927 214.661 472.915 214.701 cv
472.891 214.751 472.865 214.801 472.851 214.855 cv
472.597 215.827 472.654 216.679 472.926 217.406 cv
472.757 217.579 472.647 217.78 472.638 218.006 cv
472.155 229.422 472.867 240.749 473.028 252.154 cv
473.05 253.696 476.244 253.131 476.226 251.854 cv
476.075 241.181 475.455 230.577 475.769 219.903 cv
476.587 220.169 477.495 220.278 478.41 220.201 cv
481.736 219.92 485.803 217.895 487.066 214.606 cv
488.292 211.416 486.078 208.206 482.698 208.179 cv
cp
f
959.759 250.362 mo
959.917 262.469 960.074 274.576 960.232 286.685 cv
960.242 287.499 963.418 286.944 963.403 285.834 cv
963.254 274.381 963.105 262.928 962.956 251.475 cv
966.418 251.979 970.286 249.6 972.538 247.339 cv
972.642 247.236 972.714 247.139 972.771 247.045 cv
974.417 244.893 975.084 241.358 972.556 239.581 cv
969.285 237.28 964.962 239.864 962.507 242.151 cv
960.565 243.96 957.958 247.675 959.9 249.962 cv
959.81 250.085 959.758 250.219 959.759 250.362 cv
cp
f
978.237 240.9 mo
978.802 240.834 980 240.438 980 239.677 cv
980 239.459 980 239.242 980 239.024 cv
980 238.274 979.216 238.012 978.563 238.088 cv
977.997 238.153 976.799 238.55 976.799 239.312 cv
976.799 239.529 976.799 239.746 976.799 239.964 cv
976.799 240.714 977.583 240.977 978.237 240.9 cv
cp
f
842.89 51.1577 mo
842.767 51.1748 842.643 51.2061 842.521 51.2417 cv
842.5 51.2466 842.484 51.2456 842.463 51.25 cv
839.528 51.9072 835.701 53.6182 834.059 56.2705 cv
832.805 58.2959 833.758 59.7134 835.319 60.4331 cv
838.076 63.5381 840.157 67.0532 836.239 71.0322 cv
835.157 72.1309 833.663 72.6934 833.002 74.2065 cv
831.183 78.3735 835.164 79.48 837.655 81.355 cv
845.793 87.4805 835.019 89.1348 833.445 93.7651 cv
832.406 96.8271 833.731 99.3975 835.813 101.332 cv
833.864 101.414 831.948 101.924 830.191 100.648 cv
825.507 97.2485 828.172 90.7974 830.156 86.7153 cv
830.322 86.3726 827.415 86.5337 827.038 87.311 cv
825.059 91.3833 822.708 96.7725 826.201 100.775 cv
827.385 102.131 828.798 102.661 830.557 102.773 cv
832.077 102.87 833.745 102.225 835.229 102.593 cv
834.916 102.516 837.704 103.924 837.877 103.8 cv
837.482 104.083 838.685 104.036 839.675 103.84 cv
841.018 104.036 843.119 102.596 841.703 101.863 cv
836.665 99.2563 834.313 94.9453 840.144 90.8994 cv
841.682 89.8325 843.345 89.2173 844.347 87.5 cv
846.047 84.5884 844.981 81.8853 842.214 80.2397 cv
839.701 78.7456 833.317 78.2666 837.428 73.1909 cv
838.431 71.9517 840.046 71.4873 840.91 70.0269 cv
842.793 66.8467 841.56 63.5552 839.621 60.8101 cv
842.622 60.3408 846.267 58.9946 848.176 56.9277 cv
849.394 55.6094 849.779 53.7129 848.469 52.3228 cv
847.025 50.793 844.804 50.8906 842.89 51.1577 cv
cp
f
769.954 56.5591 mo
767.678 56.4907 765.259 56.9966 763.084 56.1274 cv
761.974 55.6836 760.728 54.9165 760.315 53.6938 cv
760.107 53.0742 760.057 50.7046 760.994 50.6904 cv
762.068 50.6733 764.069 49.1426 762.613 48.9619 cv
762.652 48.3901 762.251 47.9014 761.243 48.0171 cv
755.788 48.6445 750.91 52.7944 752.047 58.7852 cv
752.828 62.9033 758.677 65.3745 754.073 69.9727 cv
752.025 72.0181 750.001 72.8242 749.892 76.2021 cv
749.812 78.6968 751.122 81.019 753.301 82.2656 cv
754 82.6655 756.434 82.8774 756.813 83.3999 cv
758.866 86.2188 755.26 86.2114 754.412 87.0547 cv
752.533 88.9209 751.74 90.854 752.117 92.6196 cv
748.327 93.5747 744.499 97.1724 742.545 100.42 cv
739.936 104.757 743.84 107.542 748.061 106.912 cv
752.592 106.235 757.301 102.976 758.528 98.4126 cv
758.531 98.4043 758.53 98.3965 758.532 98.3887 cv
758.571 98.2949 758.602 98.1973 758.614 98.0928 cv
758.963 95.252 757.482 93.1475 755.168 92.5591 cv
753.233 89.6357 761.044 87.7002 761.599 84.8174 cv
762.23 81.5298 758.408 81.5127 756.375 80.5737 cv
753.913 79.437 752.969 76.9111 753.426 74.2544 cv
753.912 71.4302 757.358 71.582 758.863 69.8032 cv
759.537 69.0059 760.113 68.3486 760.31 67.3066 cv
760.604 65.7319 759.957 64.7671 759.062 63.5313 cv
758.247 62.4077 756.864 61.6265 756.137 60.4136 cv
754.487 57.6636 754.891 54.1758 757.161 52.1299 cv
756.785 53.1348 756.855 54.2988 757.655 55.5151 cv
761.365 61.1567 769.94 55.6616 773.945 60.6074 cv
774.606 61.4238 777.656 60.3213 776.896 59.3818 cv
775.153 57.2314 772.63 56.6392 769.954 56.5591 cv
cp
f
913.519 125.391 mo
914.16 123.778 910.987 123.934 910.513 125.126 cv
909.105 128.666 913.443 131.737 911.762 134.771 cv
910.757 136.586 908.529 137.364 906.745 138.225 cv
906.709 138.243 906.674 138.26 906.638 138.278 cv
907.24 136.838 907.309 135.293 906.313 133.74 cv
904.936 131.591 899.704 131.665 900.253 128.133 cv
900.539 126.289 904.392 124.17 905.676 123.023 cv
907.504 121.391 910.024 119.39 907.618 117.173 cv
906.661 116.292 905.265 116.08 904.03 115.921 cv
901.599 115.607 897.894 116.843 896.841 113 cv
896.1 110.297 898.487 108.048 900.624 106.524 cv
901.701 107.077 903.243 107.178 904.705 106.819 cv
908.474 105.894 912.783 103.141 914.123 99.3604 cv
914.395 98.0181 914.392 96.168 913.157 95.2632 cv
912.053 94.4541 910.296 94.8208 909.087 95.1196 cv
905.314 96.0483 901.931 98.8384 899.94 102.154 cv
899.161 103.454 899.068 104.49 899.401 105.272 cv
896.303 107.317 891.752 110.904 894.091 115.055 cv
894.85 116.4 896.043 116.915 897.452 117.269 cv
900.108 117.936 908.031 117.045 904.254 121.603 cv
902.33 123.924 896.521 126.124 896.935 129.87 cv
897.151 131.835 898.483 132.104 899.977 132.946 cv
903.984 135.207 904.313 137.68 902.427 140.311 cv
901.851 140.59 901.273 140.869 900.696 141.147 cv
899.63 141.663 899.669 142.335 900.173 142.722 cv
899.942 142.925 899.706 143.128 899.456 143.333 cv
898.105 144.438 901.251 144.295 901.962 143.713 cv
902.571 143.214 903.252 142.629 903.913 141.983 cv
907.276 140.517 911.087 139.067 913.631 136.597 cv
914.655 135.602 915.45 134.409 915.486 132.932 cv
915.553 130.216 912.401 128.202 913.519 125.391 cv
cp
f
414.5 377.736 mo
413.771 376.574 410.734 377.747 411.59 379.113 cv
413.282 381.812 413.989 385.164 412.625 388.181 cv
410.952 391.877 407.41 392.953 404.095 394.659 cv
402.962 395.242 401.917 395.904 401.025 396.685 cv
400.832 388.8 400.639 380.914 400.445 373.029 cv
401.041 372.994 401.665 372.887 402.31 372.678 cv
406.398 371.351 410.869 367.365 411.702 363.007 cv
411.733 362.926 411.754 362.842 411.755 362.755 cv
411.772 362.647 411.765 362.555 411.746 362.469 cv
411.656 358.979 408.686 357.985 405.515 358.578 cv
401.133 359.396 397.937 362.969 396.347 366.994 cv
395.424 369.331 395.925 371.131 397.201 372.141 cv
397.459 382.677 397.718 393.213 397.976 403.749 cv
398.018 405.437 401.229 404.978 401.193 403.521 cv
401.182 403.07 401.17 402.619 401.16 402.168 cv
401.268 402.024 401.341 401.863 401.362 401.686 cv
402.105 395.512 411.434 395.1 414.685 390.2 cv
417.31 386.244 416.953 381.649 414.5 377.736 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Meh) ()
%%Title: (SF-ChoirGroup-1.eps)
%%CreationDate: 5/23/2018 3:17 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6D3&#DOX9d.JGqoaBu$;\fA(bcRHY_C:fT&m4D;25]6gCkNIemBfPXGWUd.fEp&=fIF&#-[H](j-ZIOS15^Yu)SuDO8,9u71
%`6#djX8BB`]_VKuS)<,<rI99FZebP\D;.e=m!mcfTD[5HrKl-NIJ*9J]udUi0>I>ReXQ<JH2%$oX099eGl,J7G@1CJk2D@ShVA%o
%`UE1Q05gdX='p@Fp('+V?bCXZ0=K3_0AC-c?[qV2q:g+#^3G.6hej-oca`T(I;O>a!Uqo,rNfj[BqjLuHN2j)_N)n4rq70&k>UB_
%nG10jr:\\0?[r%Rh2D$2hnJn.5K0LD^YEtqhnAmOKmmG8qtWslcVNno2pYh/du/.YGcu2F**_*WmsfY96i8#b^]"S'YIW8&-VF;Q
%rmA23Q68@U9DIu.m),IbF1s(^<Tj2&Dk>o-=W?_^9l9UiloV!R:&rC3G`d6&J,ANSYJ,8OrY==U]r9\/o<[6AchU4MD!ulnNfIJS
%12ld/9\I/<8)NTV_6<k2orC=Tr8tc,HL^g3GQ&ZPhS&sFli5Sn(H'')iptuUo>RbSJ+r*uH[B3`AQ/'U=)U<Qon@73m/R!A(OW9]
%)s%$IMna]1me<pARi]<BiZ#N3]A.Op^\R$8^OG^n=&?Ef-i*F:YMT3Eg],8DrE2n_[e)=mG5ST5j^u-\pV#I[>bK$3`B3D'AES.S
%VnhhAZoCk%C\j%Tj0.@Rrr).A5I^Nu8(TY#eR,t9rV<.d4l6\HO*>\-:4HpSoaA7LnG`Be2fU2oJ+iB4PKn*U^\SsGrV5OHLUUXM
%Km\l`pSR=rC`n,qp@nR@isU?LL\U!^^D@5@qjY('_s96@n>DoVNIEfMqoor7fIqaEmd2r?rUS2t^&@SeTA4kop)dYtr:TA7YAX!U
%)ufQ/2a=#&`OkkoGl-o9m-?;hJ+_e<caPQ6J+_8TER<VAbH(@js7tnf?2Bm-pqOLgq>TbC;om:'If5?-e%X`gYT>`QqsMEr]4:`P
%[eVN\[(#TYmbda"fD,*Plu/c?0)dh\UlTHnp!jjs^H*B;gO5D5roT+TDdL(\%kZYd^Y3U4fNUKKM%*h*s828,9N1>^m'6%.f9c%U
%2`Ud$4.YZUqgZ&Bi74=C^KsF^fAk"n2j/TU,<id8ieuF'J+qs'It%@ek5O0q?iT`BhnFO9`B*icI_X0MrZ-KB4hm0bs7+9^I/CnK
%YJ4>?3D4g23rJj9(U&;^a04C8qJL3dKE'bs?bb"[q=$"aK;UY9p/Cj9YH.\1Ha^?6a3J51r;Y5KIeT"$k%!SarbA"E`W$mK-!p0&
%kHE,QI`oP,2n/V=+'t>Rrp/29pa67q*qMV0IUd95c0rAlrVk>%2W&uZ(#7!%hu3/)Y?l50`0S/"%bX%PH0m_4rTn1sp5CnJmbaPD
%pr0i]T>.f`oB/%s\c:Y.bWgTa,9K/)jIC/V5QCA>J,&XLo8dLP[Fe:MP3U\Goe3l"S9FfeqUW[%:G^=cbZUr)J+_Ln]?;?WkN`-G
%;7k`(hD_^GS\3@J`Z[%ZJ+i%IiVr.-p\]O*flc`[B?)N\a8RZoiYQOJq#':-2da>?]/[OWJSMiVs8;+/g&*W&Rr\5;-0%e+:\@NT
%s6I#gVqX`A+82ric$/rt*V%E>p\Yu&#QB.mchMeHhoGXW5;1df,lcrskL34!r2IY7jo<bOCL:lcq/1ZF/GJ8"4=cJ8X3!9%[FMta
%3pNg@oq=RMO7deQlm>?*XgPj%2VWY,B[>DmVk:?ZHa8]hpV)]:me?F#[QjK15.R"dqqcZAIJ1;Pd%C!OZ&N9Q?Uc'E_rtTh]5^',
%NQ:R:RRZ%90!ih]pGq6ET3)%Lqs5DPqK(DVT=`;0St?8f4S-nZF1Z>ert"tHNd1AslaGDDf>erl[]`L$ca\A"J*tnNhEDJDH%qA#
%&cY&kkBVGkOP+"<*.KaDAu\>^VqG_W:QNi"T-Sb(C$HA`rRgIH0E/6/#:c)8YuC3*52&MV*pdrdT0)pDq[@r?2*WlCG\/GrXQ&j9
%-dPK*W5QeA]Eu<:8,M3eqK$SI48V_K%/Y-qG5IZ<4d[ug'Rjj`I/:rPZB%-c]]-G=DM?sqarg$!*q&Lcn*]B;\F6;`mCqEn)d)?R
%1Bi'2bC6t5^Uq+IGN5j`m<@s#hA$ual#&;"1-Mn3HC4GJc7uqFA2DIeK4BsW)p_5gT@mf4S,Q13ibmK*9WO(cG;B'f]Kb,&Gj+n!
%q9qeu[uk',Y)S6H,9ukuf6)"eS[Mb\CDfo3H9HKO\R-F@K4gM]hUD)ggrpEq.3?]^B4Gef6!DM?V1#]Eqof97SIO_!K=]_)hJ@R&
%ZQXg26[q$>:eYL[HiFW<Xpd*#btNj\W+J:9f<Dnp6Z'!P<FSbg,6N,P5h7<;G!-;'Du\>Uq'gX.\+YQb13rfnBG\54K?X%hX1e)[
%?MuPm\2.-00U6l>bH[Iu'N:<09%-L[VCBp+.FU(OWop7&acrloZF+V]lMN6+oW=b/+!1*N(#'8j-eT6mWPDflh;I)A(ij+QP>RXN
%k](P7N#IHU#)>C0X#:D"q`M2.E^0"f_aFSQSHd5"#7:^XVk<`,8N'*n6o7/P)]BU3_JI9kI^c].D;:<cB/9AJs2XcYetgZlI8?bp
%Hg:"sPKDeYpi"`1rIOu23T<shOHu,Rn+uY>+&-/+lb&67giJE,4:aTIbi`Q`nBhZ)*<q"$_]KpoR3,/ZnHpAYUY2]gh*+K0bto-M
%iO,/CYkNdL*0[q1o/eaF&";#8o:-J@9^UA(TdFt^#u9t#_ko(]o(GXe6t;\S[`LAn\MmIaCd*<g-i`QYl,2]+Nudb#,P$\F\VrZI
%c*gK(he<SaSoR9RlunkAp"b)\F`,n3X_'n4V9a$skF<k9q;f3f"UC1aSDZ';]hNp^K&('T2;sX$.]qN[NPk:4DKWs=`dV\:s#=<.
%?[aP3dl(g?3"DgCSVb7H4.U>;oQBK_"79fkal0F$hj]YXg9!@bVb?p'%`p6>2J,l;*q$+TDdA4TgY+PJ!:2FYS,$XY8E5'aof_>n
%^O,S7`L!bl^\PR$DA!#1O%@UU?OV\-$*_g!:\od+o_ZLAGIe-*F:=`q6HP0W)WM9b2(h6H;>K=?G+T-0GZ=O,IU!o(d:XHeL<0%4
%p+8ehrE),/oa72cSoL#+FBP3-?'QMSbUs"o8<\<p6TJg&)bhR$U7"D.KQh;8GC$uW54:sJf=]o=m>lEF=9FEY%taP^'M@[uO%kqu
%037?:ELlM^AQe737dgbL$U\S8WD+*K9J,[+4h<(71PJ-iJl$&HliD%^<,7kY6#"TUPM[&be>BcHHGOTcnWDiokE0j;\hL#Z],rV3
%O2ir(o:nME;$RgqNgfp&O6_UAI31K+&#7k!nLU!6EGFc8(p#Sn&<!_d=mest*_^i#iAAo*b4LhM$C2DJ5;4'`iKH]>cV1=`8,_X+
%^ZC7n*q0(i*:^W^n"Sg@D)R5[-F4Lbpk-*hSA<>_NP^'>D(s[Rch8$$BOf[iRTjVgR$2if'7ZZ"qRgmLg3o>ZqtRApdUAJ,3pQ:b
%R=sN-!ZHbL$>L.'4OP<PBTkU-7a0[*JL_L+<'D1p,?EtLMn5N8Ndo?a*oen0g.15]pd$O*o.ua[=S!*q8t"WcE_H2^gC@SS=f,n1
%`rgBWbVn/3k;KW-ESBb4&o,Aeg;:'0q'QPcR"LhCmNN>;TNm_0T&VJ5DW[b3V+!d9+pQYKs4Kd=LDA2bVEn1Vn6ZKP]ODgK2b4'"
%'qf(;dK)rG+PK+Z!"f_T".gEUj:ah*5RE$6^Uhn;DVnr]Gl/5=`&"9(m[0NLLlQ2;b%+1T''>>@Q[>T8#1G/"OshE?@%+Y#aLTlM
%VH0J[DuL?h!utKj8fpVJJ+$\)Bpuji"[fF<HeAeT?li^^2]eaXI%p)@a'Uso`lEkjGWOO*Ei19Kdc&#NJdO.]HmABECjN2,)UjJb
%pW*CPe(%)4GEcf]q2reD:NF!ibiV*\ZFS'>mQT'jHA6'^XtK`.Eg-(\*]t)RfuNUPcMlhKKN<>om[5h!or&!.4k/t!GL);iI4>p0
%N*5I:jLh*YUjAKKYHY2\]]W8liUmr#6;66u!Tg`B<Q_5Qk>Mn`oQkr91\pg(.ocLsn1#O2FkZ#.;<m(LJ+Vke)ZF&0>uQk-d)8&<
%N6Io*@_P!$qrB6Qf6P*Yo<k0np3aR:/%0YD\nX0a.q@sJI_#1DeXs%;GAt+8Gad7MHuc&ZXu2g<L_Pegn"5''/,#k\<ug@MX?:k&
%r;(E`:TrNUqu]=cTc`iD3[nKr@6/oB]1le=['@`sH;bqmbr^NFSM^GfZuR*+1&FJAMEf2@r_bOY5&/'[;s0"631?RQI+pEkpOCWh
%5,7Z(=pb@J/l6U69Jc$h203rr`@5nGn42TJ]-"huUlTr5,N@Un9ZZn)['K.S;hFgR-cZP-rco(R3J7@Rd'qX&*K)a\U,he`/)/0A
%A32Nm1t7PUB+2>9q-8WWU\&,!'#h%Qq<N$c^Q&BJ.Y7+^dM&P#-H<d;_m*?Ub<=VmW%f!4e@r?dd;\(An*2@>SkY'-k@9-:@qWs'
%qM<Vm?2++e8))&t"T?Y=HF5u.p>Q5R%!AU.EmNe>/k2uITMNT\7df)0#j:tW7krf=YK$!Ej<@.*"=TW,CEE[+#Y3gZ,VP<^k1;]3
%&SBXmB@ib1]7/&-(Zs;<(XJ@T^LN"h3Hc.c:K_ki?Y8"BX"sRp[j0oS3VR/+%*r!\9U2lX2Q#aVl=6oWIJV'cP2VV;<i0V7eB?,P
%Zc?"pbj/jL.3k?N&GaE*&YUEN`aPY,iRsuc\SPc\5E>2r\m5+%D^7!R`FG4sE'VH8@ib\hi@p1r]pIl7mRV\0Ir*nIFXUjPd%b5o
%_j;uIS*H3QpO3:[p:R)!e>r3nH52kPh27<gd'0j:KpFmPZ*Ta-f<PBi%'SXF1Wk-G@FQpY1=^E<?/l%SH@Dm)7b&6bos)Z?1s1hL
%I2]0_C77O2K)S#^k4_P7s2bssBS,J:KHh<1Z(O&(L%FXQG!qWACl,5b#&pVDf8'<#kels#*,b@rFQ0A:hbPn!1JB0j\ec.G6iGXW
%P)u<gU41OSAW&bNKXsKe3GFFok!PU`X!Gs#A,bS]R@"62,5X&UF8\4-5Q=Kp=/(3:D5#JtRh.9G1VDlZl</WYJpC=>hk#@@RY,^R
%g8nqbPX,%@7nmn4MtO>Xm[3%;1Rq>FOVg'/]VK,gYNc\&4!rLLHRc-pA"Y3qW#qG30'E<Y?-aP8[G/=,ZaXUk^ugYf(*I4T3udpT
%Nj`UZF%hVck8`RmA"9O<#G3"j2fp;V0fM4AcCAo$>cH29;bl#C%;(ii:U\ICG7&K[\:9(Eqb^1Q4e;'#nU;9VP)[<H"ACkoP0?N\
%A+C=Je:GOf;liF?+b9QZN-uh#BG*\>1OY0LDBb8-dB)%(d6uHb>plAFRau&EMOp:Y4u5iWDd#/Z?)-ZJDRs#.0hObMR4^]X$%sQs
%^XS.$R`pP0*`dQ&Cd!8GPBg'fq,&Mge;58ii^]R7:-*A$jCbcn,j(bCcVC=i$KL2RlgX]I@tFRPhXt*QM;KINpH?Cbs8L?JhnT#K
%C5#)aIeitQ8H**iraSLu@n?T/8H**iraSLu@n?T/8H,BbrF>WqUJC`c'0kd#O!4<0'p=&B/ch+XM.T7_#StDZf@U'!$ILs8]rCt=
%fjhE?T!s'7qb:hmG&CNta_BV#1)4*[Sc8H^5N(F;oHaJ;J,`#es0).fs"rs^ltA>m](q-]Z/'g,.JNZj2Mb;NJT&852o3u7h>Hq7
%]IrQScc>gjoQgeI."(`\mbYX,pA-)VQX7?%j3>p#_!muahnK$jr)s#$4qgB'BD4&creip%Z:fW>>>jtg8*obqid^:>s2-cVatqlI
%YIuCE[[UdWd;P7j)\W4Jc2>'0quZt)Xb%u"r<r$og?iK>lD@X5-fUOZC;I\[[sr6sh*>Ac1.-T.7fi(CJm<2"EkaYQe*%7h4?D-/
%2F%,LX_CNDfFr"FU-T/l;@hQ":Njjjhi)Ym&(ZbIpY1ih43k4.n&8&RDgQC!bp^&**Q(Zc;L@budL!.Z#o]u$"?G.I'\EMln"oCB
%]\>oT`CWWk8%4il>3QZY@ZQZR)e84%>3\.pXgVBu[l,]l]?T]BpMr@>\\=Kb*qJfIC]!Ken!XP1T0T`PXlF$egMG0C^74LGQ--RJ
%]].enibCiO)jWN2Bm_EXWOlFp-"`!p>oSf?;Ec--qNeFqCUHg`FDNbEZ!Y3cYVC4Q-"E^@pFunt^\BG+G2g")Lo^!N=*l:fl4PMn
%lAdgY\QRXDSH<c&h-P4Q\B=cY>EBJEm\Wn8T&MYGc$2TYl><!GG"p_..e\go)#Hic,q[dhIMr!VgOPYECet%l&piP,FU=(j0JJOQ
%Km6-N[p$;8745N69",be6TD-[1J+m3CYq#,G)M/)Anr[K2kD5.GMK/,(Hr8oB\(j\lun+8lf.2A$=ZVLC[kKf,I%Pf:bm:u>Ikh4
%L%a/TY\V],[\7Mm*mK-E(:MIW/?X0Ko<-j+F6)Z<8Kf."Mg2nFm+eg^rk(6N#KFTO-/$o3R[C:8il94oQn19a_fLCI498&XYoeA6
%ED'CL?bO`mpXrK=G4a&GLIM7,7]B5ah<lM*e+Tk$c:k].8(OcN"UHjs%-W)I"/H(eZQWu?Us95pa14dNffM.9h,J(Ukf9b;5RU:o
%?:I-GB0e5Ih4>IE?>Sh"=J`k&S#O0:f=8S0[]\8X2lV'Xp-bglfP+E"=)68Lm`t61fG!0ri[*;7d8Rp8@)U:&\1JP2p+FPD9TXE8
%KDk^1.CEP';CVtU)\-Wb)]mYX-7LbI'^Vg;ISC=^;L92ShX.O0%Wn<E4D(+$R>m`:^"&[^\nhN\F-s5?X/u$_?mb7igDhtffe<\\
%F(PiS4(]2Oq.\WB>M3G.bX-SBJ$AmunW6\>%8qP1OE/i:;"03UL9PHn'YmQ)qnAYY#u_n/dc.lU5SY?P%<MoSFl8VV%QKYo=<5"&
%]]-WX40p@_G?Ad1M;<Pa#\_3Up6*_Qc!8j/<A>ee2EEn]X:7tIk,R7%aK,CIpGsBO>``R)B2O1.bljP.Gss\("R"UL??rc72q'T8
%A"te?"mFXuEU13HCj)gXh!uj"Dor8,o\8eWX3aMO[YjO^TtR;,9/[PAY.WL&_t7@5J8*A8T,kk20]bEtq)9[B#,rWdk%HqtI-90+
%fO0uhZI<qO!@!<:hY1nK%dAN6fJV<c)[:rW#ub%A9E7PKe`FGXs6^XpR&/U!/=:mS-W>;3)$V.Jd;4Ui$Jr*LjA8L;.OrZff@r?&
%YamE,Fk[V_c-6!"h-G;BR_[]i;dr3Ph<q^/<R]B11D69D7]^q@-7sPQAXhI)RjZ,*fLMZD_jlT9@)eL"0o,&tN#DkeP]67!>"o88
%7]JI&p=,,OD:8oUbr=bn'cqg+FG)s,2dQ-q0C1T?oCr1Fm(l:g9T%G:@?U"2[:kp7iT4LhRPVH`C4<^`6/4k`*>mRhZWq^$nUV4m
%h>U!kl*KItA3.f@#h7YQ1oUq`$#-H/s"fCeIDru!Nqig)eX6r/"48!^ZkjEm$.dHd.L8#PP3fUFf*KATIBe"8Bc_=(DTMh%=e:/U
%T+\eq5X7,DCh=3EO"WFpj4):G1mda0f_q_8dQ!%:QV:Zn</V5a`_;%GESpCU`XSbhgA<3+1hjHI)f502]4q2g^!`?qiB^u1bMbdU
%TO9Hc>kO26P\]H%/#X+fL3LcXW8JG[U+\QqVAbFq*T)Y/i,WR&b3c(C'@$#7mFV&l^jU!N2:FLa(=_B4J06!fZY4]LD@MVh$$L+q
%6/aN*n[dC@`I=IT>Pl[iL(0rlCVO#s`0c'UQ2BMlQ)_CCDpL&ZAnIEp%;uN(Bt!HLrcP!"AOS;giQN<3LBA3m&r&OP(?.V6-:[81
%?[6TcSbiab+N;mc3:ttIRKOdIFJA/Zc(Zeu_di/`0saG,4*FiIFPKj&_kqF(_^i+[hOuG1iTTlI2ijR^1p`lj3f\`T7]sVJRe<a?
%KId1`r;b!LLWbLJaNQK!A7/5+`Y^/B/H[!G*j;cgTn'B-md.R='5c8R&knBHWGW&heo$s?(/@X7[)!Hl(8Lg?:+u=YN+7J<(^bH6
%*"&2am+GB_7%2(B"&Ybk+!2.cj=JKuR4>RH22B%2fku8(@mcJo6_H<cM@euf2SM0ZY0G1QW0kS<QA-Aql:O/8P/mc*;j&)H73"%d
%':AT2oD(+LmP*b1b:h&$J[B&GL"0Nf"SCCjTP>h+IX?ktW,V=YIM2h,UjBuklt/]^F>/X55^c6)0AQ;C5L&%J0/nH_g9-d."4f@T
%cEuWI<l7\s@@GBMKBh-]3I<<%h&Wi8a3<Zd.0G*Gr32V:jlmoL!6mke(^'q^<(9KQ5FLm^`%/<lMd`&YAI<I4'&Y`-j%qG\dkmgl
%EsG-'E/JkP,D7lgVoNia9KVr*"#&p.5gg.gJVmhOG-l)R[ctCS[(BCT,D8'8Ca's?#dOod&lpQZaDN\n01cDP#S8^:Kk?eHm?mqP
%eX9>;B<Q3A^CaeHS-JRHPD@Ke;]-V`?A`O\:`sCKo=Gaa0j]D2mK-C9FP7*d^9q>4HGTq,pt]OT^(g@Z'HdU6?[*EmPiN+>4&@iL
%.WZtP[Q2-u.jg60&s8F[1X8A#Et8$JLKtgaZY=)rNufO)3<ggOf'+mVZ5F0`F(!uM@+#>_]!$o)k,-Vd[b#sI/23k;D\%HU1s,r4
%<os&M)GAZ_fBr6>cEt8A>(0^hl#9%ZB43QY<-Fh0N(5.D\#p"0LJO8$5-h(`OkZi(0l:g5IsGI?`A!S8VG!:s=APDJZfeikKbYiQ
%gmhNn\nStr?*-EK/:&i?]iR=&lir5+_[G8^Yo>h^3a^5gS/2\f8&>C$&)GCPAqZ#,RuiPE8#f;8@ZOo/9[jfVKgn:7402%F1EoGe
%2_\%daX)FZHq(VL]@jK1)CD:IRC)DSZ]j2/eD5pIJ61,5S?:U(4^rZQo;YCYCBDc'Ql^IMHC(u"qn\mlb!e$f13KM"8-gBoX5E/e
%B#TjIG1EOuC[#[iO+mqD+tH1(1F$86^9@#3Z.Q;n6403ADGeWMlap;:)G&c-Kh/]$9sNm'$%9Cf4a"CJf0%g[aNRO3;S+S.[21m^
%Ju"t%V;1!^9A:sDh+VSc'?c0mnJ7o-#2kdlr6Nnl0JET]Y%dJi66<$5,/cS*&)%%H01a<4OJE[k7S&&HOCX:(LH$No]^2(s<bhNY
%Y#GSM,\re:*)(D,UY6;.AuIJ*8=15Sj^fCq]mI&WZ\*/'i+1Wij->M9?];COH""U^VP"7\M[RG-FAc3XG]C;(;\;Q@W\,G6E&l0j
%bX20/5#"q6$p5gU@^oEO!@<Pc1hlBUP;7$l*!r[,mH"!2H4u<MG>d?r@/u=uXuDo!':TSM&D>7G^k%Kb%N37sNhqG?VK+3C6A*)N
%b#6K#;]Di"/q\G5gjN3W4+CdD1YdgY"10N-D\8^H1lV::aW&M/8t%bi1-kK4h)oN^0aoNWb1P]Ci"Aq>b:6(\s4WYX,/aqA235]f
%\_r$H1;Z&6"/3XI4"e!gaBu4[)lNd[G?g55cPS!rm-q@eSElGWe%!8*_]0rMAB66t-KRO.NLj;,<HNL(#rgO.M"dI027bb@&%4(s
%Y8-k!N5;o7*Lju@WH#h7j;0V(=m+R#a.%bB@caHYRa#$gXH7\;NF+[IF7REYK7X?toNCp^@@N`(ZNgiG5U6YtqB"._RG7f#$#HY+
%J/i<H.GPL@PUf8$O;%:\8pbUDT7%c-]#/Dp]#<&</^F%1penu8_l98D5!r<S8O-<GE5TmQp0G'>rX)f\3go--E=NA4-NM%u:QT8o
%^/,<da=\]5a+UTY"6S-om%$0'P\+G5'.rZ@%%7%j0^YB_l%PIdQ^f'&EjH^ldl7\ubV1!?%jjiGKM4<AY'-:tZ*VQSaRJAnMED_<
%(si[fq0q6]kjEKB</6rOc3\gALj:1/ZJi?1RK@)%R(#iCOU?^tE@+#+`eO*WTT'#KA51E)c`[4ij>g%16R^%Y_&G0rfk[:3=a(5$
%Bj?X`\6h_:#<,1jR9gP[D.9_`(HtLQCG9Q:ABrHk]QqtF*1MmLSr9/IqrmY!h\=e4'F"m$JXGJAPg1BgeV5=P(n,5!KpkGk_BKr\
%-TZ!ScnT?FYpKUOjL6"r@4i>\U^Zj'6ZI+`ZS!raS8Mq94R_aa'G761JeWcEVO?aBTpDSOWp*ch6imtG!@b\W*.BfKEUkX'Hh`"A
%VnM;E5hbqSc'Zm8_)`<oB&3C$]OkZLNF2gTVhPu(Z_DIT`WR1L)(aJmnqsgoZ6<5OFs&,bJ7d".9Uer,:nQF`8B5$FY%CZ7P)"V_
%?imoZ4<)^I;2+T>n7ts)e!gcT!#N`[*\.JL*Y3#od'Ok)1(2n(!L[+eb^2nI+XlDE)X]%3di)8lVWu?R3i')$bsH1o`t4@e=<qC=
%$6)gHV\8:8DA\B^ic5gNd>-?33"\H^1F:-uf5Z;^C\oF_6BjD3cjWXrL/T;S1de;N=B+bIql(K9I/[hKkD!tfiP<Zh9u(&>*&D@k
%jdm\7JSW0]7".gnfr"Zo,uO#?O`9]fHF&Hr#Nij)`dj'/'>dn?r.O,j.oIM&4GIqpm+!*`Zfk;D83bCnKVa$EbtHc[a#hoc>gON:
%e)0M`g4]>fQG#b)?.g>>5"K3LaX2q^WN(?9GE9T(J^0Vg+`;p==B<Nn1Mb-"H'U*MB-,nG,^noD!"pDc9obCtQbfu\#@YCs6@_A*
%&Lj25.mebr!&ZLEhR9S%@R7l4\RT82c3\hf\mo+@4NWLK1/DLHBp>8C[/5<BY]eX0[GM0)"k)J\bespE_^e".]LK?%@N=aT+9VE\
%bXSN=;P@ij)o`4-W\3f(pJn9e"E/F8PEc;09.PLE6TG;?)+MX**p)%U=$;Xn@n;A9)\[]17IZQWL"$/:8?$qa7%)IW5mJDt;$If!
%g:A@fEQ2[]-OEM_FI[9gRNAO7Nd<r,3f4O3E.E"sq..]a<I&OqYQc:#ZOQoiSY754-8q<s8B`!uD*P`Z+C#F%A4]%Z1jtOqR"O6(
%YQNDK&GS%4nlh'uZ;SX7E`h!uJr8(K4<D1hR.Ofnloqko[tjMWlLBi!lTAp`&-<mT=nABd^>#t^dB<(L?s9h7^WpmA#?$dLVl,Mn
%(dLtQ<C*f20K"sM87IW08-#HenI8=M2C20+nEEJu+<TN1&S2Q)R%!`KC4pjHR+4OkKOq<Hb;8;`=<:.?ri4)[h&m_sRS:MEZrnNK
%nl,;[KOFU[OL"SL4eCn:76Sps8XDH"FMVkLH3:)lDO$K[?(%)"7uq&AC#6+o;?Qq+U\c2KZ9g.e(Ya)D9mJ+>;4Oab$F!*W:Lt\'
%-qk=qVWD]o>F?W&]X^c$0*p]S2br^1XYY)#-j%`qfW+0d&jnYFWF36RpR'%;.7o6apqS,VW\s=oiYgbk[oN5+\-I'm.oOSHH'AIK
%LiEg*#?P-SLEA%Y`JZKo6[?*+WcZ][ZHXB<1f\@D[P(iZ.Aeom659)Y!8"VV1$eX#N>%qVcRXf"0HrKrmBF[=*VNkKJBk%-\D:mJ
%VT-cZccfn!bT$[C"]_8Ug<>.!#&j[+*)p%u-m>B9ZsiV]43ZXt\UaTqo7K1oAYu>+1,oNBReR$(&'qa6R%+ZS/'*0I5))jl$)'%V
%=>gYgm+2!ZTb30Qc#nb`TXPU:e91VFfg7Y=f?!`D0"C)'Cp)-4j[RatQVFl)q"K#%#SO`QOk@lnelC'?,V.i<Y,I($0W!RoQ,j:Z
%0N$q#nOgm.;qVj@ZOh!4etg*&G0L+''[BRQa^a_)Q(^Z"7_&hH%ZjC8flL[,38%dl.%.Pfgth1q_5a`!JPrlj?QFYmnct)W2BLEp
%("+8Er!7j?2%R,$QpPJC/b3paOjlc!Q_cq%N$]1*(?2@""!g`+a34,R2Yj=`PNC(ej>-aq.e8/Ro<=aZs6t71rrmt3GoINE'>o=b
%B*-Zu%J/pJ.e#d]P"bQN?tM/*Xs*(gn/oAL;H>r)a&=][R(/QiccH""]+)R`(2;WVi^>8VDj?+08E!3qG#ZbTOg0JP<TL58[T^L^
%bBi:>NL:6XQX$U`3PSRi)\ASWYL_9iSug)(ek:1l.f!R@k%o9a+:0/u\KNI!'T>tBOUsDjSa`n;@M:(4A:WX-UUC=j&^0^Qj7_82
%KjTChU.,L%_2/<;T`iu[4`'4_MJ7e%OlH\X6^c=r)GR_3:<.5T/S.`Q5eujn!dO2K5\#o:7%!p.OqE:W,X3dLF3%mXU0J::'-f4N
%O_NbiOD_CsR2/5e$&Bufb$DRUXXQ16jN<U)"m1c(FE*'W;&cS>P//%YRj&CfD!EI7eEOFmL!;p$`0]3]DSY>kVNUVW)Zar=lqF"Z
%`=o&p_:^dT2eCJ:.OW'RGbVhS"C.=".=e%Nns]8T<s[;iUN0K/#p3b;Kbh4E@#3kYYBfD]C:9VAhnbZ$g)4k2W)`"d5Y="YPK9S@
%9&r9!3ccP>G`fK>EcS@b%o$(1#6kLb74GpX?Rn/&"_;M)7M^HN[=t8Q^*,]*[G,9o(>g`cmD*:.F&>U$&9P]TCkU'[Hp=_2&D!'c
%ZU:W`?'6G,]4VU.2Rdir$f\W8YjhY(V^4(C3TG7+$t9.UntI8G_Z35D;jbHHEcJ,^!OMG5XE%G3F<aX;Ae'228SE0tffDkWL_s_/
%^gPWAe%GeCKa@ecUR0gq9a.K+U[4%N*/j$2fYL>HFHF?c!R?]?&(Ks-m38R:C-RZ)C]Kf?m7)1!V"AgLI(q;d-S'3K_!<?6F8<)C
%$\[&fODTZ^_9#":J6<?"O:IW8JG7e;WWF?X@5&;'^kN.V4"^g_5;;FO:g$iYE)2LtL1!Ur8.NEjY_*LGV.'QaAh3tcHs.^J&STqJ
%I^E<Anc@J"AHFF>Cq+eF$%S.+_P_V&bg#P-6UVSM?`WU$!F(F4,g):OFRDln3O$bFKuK-s_P!/ZfmV-I^mWI^I!HcGS;Z769Gl)]
%)$#%sI'Cth&9PaoQhs&:SR?:ciJH!!+*-Y6a(*>GPb0s$D(=/rY,3!jG0aU64>Z(#PV27C`"jR*=p6R!,M$C8?sQmKgR?Cu,6[+Z
%J-g0#<fVG-2UmI/KM5B_T%M)'R'5[hTX2H:?"TBK9&S0#+,IK0&m,`E:LZe^DVn1N:=$9KW_ufV@/U5e,I1^IAY<FJSndBV&>_RQ
%A`"2t0"c9!SeSg=bg.r;)Sr(kGN]=fJITC4#im]U(<>om_%.]"E![t+-ke9d$,o3ASV!jDYFNTneuk#QS@p*IZGRkeQ2I!e[_#pZ
%f@00bdM$oRX=$fD794*KooRoGG!Q';Pn-E2pqj#4Gp;/K2t=uAIB;,g-U.^C38(A4l-4_Sh>;E"hu*K9-hm@Z0402"j_s%jIt<TO
%G*t@,QgOuR(s1M^^'q8#$4tD4l3^36+TuCu*#6r/$X1Io*"a/%_p2)aq`0J,V.B1p+4f&(&gZuM.'t_>ca0p3MSO7Y$B`_C8DN=Z
%KnVOqRoFgc\9:;H?3T*6p[o*0.H3bM'E]&f>qFU^ct.BSa\K5M!Z[A)]TsN>Kh&Yp?PAG%K&dPQ_k6;+Bj-4X3$1cFaO?mn,cNj/
%'&'B$mAYML8FLNrFD=V_,m)0&"#(8_Z92UA5q!p3^.8b+5s;CH]4@?34Zb07L6N;=m(sc0^g&l&a^6W.3nOtGq:^n;pt8[8UO[3&
%G(5$D;UG61F0XUC@R5?k_b4g6J4;=04`]:2>tF<k.QcQ7S$uo0_9:u-broo;JJe7uhuN!0>1jbhS%*]6V;pDl!(\bKpJ#cICp7M8
%L:im.RR>c?C5ch_i7VO#P,`2ckoNk.N(8X[$Z!I:X#X\jn-k:f=k6PkDMj,!ILNZ>=#:a00f@81AHl`S(2)OM.J;\&l$[V_=hGT,
%c1ibkr[:/td\U<U)JqJ]5'G-_Nnrn?+@jK4@(P6D)Y`&GJ)JR]QU%ct^_l%G_Y_>O6I$0LR,?[qqN\DYPT<^mHn+*IX,j(gGc@O?
%fY9>^KT#ZRS-bIDiNtjKd(urVS]phH4pLTRW$QW`'I]Djg207b9K(J(Rqpk93b!'FV;i]a?5?&@NBh,u.H9'B%O0?[S0&n>!'Ii)
%1@E2#X'NQZ.ULO**(a((DGr8bh]0F59n3?5SS9lC99f>[bdMlQMb8(Bj!,C+![o;fM<5'<$Y>%T[J9!dT[+1J#HZ)#:]Q7jDT%,+
%WEqGO^dGIA2k(NN*V.9.4&tMOhlkGYR>%q[VXY*?2%K)I73hhMhBT^[hoUSD2oMgPrp<;&E@-cPd-dZe"un6HD/6K+<-IR;$9eSk
%;7l;[da=k_R3`/$4L"u*#GIJ4Ia#AQZTrg=kE-`1[]:;C#4<[^faqu8jtIo_Q3d/u,54j-)Wa2:4=4IaN\rro<"'c0Bg9UG3#]9b
%BYYS/)AGH#i3aTV$f`8a2<qe._NZ;%+r:6O"YXgMFoDqjRpHl=6?LtT<:JJdbf[bSZ.2fn?dAfY(q5Li4RXJHaai33Eei=2Q$KC)
%a#l/@;R)g9<.*jk<9;;#5ZC!KLp:iWOU!p>Tms!KZ9D_]J.QH\e?`ikrcC4W<0!ZhS57oNr&?a:p65o!D6RuLOHBd'45omKZB.##
%O)SLP<#%oe%\@S.^0=RUa5J9e2oX&hLo$NeG*94eW$I$/U/&E(4W]`V[rB7g73#2@8pHuIHZ^_s62abJhM,[Q&.9'Zm;61Jo\od0
%i@f"=#r%U=7u3!NhKZ0s=M0W^JB7sjLKM-Q<3)^CFcPN35OM)s'!gNY5ackWP$g'o*o=].b?-oq"@sUh@-QIi7K=[^#BV=QYuVbR
%PfT%4LE,L`DsUS)X[)d)f^ZD#^EZ2Z8B+pA0X\$pi(1$Xh!^_L%\cM4%b@rhJ]&P+[S@Y-hREq.9WIYV'gM37J,!E%>m"o7)L=)P
%hFgG5)7[W'6i\RYXHWNm\34"8]Rdcu`TTN2C]j,[H]!Tg't3;lEXsu37/A>W\NNg(f`YqR1(G4/=Ak5g+EeDe6ojsNG3ml-_l>]/
%"=t6-DBhrt*X8#TU-;_"S?AVPI^%CbQ'9\Q!B#qqG1H(Zpcp0K?iUa^lKGV7eKpcFNIqn2ZnZpGN_6*u$:h^3/6T&,N2foG8W-2C
%;F#c`$PpRaWpf`.1`BttEBYBuj,MNCa?8Bb*`k@T\\JL-_aNFCknsIp6>1i`rB[e#U9gao'*JL3]nV]ce!hT_)o5'_1d[T^"&&u4
%-9]ptT!AK?7:VNn((tM;,E:1'U_-;WM5,3s3pm*0$&[R>mcQ(JAZc4G.Q"3C#CQWkR+YR\c@1MlPr3bO<i[UY2H8LmY!6IWOAu)0
%L?^2P,V[W>:M?H_Gng\)]5'-+cqTC40/Ih=e9#eU[-Ig5ZS:Hs4o7dL7;<8pM?LK$MamfN&iG<5:A[W_gJQ4-9T[+T0fK;%p+Dn#
%;JUZ\4m5#6njUZ)[;[L^`K[\$9P'LOkNo>O_DL%20T=/RDdm.sq4,PGRrH6+Z;_@E7"KYpKoH3L!%"-gSIgkal&i;5W$l=Qkr;ig
%#@ap28rDg&Wgmj8qXs?qo:4Zoft:8&D=p9/4JhP%6dFo=0_<S;'J&U-A4f%>bcL;DNe*E;CB=MDX#OB*.W37!<[-PE3!/&?ZJ$d0
%%t'5@Dg-Md;A?Y:]1Ya#QX*JLdA^AmH0PoOI?^n/m]O,?;hBT*ku`W(7HmX3W5+.STg3RfNK:eAA,bm[A+?d`>G.Vi\7_H4Zl^XE
%1;+cVpLY-GLpK?&1U>9Eb@3sS*WB$+NkoN!JeYCJZ;2NO`9\Ed?iKW/O@_6i7#&UAf=^>iYX_Y2S+j&].,Pd>[GdOD\dPglL/?\;
%TWm+^$$P^5BQQZ6d8&hYVOAL>@_-ANY2O_M26/Q(6*hAad#UFZ<p-YO%k^>`^UgLibGq-QDM;e_fisimin<2>cZssRFV*!ZU1ieK
%UC\PU@i#7rmQduhCQMS6-24dV%h:mqNlJ/CTcRR\/BM##%M`L$,pEL3jC9?(&iWg\R6nO%BCii"c<i#GT0l`f8V^jk:I2,]38$e$
%+9e,Nd&&&_Bjm;;hbU09,#KbNG\#Z4+>r7$!SaJ8&&Cop_^Wb""&4:M(3ke,]M!A?m_k7jla3rQFRkMJ7n&aroU#o_p":j,&5^-*
%>ai&B'+O.uXPOc1X+<oNopr=;iZ3R;i$@P3U(VaHbu%*dl'ScFbG#-Kgc%"6YRP<F>Ee3=]gUB_^)QV<kNN42(ElPd!X/UG:!%#g
%$G+q!cV:"R-*DEN.0W5lR=WZG@&N>tO`bk8'jk6!rAXTM!O#q4HBlI&lF[))9?kku9Tg#N[)(\=h,_%dXI^gZkjMo*F`DZZ0bp=_
%3ig^7kL)J><(N\m?0*u8X%CNA;n*kU=;'1=>e:U$J?H!0Bp_/5Ga!_Nl`&),mgp5L810,Ma<`p7SuEWmC)"FE?pEs/fYKJ$co*U=
%p_9ss:66YFqAUkQGh7<8[^Y'S4\;p/:IJS16'+,f##iW'H4'a(HL2CfiTQ45;>=bo*fM6j9-DhU(Dla:e83K]Ycoi5G4+@Zj%Z:2
%R:/hakbCHg(?ipQGi]J2]3:9?B(s???<WQtR>aC@7uMb1,(tH-'os"<[XqC%pP51sJH$I,,:Tn)p>W/8]Fg?M8#H-11C@N(E1@*9
%5Qq[l9D;OE9ui080/4h$,%k6apItiTT=#F-8"#6B6KiLs7_S0N;Euh4n[Q/2fhU&MY;oGRZibusrB/Qq%]6J_Cr3)J[6alj-.ks0
%ZR$X(:K9ru!YRYjiGCRGaN3NW0n)h<+m86c!.`[`7;tRZ7Q0]"`tjdT%0p/b%Z/3MeFn^iom@$m5LU#t-:/%^+1pCf#lsEZdL4tM
%OX6mtP[8t0M&]d:a>4ij#\$3AB'dX.b[_bk*(hq&nZHQ-VF%o_MM:MX&5BANUNLm`5kc`H!1C>eHtNQ'oG0D+k9-aELBVfI-4<-$
%`lJD\2U760LG+iG$W[PX'\EDN619nF%1%j83<RsV>tK5e?N#gSeo1>rci%7;OK?K>5sUKNGXM;\O,k2W9]U#d_rZtG0C(];FS$7,
%*YLX&J-AZ9\gsiZ8'Jd0SDa!=d_k#SIY1DB#-icT)8R198AhDWO=eiV$1=og_lI9.A>im3O;9.4]%FRW$'KS`iET_'975,9'4&/H
%_fSnZrS9sE(Z<D@RO&(f1Pki\'-ZjL9V,$WRle[N[]B"!mLI5Wfa't)L8'#+Z8P,$L3ANda5P*]-X\p&MhkbRSeIV8N5U':X/j@P
%O/&iRKGP_#CUG>t=Ll]@8)u:FDj]TD#9p)sXfg9lkZT6hfpg.EHTF)[KIep+6bKqA#/;7sYL*Hl2C"/_4]E-B3"KjIi/h9dGs9;C
%(#0YITD!8V+*mI)p"q![&mJsJ<L8q<ZjFs]eopE&pU=PQi&jjiP1.p"':M%645(:*3j]!W@eEdj;f;\rYFM^$nl!Bl\Q9m[.KD8T
%kYHc%>#Bjo&>Nu@qpkhaO;pj)+@D.LOO-YQ4K]o-6ZF.]K%,0DU`?gbHN*-`&JIG(Okb>-@6K,9i]t-BWe8C68)8#Cdcd[bo^IJp
%AcaC\:e1E6K7/Ejpm5?;p=iYU]mB5Je`WRX*e(&KDtp@LYMXa$nFinIIeNK-8:LJpGAk7llKR!bbtie7oCr8*5CQ.Nr+@c+5Ga?/
%U3H%e8q;lJRujps]K@`X%^om.XMD1CHE8q"EIl.dp-jGcOrrAfO5\Oh[rS?07U/."=NnekD=,Q*p_Y_&CNsLK@t9Y4Gj)NTpl;Ba
%emj**X)V`7k"]q'Qo;jEHVb]+iLT-F`a`C,h+,Tt[O-^'pl6:)Af/60\mqDJ;_<pp(_*705U+.BY^t:AM\!,RZ]m;\'n-O,8PgGZ
%iY9!@VW/R_be\C+iLo@S&09AsVRe;,EHT(!'-/<IgMi9!3c7.1?AOVm#8O5"o,P(J?dli4N&6VI_O9O'R?1\E_/bM6>a>Yi>"!a'
%*`"bU!=)/4*#-Ff1nficR,@WcoYqTjH*A7J0P&uFEatWAmI^dpEC7R%k$QWX^hjk*DaA6!^eU[=B4g0([4YqKh>+f%Y;$'(jU%tB
%@YNgO.Sd1\$T/ln`gE[;IJE<831]O0+>iNX6m.Hi(QE9553$>)E]R_&a3gahRrJsNZO<0U>[l5kS]eMRO84CM\6!T?5;O1$:OWG/
%YlujUeHCs'oNo3=NA9-ZLN$-b-eW_+[t;O8hp])5(h4XGIuD-fHD?!((rP*[^OG,p*kP%=6!oRJNSl\HMfJ-?1bRk.!0\SQ#ju0q
%$,]"2G;1I:dc=]DTJuUUK=dNBUlu@R]6M0K0&4E6]oe/uHVQNEorAj[n&/Om$Q%Hu&3$PGnbA60%I.D\3EYi91D`gl\cd#X7Q))l
%S[b&n3"fj?iaPJl?2VPNd!=7[?eM<2]F/d8o`ciT-SD9[Z]E:9b\ga3Ml.q#K=2V%(ITl9MAD0XX^=)HVcplgYrJJU+=s+UUUoq0
%6\rPnFN$dI+K$8s`OLrj%(C#E/f3-MMD5SPYm,:dpc_#b:JA_@d<'/^W0g1f>3nAjQqlTc?YG>5&rUES=GkiIUMm@N2ePCdO;'X/
%/-\[#-lt'5K;07l%p6*q6;cN#Y8.Pck^1=;JtX%=2mJ2\P_H&q$ilN_T9oWT1)<#-r!I]FB6Ib4FJZ7`M0DrJK:3W;G3I8+R[@s3
%HOaXs^o)Q"B]eoXNsdU\orb.L,mK'.=1\Nr)5J/*a-Do,-%d\%A""fb,ODNb:1AV>ik%DF3C-aaN5Vg"!:qR)i`akTHJp)$DE*9/
%(l<1<>rru[I'.&ck!DP]Y\KK^,0iA("VpQ+BC<if3i!YBprN>tL`"AY!$I,Q(c30_*2\GT(U3#F66)d>5sidNTa:#[pp!cKmuNLg
%joF"@+NBhjq<uPE%DD\,Ra1iKlj0!a9/.BT8^+'/8X.O5J=O`:d?0Iq3Ojjlfrh5A*$bl!)%ahEnSn*hgNeNn/I)Y<gsdf3iIc4h
%,h'hW#3R\Smj)=?/cjk_Xa4S!7en-*YsC@n;2`F1&IGVDB=_M.$t@'\[UG*-8Ga-4_[W##opm./_l1/a9*hP+&/jqG$s#S['8=J\
%BGc1/gs+apL5fX+`+atrHb>:FbA\->6Z<I/A-^^L.#&\PW,fL*$q'7M)XS6Q_tXJO0W[m[Opf/t,<r5M$Nj.[nIa9fTVhg7d"PU>
%'i8/>'+4nK3E'7s_UV_b\BkQrBsH4-.LagZdtlF7JHZn1qnacj&kfUD#,O"@#@+Ae$A/GFKDS=j%,>*eGnCCIn[#XB-]ILrH/_.<
%S>VbFJk\3TaV\:"fVc),PAhu!D'orc);@j-iXme3:ZXnfN9X[a2`m:L(U(V`#N!]i\'nVBKMh]hA]Xol@<`Ut_AbA+bU3h9VS/cF
%&V2X56G4lC$Z&;8oa-!7VSt\6Gq_R?XWQ?7S*HtSl<nSbomSS"D^)OohVaCUn%p!%\I3,T+:SO(',/J3%B^*U/sO0prl)OT(kXb)
%0.t-".C,g$?SJL)>@2KgkQ@iC.l]VRn1sO.Wf!,]<5I@gjF\n+$;Pmn$LY2sM^K?II0e\]-9/_H=FrmW,f*F4!N5r$s!hLO1IWu9
%9YglFRilrPI@YVcp&3)F*5\?R7["LG]@_[?jY#W0PEkLG\:MIS!/Do"JN!e_)SHCLEabYn)AkFJG)HS_n4&dL)-:Q\N)t"%4#cZT
%E*BNu3]Z]L-K8"-jM9u8-.!sJJ`2BL^8QUNRVqN8$k,a"cnd[:YiuU6j5L5S6scJ3!o%D-L^:FEY`H$.&ZidP)GI8<=Fp!5l*s-B
%_+&Tc@05YeDG5I@+U&We=ZSNn2s9N88mnH5b.'2.,>/J8PTU)5WeXlkiWFomg.Y!hFMO8_!,i3&?k>&s=XoknOGGCJap";`'ecHd
%B%Jup%>4i!GBg8,,2hff\)79V\QeDo%RFr()kC,^iOGR?2ctV#W.jG9)BDXGUj"F2^`a*n@,P/,8;dP::PIjU-S.Af;,E`)!!ZI)
%`\I7<nU"/rSb[bnkLbCc[s4NlYl=b*5Rc2B$'/'AW/!A,01Z3ma[[T]V(hk]1\39t'3LnMre8;n@ru\d2P^tio9oB?c@.d,XF-Xr
%J)gE[pid%8ppX\sW,qM.5':oW58Y8P-U0]arbA-jZ"SVcok(MKq[:3X'NjM9qjWHZQP]*D[UZunG^lucRMP1unGZ<ZJ9d7N6DCJR
%nGXam8FH9[mk7KUHl9tr]8s_"rM>16F.rP,,tPOup/eo/cCCa=%A=iY>[;#maTO8YO_B6LV^`rXqb&9j*`U,a$kHf%^cLj9IMcBu
%U+aD+=QR,ureg'OQ@njs2b4?UYl=2pak;gfU9HbmNA+Ia=U!R64BR+/JnR\.XM6/`W@$c/^N`d/TEOSa<.H:)1[?\eFG."^kq@m*
%R3Zh$?`kHc,jC$T(M=9p4%Oj@8Li6okq<RiAFG6F2s"E_%+\e&[)c5dXM9urk:a3Wgf:R9Vu<HF&B(7?KnS8$=5%$Pjgkq`obVmN
%[XBaa?fi/-0g*qaZ;RT?jh/?%+/p+?,BGaJem<TN_,O8O"bt):/<kgH#4!pC-du7EB@>\jU>aZ`J%8^##N[TK`*S<Wi@jafI)3Yn
%bI!W48=]5e\"^1aL%9F_J*=`D4-Lm,K('RfM<$er#N%2?O^n\-^>InrRmm&Z!NG<:Cqh2V(b`sZ+V5rpF8\Sqj@]*'2YP]4U0m'G
%MD(I_M0oPK?AX,VhZW`Zdk>(en=6*$OXnS'?AO%XHS_5S(RZs(esth<hr-Gb8U_g5ioXg,$O:&legZ&>Hb-U8_f+8!YUp]@R@L0]
%7E$1OUM)4)'Yh"jABPI??TraIXe"I<%h$._;#E).hofL(j`e4n_=1*K1BS^-^FB8l^)2<!UR?B^r3D1^eqORM0<UbX:GD^Pd0LD2
%0`9p*7%JX9puV>da@cZT0.]:WN`5lH\Zg#Abje=TVKh;!AJ7)ph8/Uh!NR"QNaG>0)L0j6m$b#-j-Kg"8U'=l-$g41S`';)qCYK&
%CuHJO@Xu#K6LlWhVk#J3I^p=86_39s"Z=\]k8.%I21k!M@%X1h9r(&n=-d2!M38:5?OAKn#Knb(>k7&Oo*\bTraMf$eNs[c&"6j)
%eS2oR1r#,-BF(&6#Y<)N1qsa/e,;u4/#b[h+St2NfR`9T^C[X0j[/U_74`Bo61h5'&6(]k>CBlFi'R(:e^X;uLjlT?&L[5oq?<n2
%3&g:loLl9ppqDIPW6W'B4MUehofi!F;Q<'IW-4"70<-8<gSdF9J"cZQ6p.O,5qE>/Fb1\H1qsFsIA-J5"/p5)4MQ,;Sk3mm?ZZY=
%LC;E]`56m*cS$P-I6#V,--Qm)G^e+FJ&5oKGq:^F#0ef?s)WK"gd1Oi)jN>t1r#Q_<A/M^4LdYX'OH$5M9Z12-"qb4UH8:(jqeOq
%9Fr#/?bl<)^=[.KTje'_#0h($^5V9@k*KpO@?q%u7`nU?*2iV/o1mGr1X.SLo_!gu<t`7V3IN!ZrMP_WAp+h-ro!Se\O:=nk8/<.
%=DI$pPo@mFb4A7T*4Ol%`R,"=%\@#53,MrGITaN0i[te!cK:)W_=K0CY?.<&S<"EQi;)I_&XOm$0$G>2piZZ*;!LD<9!J6!:7BY+
%n:cE3Hasdf_ROlbP<t?>!U/Z&^H68X<j"!g&8k7`41#GI4Q?,>lkj'kRGsR6&h8mb<8R&u?bQu`cCV3:^0G\]"U3=8G%^#]ia/]<
%g^^Vs\NeBJjYB(AiT:<QDgXcjq_":Xq[T6hK<l@V[d6mQ1])@aV-Y*tDE;HZrTfm$2agF*CDTe%KN%`-NW5LTI>>;f#GLV=]Mda.
%JDgnn(HUI4h9\INMrUOZ(MpfqP8[fLI(QS"'O8B.0u-*:$P!A='qUh@8aBR',4aji<#:TKP2.f'(E-WdU%H1\Mso#[+RqliS1MEf
%%UWbbZ`'<pmR%I(eZb_9APP@c.td<YhF%qM@f1e\3!anY/GsJLmfb;p50K\h`JR,5jTU#"Scp]*PP7s%RU_YhYn%E!6/;o,V5At6
%((q:n@qBS:\/3-7e>r37Joe$VG,=RPj:UdlcJ"1sZ.:lKkm;,5V-c60\aV0iE(/H<rdb)bE+eOVF_!%VHRA+@`IQF]q0I7G)2#)Y
%'PtQMS_8>Blj!(BAA)f9K:Y))mr=F&<UX,&e<tVm61Je$D<L-e]a+-n^75;'.];/EYm/@=U_d,i23%H%;aFJ]oK&i$KqOd^+(4T%
%_8]QdYJJO("<nY.hVh_T6-fpX5?k[gSJQ[kYi6I>hPjcNioW\nb(VpiGri[3R<b.CM0Zq(6S@'p&^Q..R?_tWfhRY",+`lT!U$=(
%Zs2jK*Mg?0$8el<(f;^K+Q[1-ibZ6)[7nCs`HI:26%Bcp,52g44169-p.WVeM2nGn89s0Q(=>+IWH*63r^+_bL^V2=T]G2lD;*.a
%q9%tg\kqtG^VC9`-*LP]d2>"Wba00\;"?7-+t.^[?jSA4Gq!.5pR.22/fHD".="KP_0+e.P4o&+j^Is<s,N>V9[pmn>UXkHA_#Ze
%H'Q)oI514H.7^!/1F4\Q0(=+;P*_s^4M3(fV_]W((jU,a%/Y[>GD2@1aGT=&6c09VYL^XVPN,5&miSV]Fh#V5W0b`%'7U-0Drg><
%OI'76\@N%k0=+_VcQM:[EWK$A&FqS:_IEA0OEYu8:<6(V`"3;ChIG)o1El3iWpH"K(4qX7'H+#[q07b#Y:;)]\q?No\M$/'K*LD\
%a%Oo,-M66V'c1'nMiSZmOs/;.Nu.aD#YTf3(G/\KO]1`;e@I(F2I:p6S.D-u&+477%EA]Cp'$?!>eJ:WYiisHG_MsDg=f-^[S5_'
%iSp,a9Yl<.ni.g^M`/iHMfG?1Ga/\J-]Bu[D6[34fQ`h'b3;O=M`_N%QXJhoDVfu(Q]358?Fb<ON6@'&qZppZRA[3Z[0mEsA47N.
%K]R@FWso]um_e&$_$bW2$)WrCkg!NR%(n`(<]^uaG$h[*pih)ZIU-"jA8k(!IqITW8fTOo6,'tK^YI6]h^(;HgooMFi--A6M0&-;
%!33K9W-:f=eZZp'H`X.hhVFaeS06YD]uG<Uga*_)7(b)=@tBfEY(*Q^eO6ie@GKteeL9$0i@b#Vdo_"0eNmLX\m7W'Am]Ad=?I4P
%Os&K_MeL:0aEA/NU:M+F]*J]90c/@m^&tHc@G1naL$KL6d4SKj8n7DXJetk%8TrK$MGe2.lo+L%/qRB%Dub4!nEWEngV2loJ_k+C
%0:#k9HP"Y2aE8Gc8TSn;2Q\l`g;bgn>`!UN7SeiOPCLr)7r[\!]'-(9>l2aF$c3CVmGaqQc'JSD:0hrDJOfQ'W='k)BgJ^+[lOiS
%*Q.q=aI,j@@!?"*SPQ_?04SB(_5C,:I*P$,KDV4G/iI!g8'p!5dmZbYWYlU*h<Elq;!C_^QmnDEJQ=,0hO-qO5ZjiJK1HgJC;f_[
%UC6iSZ@$:'h8!_0Msg5eH'%7LH^nc3kcu7[)[mA88DFH*mViU7KgHThM[X*d6?bJY@PI"@cQ?L"FA[u>6u7o([eI<;$?n4;>mPO$
%`P;uch*bl(4;WQ$F6Ha6E%pKrO`Y+OK0^=&4qiC]TUTE8M)0ePENhTpq:m;$Ke=;[OE8*3k`UOK.2So/ASm`+YWIQA9#\2E.<OgI
%EE/'KZiG,ABr=Bu094kN%f:fKFJialXrP#/(5mA@?0$<iV`F"'@,=])W-dH@VXq_XqV4)@KeI)b`I9At>f_!>[98b*,^8\Kf%j`P
%<Dq,5bC_fV4V99<2T2n,XR-49mSR=PPNUAFG=P&\Jr#`&)J0H<]caMh&E#<N(f:8#M82tVLq>Ep,!Gg28$0!0bdhHrRd"E]k>FW)
%TF5lppV7mXl<N1)ge"Eh?/I<b\P+63m_GfCe]Br9U<[=!Xbt<q_umAl:`@io&-,/,W,q2RM\>d6HO2&-Naa^*,59E;5m(2I%>osf
%&*@,'<2kd82oVd.6(H,I"dmpMEA"(-lK`k7DJG\$QY$`&lU%+7hbZ/??#ID=Wkk/4!O(oXSBJ\^fC$kn"CE:7%-Cf`N01<^\VsJW
%i.<p)$I7llLiZS_/FuK(97@A`rZKKdnNEd=SVtVj+6nP@QR""rC2iHC#T*UIFfm2$D80!3&o)tK<)DaU:dgS\<A-bI.rd16H@"L$
%MXaUW<tOP(MrpT*#B;@])9aK5E@rbk\B&'r"_ss*Lig=R0iU,>>J\M@;@1X<Mp_tJjhdJp.B@`7eNpc7s#Z$X;'f]2ksCn5g,HsO
%6(A;`;jfqA9*+sU$ZReUOK((eJif&3$''TNkAidFqj`La'4KS%/E0oV"'9\+ZtKFUJO_Ke7%C;%g/\u/0!Dn/CXC3q`G*mU`4:up
%FAA?q9(NfD-dJOg&`/4$(K08ZJiK*dnL6G;/ruNm%ea92!p5MgCZd@g.jjU?W,n<`_OZ$ESNI^DB5SqrE>-1;V-M,`;9EIqCi,J$
%q?c`J6Z=Bu?.'kA9u2o,jLLtR([g'XpI1Rp->Q"86(?&LRMIY<OFe0AH#jnNW2:`.$.`@I`/51p7q2dh^?PkYoku'tkH)5l/KDtB
%D(Z^F0`6M\QdnC(\Jen'p85,/D(aKZ2pN&3c%Tm=TFnQA**Q\#5-H#*kr^qD0#!K70R.X^TMK[gc%VD'fHAJ9^mD5>JdMS1g!@UI
%I,&Z@SN)s)hah\.'.CIGZ[F"B`N*%R.Yr.;K$^oQXKYCOq\1^%\V)_K&_UrUB.!aebdgP70)]p(c@rdIlleW%nOh\JcD?3enI'Cj
%O%;IW@*U(VO7i$Nc@nY7[Y$Q+*[saf:7OtLQ,G@BS4cs(8H;N(\P'GgF#d/n?dVn-'$lL&D\qD<Lo"BPS-o?JWf&j'Ru!@&9Una1
%hc(0MMKs%uQ*0m5ZHV6l3L:jRQ@XZK(J#9\A4=cp7?>l^3gWEH55LqtAToPb;pL6C&\r`X;s,pq8V_6hk<tCd0#<6#pQ.G$&_AB"
%"a%^kr7!+oGOYUbPst,$'5O`ho$\f-Kp0h2/N@g6/k3;H6CGG9LTq\;GN$RY@I?ths-57hKO*rSdM6.P=I!m7g_#HDT#l!b%IWD-
%3r?"1.G*OZ=/K4Z8YRZNd2#hM71:i`Lf@Eco>6\!<&kd&S0o+e2)H*S!A,.=!Ecn:j?a-^HB@23#Ioa^Oc'\NoEnk@Ee-J/>WYgd
%\bJA!.&7,hnK"03(OfUE%GTM@H<akE!Oc*3#O!l%N"_NsX"_I2CC.r8)sFu[%1IfO]\FlP>QBM_m's-66%T3PG#"!#G-80#B#TJ)
%OV)4c.5"]]gWJNo"i4U&`Y1u";M8+RN48l#KC<2jJO"b`e<LR];NrAX%i<7eS:0qdQD+OrYB78XlORNgiM&)c0!N\>eA0<B]i*fi
%Ne4g/E1(1)AJ*lFpa<&WR0OQ(Nd@qfU<c:B[)rGXHf)onEZuZ[&?Hm<JW$'G8Qe/eZ"_V7$NVlK2YlL*s-?UjLhiO[(:XdOfU;[R
%#aro%K%):]cit+k_0l](Ot4VG.Dq6bAVJBsDp\d$=Dtg\5$gcu;4<i10hHR%N*s<;5%O@H1Yr2!PLUSO-;?&=\bG$o"c=jh&GDd/
%`@[6Wf@b'3#WR](#Ds4,dTV;oOGgcCa=CC:?j46(`H9;Grb,B->6s3@"OCrW;?tGu$iX7Km`]^pPq5O5,e'ftei@W+GB$tLD?2lD
%@_WWR!GaR#)@X*rp;5ls#]<5UOlkZ4jUrWM^Nf7%mqn"6].J\L=:T@U0Q`u&-Fdo4VW;!kb:?*6)BaT=[Y;ni7p3d=kQ%YZBPe'4
%!1^o/D8CUO;<4O]GRAtT?8udF7'Rm`D8D'cA:6/cJd8s_FChfgMOGZp`HP.k32%q<!\/3KZc+/?Y8VMkATqg@e$Pd5K#[[]ArE6.
%p:mSf"P`"'(R6RuW\=u;9Xa;25aoF-g+U>+#ELGdV0ft_fV4rDq]7;sp^S@2+L/n01tPtlCi`U[p7ednY!?I#D)=IQ#]*@>nJ3nC
%?Vg='K>&+Y9+]%0^".iF"Ja-L1FMLbc<Z?e'3r*VGHKG+:'YoYALm&^>RP%"`Y7@c-9@j>>FU"0FkU"I786k7g;3I6ditn7eE2Ci
%(3:g@q+Op!XpNP44(Bk*PJL&<eY.1?[@Z#cL%JMY[GC@5c;g@I+6q!KCJ"fbN^Zt60\F?D94!7K7($9GZQ;6:RTC7tXaML!ikeTO
%9_UZ3e3\)a+G=gc'&li]:t-9V35JF\II7Ss>4t.hHKD%.p1*QLSJJJ#dsB%YVaVQSQCa8gML77jBcC.R9L2C23KXc6(M_Y5S4)Gd
%EGAZTCh_:7Tj'F`!mCO)\7q)=(YABe])K&cY&aN:%ijUOhY2b!`IP[AdfQWO'ae^0@&aQG>*RB'X&ib6"SQf=JsR5nic&L^QF;)=
%iJ!O4#&4JelJ)]0'glo+_=t*>+0e>ZU1F[$>1>!P!Y%J"o!7WTb"(4!Tehk[TVR0.%%:>GW-FTo+JTrK'J(CqkRF`3WG"Tsj(P]M
%M&&EO)Sng'I/sL!U'5B]%-N>"(7B4H&OAdB2B_/,dTQg28^.VLm25-I$52(OZ"C5`G-<f1-tnaYRqg]NE/.<-`m-ggh_,,>+UnA'
%mS'Ur/)-U3k/':icmTPX/f[I.95r4[mq:q=&-h`BpU!p3cZU\1\F@cF2HrU>Ws!@)T+\63h3#Dfdb4&H)$f>@G=YI_bX0j<FulqQ
%+Dp62U/![0S=;\:AqAG>C=U9_MsO`sl;:5pn@L*FZk-+M8F&T$4.OA>fOfoB[hNYb_cIDaONe8rPauT5"H([-Atpu*Ass0hU`c*H
%_j:E3T%W)DO"8KAn,d=.bg)qHT-0O*WGP[bqV[a;0UG3_bFM+/%(#0F_%=-gbg']E3@5k?hqRmuQXuXZDHD!a&2GER']cRK]D!)M
%/>&fCDf\au%]@GX@TcYreFMk:ZFCZ&kBrtg%K>;).Z8(OX(7=7U@j78MAK/nU`dc@T)$%KPnB7da"bkuZ6Mu1:+/2'jpCb6)"AD#
%=b&KN<\$)]&bV7DM!``\i%A9?TMm#Y?q=/]R0Sj*n^2bKiK4;KaL8"!7[?^mD&b+4h%:kJ'%u\gLbB6@Qmi"r(58gr7)a@YOPQ%-
%mce,@h)D5c$jtZ63-3.^6BT@W:4KT09R@7[fU5'l#TI[DYlqXRp>cqYj;47oHb!%q!aFRU=C)B,r,atdkDr%;P<C4;PV>sD9#V=\
%UQ8eMFJ]ZVfG]/]Ns1dqYW[n+(=b:JKfaEn&,tPrFY!lg>_:4g@i8?jD1s$7Z;VODbUpm@qP/p4!Fjbt(A_e9`Zf.p6LIMd>EN/a
%q0:m1PcRs%+UUNiQ2Y%>$4A(6IhnQZUu[nS;8tfmAfcD?J*BJGf^D<JbN69:qh*9RF6p-hid;]%["Gu*HifBs10#mL9!(/NbKF,+
%Ru-qlP8ee*;[e@t?qXP$q/cV3#<C)X"@he8ZjMe3rg`^jc4Ec`B7VEWn5M/RVDdoX-%HZX.A/(,:'?Vko<bD/]dksG(:d3Q$BI?5
%>&D'=MsF-kqT)Tc_C,R8:85U8Z3%$VqqC)'7Z-]bf943#KuG8[nak\mip(f+T$G.baTo?I,gK"%V<3c8OH<.dj^9]p"A)1_>oQia
%c>N-uVPA9,&Fs;mCg-HD$1P3#@;*Am3L:1E</o));l_+/NOaL[UM:h.]RU'V;IY`Fl4b*Af\E=rN]gU'\<cGGmmfSYf<U1(L8CsZ
%/a2W8Cfp(n'X:o)M:!i`P?.%HKq#mGQC[K2/Ce.*K*3[Ems*9+@qXlV:Rj+p2qe"W,OL!l!sdUj%4EjM#g"-)EEYc3k`d:*^e;^X
%U]<Dm``0MGSuYU&]e<V?^)!h1dDTh,gJC1?0=kV;q+.uU@._;K'80fb<?\H])AC8B@[;VC@Jp@`i@(A+<H9<4J[@C(8E<0O9olo,
%`6qrG[?`eMijC.bOuY!GO>*lT;m>Hh#ud&pG2U$a"a(K^hTrI-HO/?Ap].DkS3X=lj9a_\5RP^%E,fY%ZY4@@_Uaq:Fo.V9(d@#W
%;.9o8,f6!/k?=[WGARW*0FA`7jL_E_a.A""hrRl!i'X.?RDuo8;Q5h\DY`N[Yn.<-7i#:r;8(9spVb?6,)YB^nf!>YhRpOQ96Fu4
%$/"LDQ-Y0MlK8CG0tUY?.u37`KigE)+O9'h_59M%HYg#WSqDs''/AC0o&>C-_u]&Z_KKJBW&jib;Rf+SlbXm0Pk6eqh@\6L94J6r
%"m,t*$bt5docC['#5VB)V`#Mib/`,W`ISR5X_\ZiPs%Q7,EnS4\ha=)qG+gI^8CRZ[]+G@7,DJ3:G'PjTCW_t,JT2h6Bh\p(gci<
%!!Lm\UiU!,4c24/WkdP:RJ`;*R)tp'`f6C60gMVrpo^;;Lth5F&OO^\%6GEG2ef4&6_N8>]F-BO#OAT[d7;Dl=ogj^R)L"0CPh2(
%"GqRuL6dJ5j<BLfZP/N&9h+C[`(qY:#2q6dpnU$F,cQUbedR43]T;LR6ae0KR_OIP+7-aW`98L.lla6JAW_lk?ZcgFB#m3C41puE
%ZK?&sGCm_<@OUq&c=e8U)+dRW;c=HERUrhIl(7*T_hj4]#e;DqN]B3r"hc3nVlUKa.7gn#n<eib/BGG0I:i![csZ-*(*A(Qq;%<o
%"Sl=#+\1eL%5\&t19>_fE!+nE5iA@QceL5X_@/e`H55$:A-3PlXe*0[/c3="O/N*m/ffLA!3K!&W@+?hq;<7^IY.bQ@hpY3:`Ft@
%]_NSPF"T1q(3bWW"=[2g>*J6mG<QY(A`ul%B0*[sr8mK2793H;NT/r=B-Kkt<g:;-X@M!pJ]`'t\4e[pB&7$kh`V=<&;*q5m6Q8V
%F<DVQ"S-bfb<PkZ$,%o)PP"qhp;_^jKH;'XoT4t:p0uY;G\&:pZp^8%Ft?bY8tT?$CifS-9&0#Q^1PRB&6W52/?8<!`B'CICM8-A
%R%T]#`F25G_3Inh3mWN=Z7fV*:<HI&q<Jj0\Y9-Xa-X1=.F;4\BFME:Rc[2=fl]\8Fim_-PS5L[Q4C?S_8e,]KRF^jYt3NP5!nS\
%)*o!N::PV5%+4]!Dd"t?(f6`N>-&*l(qal4cJiVEJ]VFR\D&(jdpV#+a^s%\Y8U>f\Lb=5I"L!nN@acD+lGi>S#5m)Qj",rr,>HG
%5:uuLekj976++(q$K7sO?k+fG/&RVmCtZMaHPeApkFq0!-&fe>:n%h/E7Oer6a=ni<OY7lpeBpJcR0M/)I!#<97oOYNl[p7g-L(Q
%Y$c&4Z.oD>"5UKCX'Q;KFGT4;b#Yq*N7`Zb\.7mP=)R\uB7nOt]5@[$;B\o`:rJ(PQ>>:X:;s5?epOm7KmYFH\W8%]$$/HkQA)UH
%6Q1nc^g#+eFr(PO$r=i86MnJGNPf$.&jm<1(cO=+pTT!H<1U?[Yr*"'ABk,/p.U\<#.+*!AXotbX;ps?'?[m'J7?52YY2VQ<`PDJ
%2T,r[S1K$Nj0i!n4o;_sfp:@anV'@GI1@Gkak&opKXc!P-qF4D89M5gTWCk64UoX#eiH6GN#XcH!H0rlO;'^./pbd%.](*O7YJQW
%Z%DE_*[<s-Ne-42K0b+-3nZS`Tc]4Qolpd3/'9qmo`O'%OOM#7%OE_60VpFB=C@pjGuBHfPMulp$m,T$j!$#?:L/ples,%!>+W1G
%P)OgFn$%TOb/%Atlg?Zpi!"Z7"[j[oT3&9C7<Fs3k7W+H+Z$gUK4$9c<&J$n)sIu:r:'<<%<mr/d*G%8r?Mt!`qKmUF%U>U(%N%U
%rJ[;6p4<YV?AH;E/gu_1C"CujI38#2ehU[N=5p3eK0m@8s7kf$cgeTA2[ONA3$??[P'W5]W0rR!S%`9rQKQ8GlFrdG@Mc])_[;!;
%NK-&>qa1f*^4P-^nl@$T3,ZPU>h?923I9/)N71TB^7%c)keS;P%NNh-+#t:!;*o;k8kici;C.nIhj&&5gpO:BIhCJ_QIi;-;G),2
%)d5];l,0Yt=HV"m(huWYY@7lLl?a)3+hqmcWf,I("s(tr>6pl;Z.L,cATBUiRMd$g@Wm&jUmoNls$O5`(il^3Uko,OE==SMWNqad
%"?IgSjZ"C\7?lpK96kr6;sN@5nm0i3IOq+p?.C_3(Q]&o`ANLd,;Y+o1P1_HmCBnHcbGcrXoc9M*5N5lP>aTR;!CY)K=&R-J07CK
%=>h6]/Y6.1SGGk7J?XhJ#P"*KkU$co!^L1L+E;E(7[Rse"ZU<XLQNilh(FP]J$t=J^3EuYM>BukF8'D]3hb(@JN1Tc&$\P'*OCS"
%YUH'06oU7a?pn_nV^bdlk!@6./m+6A/C!@IM9/OF:isHX!*nO=Qi@rOlK'`Q:Jt/kOue%')B@-lhSn*2!AfC8q>tE$pdK5s?nsg+
%>K3I)"Ch$>4D_k@>iC0TEkP]t\<<nrK9Y$sK3X<`%=Nn7`fW?:F;NO7X:s$D!7$^f]?#Lg_#?h2C-2QRR>JQB8]3d<ORt[LVW5IC
%[3I+[1@^Sg2\[6r!BGM"MYgd9'mWp,0=jpjP'(XJQ6G,8V@L.1`"gR$I#32V71J$"`1jNp?'&s#X1Ce-&jh\9(8&c-XB"29;s<h/
%'E<AKCo2j)6gX)nk,l'W[IC!)_pUAE?pd/*OQoe2_f3fC7erY4n:t)k<FIYoJ:Nm$%teu`BX\XJ_\DRKFsWtE0.KORF088/!VBkB
%3gc(hUj-+e6pu/U'3L6A>kXGu1:bGN<7/!;0PWi_+B?]*ik]96H+Fp;m,1V]^]A+>Aib+2!t$dSNB@nA:It*dE(Vr\9+hfA9Y`67
%8+hSLR'gk8D^8TVC+@9QAo`?3'4Y-a/KZ8=OaJJR4#:2s[$;3pnFe#9#:$#HN]/5"eDbY!T9/PGdH-b]YpTQWO>9bUm=6L77""`u
%K3Ka,X$#H[EH)\p7D\O#a,61G8Np/E2>9?_,.YBW.>+1t>f3#@;_V8R)p8t.3Vl<K^"/H>>"f2g<)L2t1:`quiHu.1&h0R5<L6.,
%%0.&L,FO!APHjPL6/pEI8,PZY+%q9LfVM=X)H[Ln(GUgMc=hsuAhQadl`<1e")-DP.noMVAq*^#Qaeg><g<MnP2s\N;Gjt#*UF*!
%$s(>]#7=fG)cu-;gG,uWmOSeUot9itb,Gos%BRLuTfr"q+YN-_rRdR/%mHEH74oDtlH&U,<SIS@P-_L;Z-7na)'/la(3$@7WtV>S
%-N^O%b[p^Vi*g)0f6N!)QUJd%h@q&0J9Eq:WYBhd'T]!U2FO`2f'(hL8aX`U'1[4;5)h>'`UR)f`+Fgj)B5t_$CqrTd+5Q6JA9Lr
%$RJTpAtt+#Nl3[.nDbZlV,-?s\4L?T80Y+'I71,iHT3F<K9rX?'*G`[IK5S"!aP3IaOsWBi]2g8`\q@D^lk<[_B1IW&cp3Y:^:q[
%/iW65+kYd[/$9Sg3oTOL$A"/s0>3'5?M3a^iSHGc24a7c)\qPJ<K8'F4r3U[Ul_+j].YR85[oQ2W=0qp1;W2R.+]>>ciMp>?h6/U
%l-7g4B;-Tf)&p<B2kuAfS/datYD,JsR",s08Y-&O'iHg'%YFG/&oFnW:&kU4N$H004;92,+FsX9;mn683_uZT!Y1t@`WQ=FQ<?aL
%Wgj<$+V<8OD;:U!>2l*\$^NhXNqIFIqc>A*N"F[DHk=5,dAE<&+_"F\Np5XfCnji]<D>Gre\XIJF?k+'R'o_/(I>?b6Y`W$g37\0
%.)`iiQij$qa(U.9?L3Vc@2(l`3N@t*IJuR5L$fV5$VDdl%t6$fb'^9?kPR=SCOtC0P9Hf3/qC6SY6$!4L4cQ91$d4`C*!fDJE:mT
%KAu)?8rg59-QbUi;KG`YIjC?#ag!lEm4P]OmQ3Je%AjMf;06Mc_n!VrSSOBbiKORgGA`F?Ks<*uVa0>jH6FG?iB?WNgqcOJB]jr2
%(h!3JS5u$L`FJ%R/eJXY47m7S.QdqsQ)J]7F&R*#W*Lda6kQ<s"7nc`0tD#,+q1o+D+[<<;*da+8Dh<B7/`a7MnZ5^d]Ifc-"6]=
%'1R#>n*USV5f*hgS+Jn*4h'bh"#cTe_GIpg=!E2.eID7OY_6;1af2$!%.A:8?OLa;oGZ`RlCBs'rqNL49&[,!gK63V'GOl0&H!]6
%(BPF-lM&>R]uC/k&kYS=1[carTO9'f+iZHs"X=0#/b+N?kh.3n+T\6.bF*l_I.t7^>GqO'lEMM5B^GcU2n`)G[5lA?n9S]V8F>^l
%Ic]0NM]TQO:;flio/nq$9rp("Uf??8>Q@NlZl&:ue@BWTmErqY)o$$Z1IU"=&q@PhY]e_SHd]Mq\*&o./\agm%WN3`Q#+[(f1(3B
%9UJF%ZuIQnY<$I#GmXQ])iGkr7J#K[Z8U#X-AYeWSt=OXgj*QpY4+gb_(6a4)>[26]:bPA:fQDADaA=&7L6h,/I]a<<eQ^[5eTV0
%'Lcnp&i0E458nMF/-u>OZl$.m/OVhVlRPs`"f9n'.)I6peoK+'5?t:k>S^MtWU:.7'UCpSV,h]KC4jC.l=-a06DVgsTd7W()Hasq
%9%Pe74Z4r(OEWHtZO-8`UfQ%q2_h57]YWTAG6Qn<)L7=.bu6m#0AflhhAh91a_RBge14<"8NH8)M\r+-2Ro:h(H@]figX-D+?:6>
%GIb.QYUPdUFh=%bo8_h;<mAVc0R48.G;"\9ll19;7g]$uH!s$L=)f1^l]oWs0ai4sRaZjR_RB2e*b7KPmCC7U#:QuV6QmmEN'QJf
%+"NnRY:j##A^YXd2Q5\+7jOX"8k=')/91&\QR?LblpXtGXV0B_7_;%I7`F&@Nt#a+gn_+8+@:;YIN^"=47&=fJl#F_UkG6Op_OHL
%7S+uirj?BY_HebQ0M<rAPe@QeAd$CEgh%EZ/5O)!JhO"5+.H.Zf5qdY[<J`MIhGN^WH*udkrECBZ9[/2e-2=dUGi]>SX;I"dfZhH
%na2pT,+"BPC%4@Qb(Qp"9FE@rg(4<5O7;7\+e_iPD<_G6V%pU`\6"cRTp\R(&K2KGM%&[ZfPrK+eK`16`*^Ql4==:ke[R"3;F@^(
%)"*SqbZZ$qLe*\)S%3)S*g<dqJS/"m;0[trkMS?<B9Kk:QR(]tP!FN>gb0`frZp/oMKFc.l"Tl]6sOoF/("[2XcmY-[)WsJr^@h=
%),LAZT=SMCb>nF`A7B/*PI*2Pau0M_-s!a#G5rTrT4rL;;=P>Jli/,2Off7&JBi$8OQJM-i6G%W0rYR@F`OS&9fK;dgE]JPMRYrn
%+3@?](>:C?k2KZAXA_lW?UV`BXUK#gQF_7a^fG$VLl11!OuN[i)sC9;'5fM>5dG=+4K>'1CunE4Q:2)c#(T_h%gk=QQuO2A)I@P;
%_^pLaoF)1<cG%YM@P<*ILGl\fB]c%B`=3r+(p%<;PnW;WoOCt-bS3in&S0+^<QGk;'QM7mYTnWK7sbFg->>RSLahnt/-69XiRg\[
%FR)8N+O<S&VTiW4TZSM=SQ1WN3TDi#`fY'AH;O:<m(it%CRQ#:$uANo0nL&5.:+JNVG6GR>YBq695Dnb+lOcTDe)?[VsKn1L789k
%PNT&NXVP)cF,LQ#?\'RJ^cDR]XA%6NEu>T-=$2?+*(WSkE)UudWKs0H:2#Zc+e[8"Z%AQ#B;EXk7Q4;'229+'!'p(.Q.>`hMsVKu
%bs]:Q0(D]D)7`eK5AQQbff=j)8%+9QfTWa=n"cm8K8CS>Jl[5CqLk&-4#h)W7k.cdFE\kjA1.?<Qm[Db[jEZT=sO_B1,u>V!Up(%
%2\cgVOmel6`TSJBCW0"A>]KQIgi)pt/L6cW]-f$fRH3JT6-Q=8<khG#JkB3^GWeneL?'a\G*/)p=@k3fE0NP$Wr`?q&%#-K-TOA5
%UB'M_15_8NTKiY!@Fq#&JNqKh7_I?=VZJSW`4I[AbQ90`IGGjN+ON6Q7?kW(:Ote;]$(4$1p,l.]m**_CBU%1^`9&*>3(SaM?GNZ
%ZQb;l@Z=[rV;aU!I]LB<_aJUd!,2+%A%"*'3sV8mRBLota%gucWe)RY0RQEg9*CNs"jrd5ZQUt:gn!Vkimn73e$=Db?+$+V%t=S%
%S\7.j$#o0?%d(kC"7"_hRUSRGLBrHQ<o>addg0>9Za3r.qoZ&q)aTG\iYI0VGDErN-eW!%,lG=]9'+)3B/IHmSSj,J+mZtdSFD[F
%o%hj^_P8c.KqX6?r@i=^LQGjLr%qgnTEulIGo%UUS_b6P+]%OCedM<TU=@-JU3HhJb?s*RKERK6?\sWY%pfBqa#4Y4]Ll2Sr3LRs
%3aGkNJQ]V0X!?D]71[Zsg65t81>$@95bQ@g92oR;Z].Z="1?pTUMsQo3Kg"+GoKs-eq07(,@qX7U,K6:",?kHeX,Q-AVs25#6uA8
%H^>CQ9C'd-b0I<J7kBj/S=C7r=KZFJ$RRf8cr*Eb*sXMJ59q`#:5DhfASNu3psG-rc>gWHDL3]RdJco.+1lR(ir7`2i+66)M!bh1
%l/&aW:G!Iddq#ULS/p4(oQ%b#,bu6DH(LdEinQ]WnY+idA2\pFVJ1?0>hC!c,"Mod).F3g0QA[?Y:IhoA?Xj@U8>`i$2;CIATba^
%CPP9oX?BJ7c'qeuDmNNH*R-iE4el*)rf=4`$OTLq\sSX6%MKJ!Cj)p^IVbqEIl=qg15mt5Q@bUL;r&I8_A5=u\5Y3I0U0L<_Mn!(
%jr>r<=]^9CV!JX+V9`rCBt>S5B@PoS:NkR,W1"]E77gE-hReZ.2a)`'mjL]7BG'UJDXuC_2If[7G"L==)'E;Q.8CVBj;@M77pE5p
%48k/%PZaU5MLd\sd+L'QZV%X"(5&FY4!n)2G9)#kFsRqB`Mn-J=,iYV?e7l-2i;TepDY^0is=gE2]@(!,:Wc!E-_%eRt^&LDD+RR
%<448P]-jDP.SO#N'8!lhp(WE2;VB;F<*H@9'#kHO0<e%1[Ba+3(!e>edPQ;BCj!tblQWj1oMihs2>N"BYnIp<2ppJj6hM@KqZ)hA
%lJ\u.+R_d4`nFF.oO,oo(<eO8$VjsS!3ZuZ3gq=i"-8%%$+)h51p"Z_>c!*lQpmgFZm;-&<]I(->>1V*)\@,;,Vhm3A!)$TS-Ohl
%QRuN1olqrVk:dItaBB4s_l&5Ij=RlI!E0U'-7=BjKB[N3WQp`5KBPHD?G#L-J6?]E1(rbQo0cR)LIX`i+p5qQ".=QLEKj(W)TBPV
%Xe8OJZZpOhNl5KOeubZFKMhZ+_$n%<%E\$'"g$QK+?*>ca9sfNHsmYD2:4`W-5*C=M.hLQWmP`d/@.sfE]I!V^dDkc6SGN>a=^Dq
%-Lt8e=0YEE\$]nT_h'X<78U,K%'#@`DSPIr1[mI%b(lVl6RT#$Gm;,l(DfffOAtZq4dPN5R/-fC!k`nu2^MkBJHqO`W_0_pSkZ8)
%_n:O(!UkL3DK](Ci]Gk2bAn8^1qI$+2/V1t`W.QrZ+r*n7tVT8<:UROL>^N]F(&)?g.?nAlkMB2nSG5,A1h(X`5>P1qbg^#nk*-Z
%n1)j2^dj(EgG`Im@h.t.6s5Te$VtGe='9`!mRt\8E4)=>G0s#GP.?;(=8*F7#@i'"&,GP8?CRfZES21$P$ZVZ!i#"6&.pmV0d<#T
%B;(R3%/<3C0k),"&"s<j'ip/K$2-q;4O1SZBc)fR;%W%"+YKLQ!jETt0:@Hnb/)1Ahjju*!H%G<dH!;jFpLnu4`*?[lpMIsUT,NQ
%mSd,8ilH*h<_frhGm-..:/]#pnd9PrJY[LBEW^l/5c^dMD5/BR/DfY#m@`4n(3'+:>huL`8F;(.-u+WmP,]4W<=BCVXSB)B&3&jV
%(P[WJ-j$uc]HQ&sm`2I33l0hiZueiskj`4S\h]\pD:Tp'oS(8%f-?.8/&^E/fj..9-GaNj.[DemioGV3@[]p^bMu5Ab*P-REb\Uq
%`IX:@a)Wg'MELL=[)D;h/Ad&]'GD2PPlX63LiqOPjq%f`L=@-HIJMYh8Q]_e&4=oh]iFun<:V;B@<Wf_On>*W`@$3>)Xkj32o^]q
%5''.G6J[M$CahABLYFqJM;TPiKld6":D0a=;cd#o&F\Ir%QI8tN'_:T5tpdcLEC=W&aRo-U8r9u9+a%(ieY,H'SK^,"T]f_S%tQC
%,[m1LK%=0i>JlO98Xf"iNi9sC#LVrl8+O2XJN_\UIF2kRq%B%?IZ3X4En#RU6)G#5$Aq)RQLWTbedmXZ8E*(GQ#c"Y=cuBPAIOCM
%?Icg?eWf"rR%uj>mM"\!mgB`+!f4BMep(^LXuPuK97F'N^$<;`]S!:4)QmbNPnAp(CMMFYjhlMu(A5T3jm^^2FLYF[R[3s8?1ru.
%`CX2T86cc:Ru(d+?0cHO$qBu7/DdVA.gZ%`0aCh9)%)M$D7/el#Qa]"d1:u'%oM=JJLi(9RMpR1?7s=8A1*bJqPjE["hGBW)sEO>
%]bE$kR[SiMhRQ[7f)Y)$bd9,4$3))oDmgY;EMX'#.t[4d2ib-A0W:Lses-No%ekO/?^+>:U8*>AJOL.d"uZa#nC+"7A*0oqaA&(E
%%BAGu2esR\m`_5i/(aPJ&AA-1e4YZ0mW]"8ZU6>i8[@9s6lRbkJar49&1DKT2tStOLG@`e+NbRTg7b\f;RsjPb8UoV_oGHC]1[#%
%,2tE?0X2^:Obf#53<^+SF.lfDE7`FSY_h;k84GZaPQ6pt2AkM/'HAe0kZ^868eCNccU\<B\H7<#'D+q+bZ"jP[2OmbU+CF&5T@b8
%?c]iHQ[@d$&C2u!/@NJ$4rp5W>gUQML-kB_O^CCT(GZ3+FV9j@nONaB;EILZ`_)1(eUiV_8Ee_]5Xt3&6JQV4Cdj8OTGD$ER@FQH
%&n'a1T_^J.St[e(Tf<FX"@l$u@TIt0Mb7,XE2!URJr="?[P).+"'X*))t\K_d\:s:O`-#l1"c;U5%9Bh_,;>7bU;56MY.r#h^m,9
%./c^\cn]+N+D'1sQHe<;ea,9TKJVs8WIL/:>\KtLGsO4q>knJi"ND'?FVAl?![<6X]Qq't+I+r\:lDR7%gPNLWO3@@j2<8]IiR)F
%gn2dll[YWJn-5ln<#HPZ;XcDZ)(E8I$Rb!8g"O6X2@-&jfR&NP'TO!IYWcAlWRct>Y+C0=kb'7'[t%:Vo^F5!'^Uc)Z#0o:=d]()
%&dK7^Xqn)R3,Ht-SLHBhT4FKQ9*/<AR$Y`49dER&M+k>pIPN]e$q(:\al#Q>&dA(\#bh^fCk;T$CF\F:,3N`M_o."e^mWo$i_pnH
%*oKsc%1C5o+Qk$R"GVi>=a8:JFtf-?66?ZlNY;3%<4.;B<V/mW<^JpNe8I^/4!g[7j1$:*TEV0*,;?8D%h&lp6B?_$Mt0+h7m:)$
%Qbe`<W"i>WA-*_%oMMVS,DiH84V`gjM;"QDha&OVnC#P=+V=)O>8OEsL9i$4$V!U/4[pBs9]asfJX*\uL<ZrQ&A09]-V?c,YIN;R
%Y`9':%"O;P&7C<jdp^qGBGl1(Y<:8]R\Z=;-$X"fXK[K0",7:sRbPap9qhY[!/&lGk:5e''.N."+O1t)/rK[,V+6,R_Ap$WWTshR
%MfCMVfAYRUG:P.MHEG"HNHQL!r]7^&3B\=@^-nZQ`5XOpQn%j(5#^[jVc*TL#GQD[M-BL]e^8Z*J-U3cd,3nQ0#;or`E`bfG)IVN
%&10soJ3V828!$\\i=Kfo.&%=&_pG[GmpJhancZ-_hHPdp6Sntfp-;d3Yf_bGC_u6LJ6]V&3C_\speO1TKk)*t(eW=S4[Mm'9/$h%
%:msFsXV40=-H];Qp]0Rd#+Dj2+EP7H3e;:[5o^mT7GnBd+37!#7cLKOTpP7k@X<8V!=]&&#"nbp%*b!>NUBN6FN=oAF[;]-aFY!k
%-'Y(/b*[MA$Oq^m#Oe<n&$V"$'N<p@B;dSW1!J0g5nGH3WPM6k2,9,-=I;H:jMk##&]?>Qn\F?m-Et\C0T`q("&*2#6Cd%pFtejn
%XbP=<FgdIXg[Ok>m;UC(I1tWo.YBu2V9:,\VpoaG41uUR[q*eFL.FW("PmjT$[r9g%Un01VG$@#_N7J-.g4GY.4b`>P-qY;Q4V)!
%VTMaJ8uZ7iA<LId_h^h`G95Gf9,22L4/!`p-nK!H>.*2u]a3uRM.-=!L,_IFj+QsfK7J*'UPDZCPQ?]8nPhG.hM\'"!#`'pOFl)#
%"W4C/).]*_""Q(Je"4M`Yc&pe8<=jWX0gehZPt=j.$oWW1+:b9P)5n;=K!6ML.9s*keNj.><+nOD9n#PV'slECPljPltGHhLha,[
%4Be*1N0K3.`O,5N4["F[;QL<=qT23O;[`u2A2(tUMV_U2</S\lGUI`VJ:nTXW"q]pK#nS@TbVCHb"(8rXU,F[!cLBCUm0[+3&0e2
%'<s),5cpE(ff@/m[4G!Q(+\lON;J1X46haBe]Lu"qBVfKUJiC=8gC)R&hJUY=d,5@KtYM`3-lV!#GHr+V#psS!s5eCiiE]_CmEpP
%JS3!lZ%sjRRC0NH=sR^o7g==Y1ds*ZBmp&A%XaC@YbtAa"G2G;4-.9uR():T(7.4AU&^90g)DK.SHTb;1rEAj.f+F-'lS=NN)`j1
%&W"Qa-n>Wt;$tY!U4ET6f!-6c>)YIqHqT^'!<4-(4$mAAOr:l4)oCupc30574_%<_VMU.nY(I*_Z<gu5,X0>X4"tT9ULb8O+AYlC
%9#h&WFU2(nqT#id&-llFP.WGXLfPj`!j,+m4<685]:R-.a^I/>i<[h/fI\EbTMO;4KJ4</HHC)`V8k)0!"ZZZ&_njEfdnWs8!-_A
%d26]c&.Z^i%=o[35dM\kgHZ%K"ERNEgQ@]eO1NCMlLG;!fl`8-KM<HG*-d&`djpnm"I:Q.+gr"m'S*EA[ljrR;<2?80<pc<6;XR"
%M+1^Y;XQ^l+Zmhglk)adC*q'*7[Y@F_D!(''hj9"!Tb5hA>:Q!L8ot$'o5=e/2Ej_aJ$3_,,)X[e\afKDRp(k-]'j^(tQ/?JfVUM
%+n#DFrbdh[OuY6c1^E=cA5+PH3>g&4_O"c[75CN0i66TqO0kXL"+3?+c=#cW+<u3p"NqdJ;i<"h%\V%Bd[25HK=XQ*c-^D>WE99a
%auJMhY`m6s@Ea9fU<*[NNmCj#`Bf+uFIs;R]MMJ<._c_&?U1n#_&UZnBQt6lF!rSE4P_5&^K_*U.=?DK-]#X+#EE5`U6g'R-Z5]f
%NWJ7#>n5eRLo<+\/dFWi#l.Qco&-@1(#*Z"7%C[7U-k7P%\$M[E\J_+*%)tt8%FdQjDp(87J$[:VIL$%+Qjj#Gqn8$:mdG5'h%SD
%$>__uNh]6S:s1T)_Nbk_E\,3H9?/T=_KsK8@QFE[;nR.He_9!)Taug>&[ZS''h1G_^rdms2(DWeR'h=I*NL0Ea3;m?*MOAKd_U+&
%o#)sV$<.KNE_\O\0]c-NaE&%7?G6CKN!2u\U`?OW6_CI'@<gHQ#,]0[PI1M0,9ifA925N1-.,NYaV!a);,.Z:#mcgRf>4d:O,faX
%$r2g[^5`gC0N^1;_+toAaYR.-'UcVu6g/Yk?uja4,/K(Z>]S1I$6qTAlosVX"?o/NjRAZ/SNF>L'f6q^,_sZb'+,q/jV$'A5k:)j
%5qI9A!2KWVZGMaA4Ktd="HC&0.YY!4jHs`G3EH7ka]KX<YU1`2mtOL--l=t1#pD]V"sX?[\Psn`j;'%[.hT%ZV\lT6,?X"tTO?D-
%J]^We9a_^skhuf(/m.2-18,(t!_$G+fY&Jk6V/#--V3<#cii`^'-qTB,AnmhK`d#A(c'#*):%uH5`l-d&UX_<*,E6`1-S2$fEi+7
%jXQ:J6S@Jo"GRm/;'P?"$:55($+rnRa@.OV"S,_Ab&.>)#:_cC"b.Lc,ajkS;$2U47"M2c`,;L^:3I`a+,A:r#idD.ehseC@fee'
%$8X`-"F7XJ6D[Q;EQDP-fY7a\GiDV+$9K<087i8lXr6@8eFCUGV2RGFpa'U]'$tX60;6N.,Na4b_k02S7u$2,aDi=.?=elo"]#\@
%'Jn[We:X#KGRVtf9>UrnN\1pe)6dMK:$fS/XDorej8PKTNIrSco+hID*(&6KaDbinEj\Ym`e,PI$.*p)1R-mX6UkbM5gp3!%R-"_
%-(;QQ3<9)PneDQg%YQAUpM+6UhD"&F+i_nIS`lSPln[](TbV)<(^JS&f1PPO_4O;%;%,)f_Ar]B:XI'dlD[Yqikh%Q@Z.G3Nnn<j
%Om*u-@!_VO=WI!_$9;kkYCJ5mIT=B&#>kJHkQFpkOCT&**.=cG;s:I*XZ.IOR,Xbp+eZ#(MSo<fAJCeVXQF3U$D9BR?Z>lJ'f33H
%Gqot,>Ug4ZdDWl]K*?2s9K\EDUep(/&B%,*$'KOD1P!>s_l-%4EKH=cK7e@^n]1uN$6fr_d$#23*!h3q0LCR_4@NeND@FL7l(W0(
%!5ps-`"/2F:k]F@@dt0)n/*SWBaPn&V(S0DLBBYa@K:@(7RjP93'e%pS/-bcA`.OS.EQ;B\D`7X>\Od2CcIA'\dfVg3#ma:+IM+B
%Yh*[m)%KWV5;B)V#aUT*d)ZR,M6??.(61($N\SIl.Y/cC"Y1RCS-W5+KF.s>0b.KN_Ll4t$W))PJj)EYKEm@c&X[P,`Y#p<UP+!)
%M^KY+&/p(D_1E7?3*ol6_S(K?:CtCVKYIdZ37On/I/P0Q3#8XXLkq'%mNC9(dW:(h6e*(i*#p$[bI&_D_1'FW+NWJK;G*<Y`k^N:
%ZRb3D.kWg>#rjBjJFEQ-?n,RAM<]=]6,=3rhh5Z>;g!3"A'CL[S\hca#"W^_nR=uk:QiUdGi4>TL/U'NcHtrli.cYh$3kD#%6_Z3
%2h[[QTth,t\d/j,LgbH1"rsd;9''Lrn:8K).B]9U56H1p-Q(bFNSY@g:CuH=ZXjjP]Wsn;$34Dc*@^d@VuUu0Dto1Z(R*V1EFc[j
%Iq(9(O!,<,V24%EjDQp^.e%YV]_[ZcXb7#I[o*D&]<\\/Ye8@%BlbZK0I'eJ[2BA%MYQ!6"5pX$"n12[nuKQSbI3q6I9-gb#R^\1
%#%\/eiWST%T\Yet]mB`2oKhGFK_8&Y%`*:hDhI#U^8t^j)aqZ`n.Z*(4p&J@@o"o72aEq],s4Kj"u.DY0E;9Y1!kYaI6.H@T0RgW
%cAkX462I`4j&2NaS09^@pr*Tc2rkqr!VNl,,/L+W"m-bEl3S,:!qQj6'WF4so5,&/?c"CB,-r2B!_cG)4eds7+<Rj+pg08]/I`^,
%%&KR_Hojf6:kWcU-p9ou^4D\Lr6pJj%:Lh*I4"I?hQ_]<d(KHTS\dN[E,R,##R/u;ENNo.p'(R*f+V\5a3I6Wp4i'f,gd)=@3!ri
%2M(N*=csso)3Y9rjpTEMo,nWc2jM>re6Ao(km\4DQsqY7hY<XDC?o"7#SBFHB$#tm3>"mb]qGV0(_]/Q0,@$no7f42bT@W\DjUM0
%dI]7k"R@_LK6d@:bX8VI2(W[!nqK+bA71#M%G;m1&MF^OJBNVpSKN3QIc:TI'"eCaMH.Lrah(IhaZEP3e-hB4RNUHUF^Rn%7Q:Hp
%;n]$UEP+$E&(;9ta;a.Y0oocFj:,`<&"*KE6UQIN'Hh<rGH0=S!dQ"*'+>#(Rs$lF3HHJJbf<Fq"iqXk)e#c1K8Jm)0TJ*k/drM4
%"t][G_6o0\%C)EuYRJWuMucnLEb%7l2aV%_k)/)A@pCECNWdBAnW>ROP7I](5UK$7`pq'&@`KGLKfMW9T>Gh_A.@N:1Q494e<F,t
%N&NZ"N.!nJo0EQ]VQ1&_2b)UIp+=1,6d-*m6r%.&0kd2`R2O$!,186D;)!qfCet0VT"oS\YdV^q`>]'g(83/5">pqZ$Au=#>WteX
%]HLU=S="ofNKMP#l(5\8".?AW"i_KkjUcm0@D%_QH[^S,NDF"eNSo%+"Ul*&isc\Zp.o\@@:G&#/MQ#mIu`cF$KR0Y<9QppEP/OV
%ZQ(L$(4]PHI$>'#%9<rAS/m0n_(:B(@_qT;Ob.`k`Z&YC;Us(o`OeU]lt-fICmAMNn:lCl>s[t_Jjq?mhIt2%1UCJ6_b;adD2R9]
%8PjX["N%cSL,KbLDaZg%jDtLo#.lB0r<n-7"Q`IC2rf*lP`DXCRiT3^C:n$dZ_2LEJH/Rc]GmFMN:5T-]>5m4agZj/'3ZD2pd1(S
%Ys(:D[#W5`3,Q^m'QT'KXoP?Gh2hf1U0C<R];qiW3(A2sRi^PJ12Jn8MbhisUNQai1Xn>:24tmD4VMEdQB>g!+,0'i(cYqQ9oWop
%#n!eBG1/#Va\gMA]*W9!F(ngZD25>0N/C#J/-%;R4F_t9%:mThB?4s95d_YalpcSWI<WbM,\'<05^)0,YW@>#Foqp<USj40@+n(A
%8Kk]#I02bF"L8uD`"9s6A2iY0?spENG!d#LiM$Wj2h!$p3#t;sOdnFpM@:L`F+CEDG%1RY$69f,DG6g&]PeDr11sDiBK&hfWoaT@
%NBssS+\G#3YsK/!rs<F!>[J191-t<)0O&e&TQXh_aP`dtMOn*F;rDO-I]1C8"*\NCY2FI*+Y`b9L[>9q"g0Us2\Ih+7UWij67'T?
%ghnt=&N[H=XB!BT'ARI^>TpkOi-(l!Kcr"!gC9B4Xsh<W7LB/MN6'gC`ZQKqm`*O#TpLkQJNsAu-HP"Fh$0W)"M(!9#KH=Hkc*?W
%mQ5GJQ%)J4Fd+YK4NdeXgl6W?i,!VuD@AaB^4X5W(nj\pKRpat6>'^0mRArnk9?;t1PP$BDE#:n5T`JND@65aPYB8T7rTksblC@C
%OD+VBDE#_!"Q[nEh=0)/X$M<KaXk:XYsX<\(e6"3\-a-ri9O0h]?+$8)!s_B]<0YZ@GG`U[!:JJ]?rT:"mi&"ZqZg]3Pk)P@?Gs)
%U@?%]M^c:Pi,2@6-p(MQ++`QB$*f<@NGs*-S]r1a)_K64RtG^m@Ded-<,oNePT%[hDE"GP@:YJXG%3g/MJH\VDA<&SW5/VG)p'KX
%$>qe"9^K:FlWV3!;#k)aP1-)>h;F0dlp:a@[Km\$`>(f["PcGae!g>],<94F;UT?56L"`a)^lDD56:0VE[hKr6+BaG92I$U2c7rd
%2?J*?9<%3D!-a'VP`-]CgC5c(JOo.3h<5Kj'J4n'#*9)NUOpPrr(m60*P!*tNoV<p.NiG&!ZC$AV]]\G,A];8%9pR9mK!B?(,9KH
%$9aWelNE(C4UTl5KJc?-`)p)>^i$5I?O87ld8L(OcEMF3D.?Cu4c]<n,\'9GN%3>?.8O3b\s4rMlg@^VlRmSV.g.fH@o3Tf#h>Ij
%B7FSN!h38]DYZF]kuK!:FQ^T)["?[78/s67V?ku`=O&mqkW]4a2sQS.cj^,X;`NcX_fOm@AUJCZ*HOIKT">irq@du=/Ci2PS/Y:D
%W)b0REs(P4!J6?Yg^(n>aF8p<)'kjiOb('LAc0[_QQ(a*/-V=Y#_B;rcqscIAHD5eT\S5m^d%IR!l>BB$jDh6#T./5J`KQWZR@"V
%fN8`E>S+HPSDjR2)^+GXD-ZS?P8$h/3,S_1`JfQY)E1P3`>h5Ki&M4J(G+uD+LBc)ME?Z,^e!6gpSG`DN/aN-j:`MN$r+\ZIgj4(
%:3a&G0FBad?**3K!TD$*iO*h;mNedY!l5<J_Mk5r!]LSsR&0k&_l#tA+Sa\V5f%o&h\L`-7Gl+db)e^[p=N0]hUW=b!kk/DM'Y.9
%arMhEgAk5FH-VA\S[hjUU1kFCPW;%c/r;s`[94eM;),O'*&6S)i\nZ38cf^tPTX]"%(KRge7F6@>m0.kn?sLB"$M;=[gfS$G\p.$
%[]<hhUO[36hMprF`nK#$'<(:nAYa1Ya,r.,R(ubTGVap(Y(Aka.,1DYWlRLU+W.u?oa<k(2NUK8&u-Mf$H3$W)`904cgEZ^+WLm;
%^'&!d.+p=a2q<&$2Dt@<au8%]FF+;9Fq"l8+<]F3(ua&5?u3;D,".>uCu`>#,7DLL66Ht.`9t/l+E6>q"_/K+&.6=?;c-+:jk;(!
%gUO8N)o<HH\382G-lC]0+fsT6@iGf0at1WD%Pf5.]HiI'FiilMV5b&^Z&R=)";@84Ca0hX0EbmTXHGbk6uB:h;V@*C@iN[$(t^)N
%gT\iu%`[-*0ML7T'8UN#"I+-[&DLJT(5Qfgl'8;@F<e$MTONW-7LIE`Wc^.TloVV81:3$-C]fAf@MrSndqb)J9G"X@VA*Dc#huQk
%#o-)E[Qu%3Lq!c.Fr,WcVujCX.fP%(9rK+e>\"j`HQY,]2V*(A5G''7!sJe^-32eVQ@Z'H!,Pk-5A/=DJjt8U@H9H_J8NrS'F,oa
%gDF3e)8Zfd%EhG%gCo*S8C^)o1dTcKS2CAYkB->g24UQ5g(5;QV#aD&!"%GcH]*rH,;j*8Y)VQgAEJKHNTMIEd1CD:Ur68PD5'LG
%&u/@002*c1FDZCQPp7?t[E0V-BIK*oB+11H'jeKfJO(CI[3:qDm8O.j>r!kUMQVr\7?13O41I2uq&rfg?:5>,MU!\;f$9ck3Pj5M
%+u2lDe]s?=/Z@B+:=0?I%@Rl/JnJjl(9Cqqe-<]T]O`IHg6kTm.A1k0P!RB<g474u-D1B7)[ZW]c4!2r1Icg1[\CR;!QZ/31Ia'8
%5X[uL$3AUN?Ao\ZV2Z=,jJ_K;g.<gk0T\3b1SAD/ER@NHZk3Y!TsZV@!i$JJ^]Li2@2crn\jV>#L):9)/II(f\-p^H+op=_6M;c$
%fa'<6.1-YmSH-BS>ZoF[6`,sD.=*m?H;Rj"K4dPV5N[D&G'8s<L^A/]6mj-+M]cYBEAnpdb'a9U**,nB+[)5Y/f6E,&n[4JAqO-<
%8[];JCnOZ-)!BdDQk`fe"S3N5YmC/:7*CU\I\L6'OfL,GO!36>'Id80/I>63l5Q\s1/9_q^7^O.!g=(WTH[?oOr^C'\q"<YIMnE^
%)DSOmJ5Z_C2Q-W,8Q9m1*&&T%BLKprRg.+]!g"EKKiUN=,:DGEnZbC>a84$^Nt'"E*A6R.&<Ts(!G)8OY+k"a2Kk'XI?C5.CZ7>3
%&K2TtUbR[,OKefr'C?V<N/`X]?3mA45?eOP&m4MCrWbm2#(jLjULL!J"]7)Z'jFoc$Ao:4BkVd^?t,HR`@r,B]*cc]5[meL]T7m$
%i8GgZPb_%S6#)K8D:G(<f9kiZfLSJqLEL&1KI5hh5o)9Z_nf"hZ%6-l,XEQX&Uk*r7Ka@YC1Wk@,kfS0@q#Oo@'KhJgKMo&RpohO
%c3USD?t,o.4#!fN'pqJoL_*T@Yu+aoJO;,rdH?J?SY0Gq9:F[Qpmt?f60'_)(:]!+f89hK$Af3O"'C"T&@"O<YRHZMK;64(KPi<V
%_Zk_QZm17AL?HoT2F57#b[EE\+rGK76u.@`-F79>.o=lSLZ'uB<#Pf>-fR/p)"un')ptleW<f>Q@A?9sYm#`5NRh(NZL*1nBN$4!
%E5oc7_>2HOYYd@j>Zc(D,^CjC$6(Ds*1A1Q`GrW:LkUg+/6$;MZ*861)%2cd(:I*f=P3*g_8HTp2B5YscCe:l+FaR;eJYWrJP:ci
%"Uc7t&F$W"/8Q$R)<#n_!=")b5q<*G)\=X#Z8*S3@gcPO#o#:X%2g95@9]if,=pISrIQSG7)DE.i*%%PD[$p:7Z<"[ljtsl-:lc;
%NXG,1Bd&eJgD'u5-kt/b6,H)K)J`af'XkuF5YmNb1^[V=`N:7kUL*=Sl:BR#$WGo?+CUJ#)9\2&8D%U26+@Ro_FDe-WdZW;2Ib&;
%^2=/p5D1dgNXTE+,8ORa"G0)nli_9EJq]1-05,ZA/8QSV7_VVs)D;^GpP=J3hG[_`7`'n1'e7WX8D):D52$,G)kek2H6Po4k[qf]
%$G\O?oR;J5AnOs!U`sX\f,I^n@3BC53GB:(J?[Fg9b>)KKFK[c.0>*S%7UUYY>(+_#r\fpNeECcMf^'Z#ob=\Lc.Q9VJsoK3taG[
%M':MkP.E]:GOGY@)bol)N*\6FaKh*W8D'kp'%Hf7KM?nfj#[l3c@>mG(^V/*@Z2Eb,%1SA?V3lABKi3-0bQBBd)7b,_?Mb=/M[qs
%[\GLm8D)S*AO,F=KT1j$+l*FR-j1D'/kLrG/gX3,YQlqY@DaV:?m?fGBRuo1Je8G21ek7dC-s@pR@mt!PS"A:P6DC7<C2Qg?o2]Q
%^/H_%bE+%b)$aOM(sjBbf]^?9$7J'q'<.6c7q)PX`^D\B@'J#l8]b?b$oUQ5o856/An3im^gLXk<1,*nfG%d(AV:3lRqsBU\Us/X
%@.u-U,eW/F,D)p]0/V]sU[JNZ1'@h$c_:O]N0T8%M'`:W%>9C`>lhf39,Z`Q9Rs@pc@hPoJqT*t]&<o$)[R2]0d:&d.\I_dOKd+7
%:XuTc#oh(pPhJ/a_F=[5^gPNRmfU;_bk6$J96$J34%7$+ck@c10T[kG6223DCc&n7"o&B<2NSNj?(nKbJr:pOfLWjBapAb?p4r`;
%!elV'(p&iP:tTHZ0mNp/)^Sn4,sg29#'sBD*=3[U(5-fb,%5]$+CX='=&\KWf_F9[:Feug5c-[l8D$2$a=]cq`\n[=2*o)K1+nt;
%@2$.ZYoO/j6Qi?XbF%sXTq-q3]fk3'M:dbr@A?32Z"VsuYgG39/5NOT0sqmo-O&KJ,RstNSRQ$&g1:M(Q%0Ht7odD/#eO"QlO/Ul
%ENsQ>P\XI<#LGF!bF?#/_I.`gc?>m0fWa.55Y=>H'A&V@@ULQA]-mf*@Z.T;?l+R.Qi^Y32EE=D2<XXVq!0,.E.WOEd)n:27ZbRr
%I9eh'AdWqqBlb,q`R*5H?_S4pCPZmpC\S&->&]94p_mVeOP'r+[,]Bg$1'M\$##N"YJKa>9#nS6(KU2ZOOoNAKbX%q#aJ'C&jQ^.
%l"kV5k]7"U%f-^p>sjSb9FBB+<mdU2\80145fd7t],(;n7D&7k*de$4%Imb4EY,0b%!Vt"7$+PPSn\Gkg..8d)<KRFrFQ)@7`UfD
%.i?mr(am'86X3"4!uBE&Lhk=u-PM/K+JPW4!3X"'.LNsK35_thpB9@lZ@An?kgn\B+K^1'''.\Qp$rEtFf:7r0$r0_1p"D9>:57q
%SH)lHa!_A#eds*ZLjFYf%>>mCPS6mZ`#=29>/PCe:b@d[cnX8Q-A^4aBi,`eSq'QYpWh<LB+=B`\,dsrekkB<pUm/%6^/&:QNCb.
%Y&G(N-WnruU_ue@!=_'lig%;]_[ih71dSANV3-Uj@?!l)*)_?lL<$OBblkm%$oj^7JN:Z"6P0L;)SuRsQP&Z\eM(@Ib\$WbN1l)=
%[n$$+7YbCMeIfK`'BU"@)WMY9\WtP7MNJ[.>'/h?TOMB.!*:[GJDaHUJL$c$<b#\\:V$erUcjj06*%[!'hgln+lj?@7)>r/#\AZb
%'ZfR\LdDcnC4rYhc%Q2!US*,D?8W;0A2K"@"tCtX$X,FGfV$bj^oH@1<mdsR5<WO3&u]OVkn'7`OK-]d^5>hu/ebVd#u!4L"Q?$f
%P\SMV6;rt\YI,;eUDabB#h"q\WY%9%K?-N<C'AkqKPDXV[E'sd+CI%L"JFIA70(0%#!>-2"ThK%nE^g1C<3?K]M$O9JnB79&N7$i
%I!@$ce4u_B"dp:a_NC<b/]U8PW"W9Jn.juK+gBH]^^:@#9'rERl3*?_aT7&^TU=4pp(p(o8*"$XLt!$Ij8_^[(C,8Z"cjSq2gR#&
%E7>ItrClG>Q,$)8+jFEE@')c5q?2bgU,1@Q'T5"k'mPG,cBJpQJjeF4doo;_+E)qp>?c'F3Fm:?6X<Ln@k(_t'Kd3K$:8#0H$L-W
%)B`1e</*Y7(Y/ZlJ6FMp/+D"-ZDHd6=mA^8pp?6$].*MsU1BFI4j>^H$9aA$LGe.,FL4Sb-6-p;Z4qI#p4qbR]ad+5a`%MS+fNko
%\QOQY6\?A@[%WL?m9-q3aD!#"Jfmfu,!SG3/)W60r$=ru7<o74Tu^6qq.-u-iX49^g,)=#$eTPh>D)<Fdg"8+Jm6'[7[kD6.M/[q
%KXep]>/?ZIGZ5n%%F;n9=)!JI&jW.bM#oTK0!N*?V#XUR_5RoPdt)poMD[!4E!eHC*M]H,OJ]i86"lbs1_!P1<+MG;VPBs':10q"
%0a-ST6(%p*&9>K?a>=G`\*3*SFDM(mLhUi+@R-8&9S9rVl4`j;SLCJWCo<'0=6-<=)\)J?`P&56d`!u)&JGbl2nG#$>qHp>VU3aV
%`AA0XQEF,R7?F>HAJ\9X-G\'[Ea_PUQ%j*3Z41h1p]L?q-`GIiE#id]PqJRTU0uB!m"*Lj'27Z7a;7HCS:7K"dRolL8deW"V87G<
%V*kJ6)WHoWPFfQ]6Td)+LmV?sK>nOkFT4@18IJOlU_*pFQB!5]"e9-*,Rje*6/\TuU<8T#g&sk`#Z?1mOCY1i]RWOc$)/'NkT&9H
%3e<@sJ1mq=9F0'8MDtll1n5f07ofo[&ihI6&>YHH;[8CRA%@RLpsDOWZ5>d:E(r<CO2gb^.B]=6"!f3Rbo&V^,"p>Hak4uP6AjZ@
%!ZeE4A:be\i0WYfA)QRf@+A32BLp^K)RET<#cZ7STLK$mEGVfHT[?;Q^10XmF2]S=1gk;J3njcl\rPl-J\rWn2e!se?8Udd]!qeX
%%=i,*6PHh?Lb5:t'F'K8YA=(D<chcg>=",NRlKLX1Jfn:-mh0tM&(b`Ko(OM@:l^96s!/=aA\=:3.mS[-m6o;14]QQHL.Rt6l5A(
%$USqYpR%[@$[7uT6UU2m+]'sW1k<!Ma&LFK*#Q;-!Y,[e#m^ti<:Hd:!>ufNl>p53L'AG0U:E$32#Kfo9nnAI7Z%M4W6jH?/"B1,
%\<Ma<^B>2gS88J'3IuiYO])#i&ipnb*>M7],tpRt4-`[:'158=,Vc7<<cb/A',o"4;!hdoCETf2=kc696_uKf.4-meF%-(qk`5hZ
%ae]IQ%18A1ZYT:=K2r1cSDlheneSc2+eCb<TYNNQK*G"S`0_8nBE3%H8cakSSHY@-^k,<$ih]JuW9%UFTqDutf)$1-BGBL.m6K$m
%)(Q7TlHUi^i';pdNG(3?bl_U7.1.mC&?(!Y!Y$hh=O0u4TFm<_qMkTi.N'8AGM-c,(sq^[mG.R<F8N_ErQRS(o@7pM#mh1Lcb@'+
%qRR..[Z0tDM!7^$5I@m.IsL\6Q`omsL&Uf,k3hn8mH]g_^UcJ>>WuMjNuse/B9,53Msl+Do[+]Ys!]/!=o;q0f0:2@k=&L#Z2!ef
%0oP5^U$o^@o[+7a8WNo8&4"`1Ucn8deKZd8&b0CsBW//\alMu=M>[,`O6We>5Ac1a!sa,RUi/+N(KaOd!]C#bl4B&UZ0S8*^d$Ph
%:DNm1L*[+KVkF(r%>9b2`^fp!60KOS3&-8Gg1MWs1g&f#e!ZlMJYFdERn-DeEG28@H`0,,\%Z^c`VKSgj"I>9E)%QA%c@MCO6BL+
%?ld0U.MUm9D[Pn43+geaKr't<qDj[>!(]d962kBr^B,B8a]P9Ie.WE7gn.-U&/KS+!LAd7<s\DJkW'gI,n)+YWE]ZGgLt9iNV>H,
%K/,%NRYna4]>U7e\A.GPZ[OW*<__\`876qZ'Y4B\Nn0roF<I8>l2h!V'bVqs(44tTR-Ba1C!":H`$3-n#KWkeU*C,8kgfoOga$EJ
%ga()n`$E9d=c=#!l24H1Z%-B'O*I(#T="pTroW1Ad/,-r:rRtbPfrPnEW(uX@:LZOY<bp?chptf]rp/CHQF:pbBY.O]Bt3/V+K37
%NXhrU'@@WlIV>LdDeR2/THi*ckbK*p:uL,f9Q#HhN&ct7RE2PRQr2WbU5=g*\fI-7!mAHS<!Z9EgDf[i0IMtNd8V8Q"#0qL@eP3'
%XY%F\C)S%4..?dQ=[7Q#H0B]\);."5XD]p,4K*%b9Q7lJN9kA>bb-o'`F'l2',i\!d.^Hn4H]\<MRPYig!E8^9T+8<E'1?PJtkgo
%"<*H/V[ASUUI.F>$(Zq6:o&LZkp8B&B/T9g5XqQGKTQ5t(\bYK%jh`u21YUK.<K3VhLo-;[7!q:joW)79MCar=kcCAXWlRJe/2G8
%-UPiR;qg%M61Q^;%I'NP=NeBf)i),t;B9qEF6)>3TWo/I?`WQUS7t:cYi)a4BK#hY79KitR3oMI.Z`C_3k$/bP`;nhj*di/o[B4+
%VRS-gDI-BHeG?s&hK5UtqMaN3*4(]s^=#`*"/=uJ,FJ"B.<JYQ38)el%O.c8?PA#E?!njChK4&*=F/%>)Ska^(F`f-nORWf!"kD'
%KPaoQHOnXA)$;!_E47`.@Ac\Q/$nH?</3]s::_.N#C2"^FKR_=oJKK1JM4foL557Onl9as\R8YKo`10T]jj#C<nQ%KS$)JD6"4NO
%b*M8lAE!]5KTZs&OG;$k,IeEC`[j9'&u1os&cJ-cPOtBN'k4P.HcJ#S]Cf#hTF8ZWI-@E`a@0LQ'goo_hLt,\i!U2;LLhZt8#:()
%dahrHlTr5I?Cg`"1:30:a;s4fQrCNu-8XuT`KN5)J)]N2qBF?I<4PR9g8>?(.U-*p5Ta2U,9-UgoZp/R@h]&;N-ka@-0:4FC.N.G
%Qb3n_Jr-\RG%7V$/%?S,E>;p85i_`2E&N*Q@ZC9h=EN`/?3Z2][;o@%mgr2lKY>CFh3]c\kTmVoM2B't_7fT&-fZE%^`l'Y+/]W]
%r=Noh.M!lBR[lRfcc?fAc+N`S9Us6>.oW#1_D*a[MMT&0KF&@?X#M&(3/QfAqT/59JP6a642+bSPGuWrIE_jm9i6p:;];HOeAL#D
%HQfQ9@6D31l7N:9Th`qt$J?d+F$I\?eUrV]Xrmtqj?>]=,ADBsU0G_)Up5!;'.7;:i?@imMIhk_H)Ym1LW:-m"i3D_kaJ&E*)FKX
%&LNXQhD38.>c%<'M:%4-d%=V^f!o(UAB!FeJE3OK1fQ!"DQIk[q'mQphGm8!\Y59l5A5"%jHPmN]q]sd?\<jONkp;or44)3ZSK!d
%Q+/T-nIhrRH(jT%QY8710=L0<$7o6?@Z2+4B).S:U\%+<.O&Er=jBf;T'ppRNUIn*naQM)915>'];KR\(!fTbhM6BL]K&[,8k^B9
%E>2l`bqd,6&s'FMi7F2/pPr\-n>rW.W&D!?j`?[8;WCui8%[a@P2RX:_ikCa<Td((2C^kYTV!V<,NuK>k(f>=FL!S2ch@NG=IBU4
%)Ge9_8Oqp-AKmT.Uh-tY_a'Br\(m@Y!-%"s/9b0=r[fL(\H?<LXqFZ.dK+)QFO+,HoFP01V35"=!q\An/QhB?&VZ=6Eu<O63l_;9
%AORMIH7T\m%mnJka?cJAoYV6?QQEpm#=QXQnuNg7Q;g#:gQ5N8)9/nd&1:'T&7MBX3J5,X-<1Wi!D2]bikG6pe1[F8??7Rfi%22J
%1_-$hq\o,797];V<`Iut7u%^XRa%%^0!i9l]^+PSfdNm>jhA(8]SVh>n@\<f2]::j-78ltbW`%,^^jTO3\<nd83nT_S;9BRZW._F
%@F'UXs2@f:4S*$hK>:[2R\GA["!Z`G/?^ISLE%'E2JUi'S.SmVFiKBfZ91?iLG>$pjrWY/<R3+uQ7T&_6\5cErCl[.8=!1,'!95J
%&)ICL?rNTf+Sr/aX"SsmW\&"c]n]RpkJ:CYdP68JLoPb$-HS;'$lp^n/@*@+9Mp'o-p"YO=bN5#ks=cM.n1A#gSj>WK_8?E](,)W
%a!sF+iQO9kkLMSl*S.aB@'W,8l%V_tNe_u9#acHN2g*B`\q,,+-gY]0lQ78GHPYb8eU7NYEB48fX,(GpYSc0ZpE&:Mon\;5%b+LD
%6>h9,en3<>/1_SL76!kL[A8_\.dtBUaN0l1FS2aAlOJX;kHuIlU\"CX0b/4@S`aboXJ\o",1_:kKeH7>@q6d=9H9bG-^H5U2UeWb
%\J,7eoqD1!)gO'I#:$(he*BV(6X#UF'5sH@KtLS@@<Pq3AB>W]Vp'Y=TXVL/7>L7':g;2kF(-R2S016I&rYu!&7ThO#G-fjErDc3
%XeK#]d:--6;3ab0Xg;`Om5r!nDP'5Q;E?#Wd;[`f-A;V:i$kYJ2''e,@4J!P)DuFDqN</^[bgkOFfEQ!XV8DFYdd-r&1$WbX1NEP
%frD.ZUl^]5g9.YN-P,jEY5n'_7#[^)+>/A>p_=@!;e-5ch@h-_%661o`_MF#."sumkub\=P`OkL&%4C0dXf\5:<]W$%g4%\/9N(Q
%+)^`ke`2kD>I`Or^(dksK3FP7RX(RiM)np`+cuupb_jF#$up\<-FG-hp"`&unXNpYl>jh7oaWiZ3f-F.1_?/E*LdNX`5[n,X(6a-
%]2Ug11]l?ZM&<:4c/QgS"N2i(IN+i&:k?nMLHmlk6jtXA"VOOck\FhN`V1E?G!*4S$:X5<FY76KmjuHbMLu`*TL?U"BM%pZ5eq_=
%r)H#iB%[A4iraM_UlJ&(k4S'=l72o42TsYXh3A0VQ#)2u,jq91*?uGi:<^:g8LGc12Wh1:X=k$;h!\[j[Lt8]-ci\g/-hiIN0m\+
%UKKq36rHO@;,o,cKI?H:f*8l_bpsumY)d!RPN).RU\>(V%ob\&/8ZP&Z/rt[PB;V*>V]njmZ+\f2=W#Z5_/&e1lSjmEB8jRp$CTe
%7B#0<U&1Xs0tVJ*;MH149[6GTs/AJ!Sh/k1eDG3hJdWZOoGTT>i'mV,mpB3i`H2/!K4Vk4)2o,.Ag%h(pG8L_&APUc>(H6APi(J#
%MF<8W-"?+,(4d&EJM1N/1G?p\lTepB`[jI51Bnj@5e[@U_2/a2W%O";3a8u=!7C'XLEutWBHWh3Ldj9-dT'4SMZEIDk3te,^pOcQ
%M&[/bSR-VCI(2uf.uM(L4g!M*.>dJq[AT)Sn$LuoJAWMpAFa&;6D1Z!&D.9a=b)mY"d%C[j:U*3I)+QI!^Q&a?Bb&%^<[tTRs<0R
%!;'2T(/%9D^%!U[.Qq!#d"NlgYO9d*<bLEsp>E=`ed%=>V/`@oBRL<0_b,(5!#*9H;Q4Pl5$oKpX*dbQ85Z-#fYOc7jj]T.R%6LO
%Wr!7]Y)Hd/T%1=f9E`i').$H82eJf+_BD%`_haU,Z:&3EXtOW$_G1I8\$<2o'?-/:Apk*Jn=iASeR4,k*]gLq?9T&SKoC[DhSW^H
%6gQfl-MbeSN@TQtD10TAakG>1&;%pd?nh&_PL.R4<I[OpMDU2`TmMe7M3Nb96qb['e4Bbi'd6a\Pn7:LZ2A:feGquqj1uI#p[7kp
%])3BO5TAIUm^b]qM*e-/KS>!A4$a]Bfl;Q[X7XcX7qeBoOKFeV*3PS]JX1!ia9!2L[143N8#FK[6JsY6P`TO\1+t&EUaq!<OnN;O
%.OiI1'KkuAGLf*M(XbFGM!Ab/UnId%0O4*tpf$8)!SQs?kb@)]^5U/3!*)MCW_eci&M&3OZMF`tA!Tq7M"CCm[fI'C[Q.O@VbT'O
%/m4s0r![kDL<#!;rY(u<,8[3"8NOu=EFU(^pWe^^6,]GTE#J5m*8f\^P0B5s?4VO%*EuDD'W>@'J3a&_-<^!cJsk76+?:Q.W/.^c
%V$@!Y#-52_pFa1KLmVL6lcM\8kTLfe.Q7>RN)`@JdjV2>r/c5;>gWX=ZORo1$".hU;F7OSiuO"`;LW%NK>m?9!3%;<&!d9V-k2/?
%#*f41Nuh!UME)80!Y"U]TF27e-EC*4d$I2h2ch)Ja.>HSOS`1WZ0+Z;7%pYH"H5^cgY)gr$35ZAb8*L,a,/0^2,QnJ,,1"$j)IQk
%&bATiD"s`e'*,G_p6\2.>H!;s7'!S\r'&c8Pm-j2p9@cdXDA4VGnAE3aJPn0&i4F"$>;I%EN-E-F%]koJji"_-pB@>0DJrWW%S>)
%_"cC2@1J)P_F4A1R>cYaN%+="9=M$7X"f_B($N35Gfh.*LA.[DhcN.)+#Y%WQjG@(*Y'/?Mrc1?BK.5'm2F]2QtmfgS/hQ*JAkXI
%c]rc6JAcW&boeB!023%`I+0'A8_hr%4g(k4=-Y^"<*H`DK3XYQ32>2O;.i0=iKK*<DjF?^"C_q5I.2q<5T6!/M5(u^Z'-10)4O$X
%]/Yo\=ZaEY8QS]`4bAGV5.X.k_2F5A<*,fC*@SbHa"J$S__33m+n<8OU(Ll%DF%YC=Vr%E=!G4,[sJN/c6Y^V1b=b'3+L!I1N#U@
%4[T5mE@2AB(=a7EY=40/=U"TA7OPEo<:N9^2[,r_$SGPBC?WM*7YB@k,e#M8@]'H3%N!S*(4X.q`#8.NH]_sc&43#RHG\8K*jA&p
%5dsmTgK:gPHSAd]X>*gk/=Klf#;UMH$4CBtWWt='oGP8>D)Y5op.M_oJ+Q4BR9V;iZ]4g8*Nr>?,R"6H)*NkEg-`+pd8o6<M+^ST
%d8g"*M)?O'cdNpJ)nVdK?0,n`(,OLa^r0If<u[F6@<tOC:7PMf,'-`Q)<b6,[OZl-?&)R=K#"I\muo6\-mhqJh%'QGVO90pWUi8M
%jol>;lWbPQd"5B5h%1?-H'MB&*2nGDe6?)SaS,rOS]EM+<r;LT(69@LO2a.61NKE$g957SR8KA)U5M*hK:\LP='6^d4V:&EDc<_Z
%7M)A*N3#0>H57H3k.!@;7[0$(2AecJXqbD#r?AIFLOqFGiOOM0YO[IQEg7JNZHT>u4UcEB8k=%U&^`Webg&6m7S]IFACKm.A8rJX
%0QF04@Ec;E&LFG3NqY8-P?,+o%Ga()R#DRai3b<paOH0tBVNS)cGWi\9*09_P[iTmEQ:Jk@V"&k8L%%gb6GMOOqBtg.Xbh>rB0E>
%:oup<i/$0DL_Aea0i@^J<2L?BIu3BrD2t>j#$-%[dYP"nYRRUkKq-*('K+A]E+Ur8-a8X3i%0LoB[4/tW2=%'8o0Xlm)p)SUTpm0
%OKVZu%AjBpo6j[EAlCF!&5Z?0!CC_Iq?167#e;V4$\\U*QEL)UBnMS+XQ2'kX7d\+Y[,h7`^,kk^(.E"QE[nc;hOY%7N+c9[':DJ
%0k;rn@^IL)9YE-SVu.F$>>idX":miY2i8j`NK`oGBB=9!MhC>grAliJ-+0EK;Fa`QOdHiAB_s6W,SlsIV\1E_lF3c_%sK;U(G,Ze
%dqpMjN,)K.&[mC>`#SZO_-<,"0l"\?QmACp#W-S]\ac]J7AKAbJ1+&&$;b'Z#F8$r8'(tn),<N(SVA%K;K^NgClMTu`%/:$U?$\G
%NI)(a@GrdV'fHoZQAD)3a/jJG<+4;ZM_UA_$q[7+1coZc<pkLl"0\Cd#NnKe%3C1?eP6[/o,2R9'+sqop<^B\qB3-I^#l<P%nL*P
%q\!H@0p._nfFb+W.qt07_uf>8ku:FG4VE&Dr/1\/Nf=<H(g<`?Wba[<3ka=tCnemP7(ObGOJ9h_flksTgMj)?F1?`h]L99T:5Gk`
%\$j\W2MiK,5q50F.jK*Fj@Y,*Ecs"M4iC\_;'fl/&OEU,J>,Z1,t'JU-T.RZrlMb%-IX994iAoL?33"eJrT:9/t'T-T\`>'O:A9Q
%UHM.G@o%%Q;$5\W=nRW-_Dg9c4am[![UnP/ht-r6'04rd!eF\N1O(mag-KhT8Qp,17EXD]%gbd%9^ERAehB/clZ+2L,.`F!+Q?C_
%r<r@]*($9^LEfPpAD'"`[L,8cEYK@0>%56tR2a6S7:f/khP36lV923$;Re7:s/<3G0PYJ36*1l!,FS\>-J"D,"!R:f`^!*Bl@Z>[
%/0e:n5W#2?8nRM)4rBq[Zs)N315dFYC;u\BX>OuME*oX)@7pQ_Fu\;1O=gm#;3kSAq$oj%P)<IL4%0scM!E'TLmV)&laTpa?d"Ia
%Q0n`.ROJh+&Ipq-*+B.3Cs[(%0JbQKBFg6CH(s"^6C2^;U<tlfmfAW7,Wk^C<&Lf]1>VPH3N'B&KeV=6=q"T/qIdm@QX*KV_)ZF6
%MW6r9?R\j'%WGGF$ku<lOqo]R>l[Q#jXR@'j+f.Y8J/_AH=6ik$4kcffgtBD;>1+qF*$,]<[3eQM`^Y5RYI]t(NtAk5oF=Sc"G;7
%%oer^LEIX6#`a(^)](/daDc<q8,P<VT1_nlLTH?D?=UTTDQMn$X:eeH!/nlq?VlA8!91:=2ir_p^TTNc6HLMH)!Ah#6qLO<lD06#
%`Mu,,O<hJ."D.)<)'`X!k)E+n3PpEZ"F;sMPTUalM9n[f!1m*-1M>4:4EplqTCN]AY<<g7B^m!3$$G]g`o2\(7.Ct:!cV/#->HVh
%X%_"r+#MZelT#<P18'ak1D,i;\R?7Z)INQGFPt8/":23tDX#!1JG77L.o/#9G[u?^/g;?KEL[:t,g#5K/6I6MO=F,Xfglsopl-8e
%a`>^fn2CD0Ca0fIYSs'[2-_CN<k]Xna?t:c@uO>N4FCTI+3B63&PcJLLN8/&JF=Gq<JpkIr69Pj5:<B*TEuTo-rG:$fa=N@iOgLr
%;ii[A'<M]06#Uqo\2O&^^m9!Zf2hN[Qlp[$#^\8l5:Zce:60rtRWlr!_nGJaBe7*@BSr0pCIcB\-MB88?cFm`2<R)EYC9N"!u>3_
%(.ii!O9kUiR^D1(Pbfd265b0todN0NUI+;d.Lp1]RU4E;I?LDE-@q%1^@VR%cp'ml&:1-F7MV4)OXuu:eT5)tUb?2I\+Us.!hKfc
%-V=m^m$-.f"<?;j\tc&O5YFfO10slJ]J:kh`2/#F94#B0F<)Q[%WrtS1$^!5Xf=,VJqHX66^Bj#6Fd_V#^H5SkcTYJl33-uVsJWZ
%+`;h%,h=!fs$X$fV"Z(EWqje]E^m*@iU,SXZ`%$gc<4jdN1:D#=ZhJqV!6(:/$oT.-XT70]&;'M@+""0nt.iBp`PERJ>UOVVSKq2
%+BD*F[irBU&W-IT9V4H7@jiV>&sXc2>6XZ[@h1Ip]e^6K1soT.<Q3)m1J-,kC8.e"mW/S7=36iMPRH$e,RpmF@Uop]6Z\$]N=s1r
%:c)1C:XiXImX%bbFYsbARu#qBhB!<I!2.S-^rrDH8t[COM-;V7A5+9XY++"d0OkErNE3g*,:Gl&>.qFt<TshR5lqjTbn@N;1&[,#
%XeU`@`f2DMfN9o-"i(@M-Pr67\2b[HEX@Weh9_@4%^;,tMkPplqAqd2ilmCGVKPTh[&Cl;iH]t;FTbt]L?CFl'N$67)"lMd%VUH5
%m%0?le+DN/^0RaT*c\*rSrMpS*R$n\iPfmW26_qNb#5;E&UVHkk8<U-nQ=#+or?!NRTZ9Yq&UM)8/0HK;'9=:AUH[$8b*\1!W_=>
%&lj`&Z]EJ#-jl%TZfD,W4\MGc@Eo+D:;,`lAH9LU2),3pH8V@=a;[^'"r")8@>ZQH>-][_b)TfYOk!a3)_6o3.14$*`"4N/@4WN^
%N1h^<%6?Gt669+=9ed.Mlsq`MfE2=t9EJ"UU(Ch!.m3NHO]3OrRdgkb<sj_Up;EbX?@KgO!d[D;i2IP4PBq)$BkIm&"$&RQ;$:4F
%<TTg!"I,ZA+-AX>O/Jmp]-D>;BomKVrAaqUiH\@2"J]H!E"6:p&(V;0LmNe!l>2H)`\7UN5%N.DLm&,9CLmjpW=$uO,,20D-1fLr
%3ZWQp38OhZlAQ-7]:T>p.Dp'Jd@ij#hIUa%fmuF`&PuT^KJbS125(8<M-7gGOMkquol>Z5mps)jb-C6e80&PjOp@q4_h4a&Q0ui`
%Z2(AGj@(TnKGgRKn5dD=Nn?!iZWpsGE[g(uHHNSD0F$P`LJ%20Y^^o6]s8V*1Ut(`bcGC>+ilsc_Nm\+8eGTd%)EbnCQ<NUeU*3o
%iA0=.,b-)[KjI>NLa$"!dDLTC8P*^liZl]ohfuQB@\F&fI(fu4=G]<\'T)u?6LU3a#s&,qD;S-:?s8BW[ZiX9.WohZM"f>Z\Q"?[
%2H0s]EJa7G"]Q(kk\=kEF#mb]\LYMYVY5Hn&iicf$/r05r3#)k9"&EA6`-Aa9i>K3$U)<mC/C4LfEG:-+=KlcO^Muj=I8<(cDq70
%o.f98`5-:kF"dA9SLqfj&^b=Z#KE5Z&W9fLJfaQ9'6]b6L+,1k]BVO)\U4K`+#AgdJO@7b(';H`a.u?n;)_rPctjO`,ecg\8a\kn
%+=QH.cU!2c*G&1_Z01%TCaBZ<B:Zpm#t#62h^tA&&#J9\VZ3sR0;h)c.)kJ<9S6YOb`DfM`6=_A_5s:d81'LkOV,B5,^[>l-)+H\
%#cuG!4_/\g@+l&IXof/d@j<H7'`on0QTd[bX50TDb\!M`NZL6SQ!T?hWfkp?<<AEBej($lYo8&OkoSbAg;-_V34?7tFbYES6!#->
%ULFTFQ"5ak,]81[-s39Yji[`_]r(N6VTlusJEV,FF^N3qZZ8QlIhj3TUWW.<j$iH`PmKMk"M3kZRC#_^WLb?TX'dO=nc%Y\HB+&Q
%`;G5+H2&LBNh\$lj%lm/JW9`I(?IR`8bL%(f^AkFP*gq<XK\jP.-/AL0RIuQ"q'D>Sh"#K!Z%EE`g*:]Z!.OP.TIWu4e[,m*hlmq
%Lg>'GoO@[I85M<CK%S15":l9(7[Q*.9i955Mng`S"fp.'Y-2#2ACF?a.crak,0N-&!DOB8ZtO8CRY<-=25Q)(Drd:N)CZAVQC7l[
%C=JJr?N+I%fZB-g!)N[V(K#^8XasI5+JDQTcR4_-m91'[WnTg6O\pu,)K;SG-pjWITT);YVH1#M+aVD8Y%^-+U4Z[6C0dEoqh^]R
%*-#Ig'n^6)WnY_a$rr.bBT<-m"YH!F76bs'`8iB5M8!\XR%bf1AIs0c*At)g0e/<>_&@><A;P'mP\[;kC9%\HAEL"Jnj\Hf<IJ:U
%mk^OEP&R,!Xq_<JB>G;2"":gTRfK\rUDKSJ^l.IN"YU]+5a8bn:N7mM"Be%#Rb()7TN`X3e*K-rU2^6PK_b+*%(QXCK8(0D?"+*\
%$,8atHI&fuNJL\.L-DhViRg,5,U5[9_l3-ie,[F[#YQoE0n9F1'YJr_3OZ%ZDtb*9R#CB0IQ2*+"%"rn";:MIC&:t%A',_Zlj0#C
%Hbe&I8a_oV\8bOUfaqOH[`maFEJh^<WMLU`%i=e)kZNrtIPN7MW#mSZRn>XXFFL%?3`rg=Z3=oI.:LjkCoFj-XtQrcMAkFV9Y/>_
%FL)UXG+=$h&Kco$AukV:<V?[VOF)Lc9:6PCLHh:2)[EX"*C/7:LluWNli>GuEDV^<_#g`-;'.*cW;q+S'fF'r^]MFm2//C>eGt0X
%oe=4lTZ0!LS'G`_&@ReBUI%\GH:Kt?&r@T13(?9NLl9gY!Xc+[;Kt*-TI?d[n9*+V+"5UA`r=MYPn6(DUGN`[K-]C^5j[`$+WEB4
%T_T.RQuBf=2_nd\FD@8Fg6rZ5&9/53mPK5qP-4uIQ:1%AZK_Nh\9AQ"B@qVF@/rS]Tl3QV4WI(8,4t(V.+IdiZ9pfE,Z$DSej2\&
%e=KdH+IWEYE,J90FGc%a&ZWLo/D8-YiF3\E-J>9S%&2?>"V;.;^ef;#MU*O[idO+u<<b!]fQ;NUqu]q/Xg\p>M<5!/_.d4FFqX8$
%-bjC%&k$7\P:9PlW.JIO=X^&63[$Er&p\YgmQtJli_7;m^53ee5qisuoKtY2_>kh0"2ul*^QgHZ#n.IBC=]a\CJ4+^d[:bgV%[:_
%Eg^VC.e%gO!6aG6PhSVkZ7l/s&K>>V\BP\t[_uAj8I6_Ql1(a0\LX'(Jt@V[qpd-C.8d4F';>/>@uaps@Ln6r+rE9s"XU`jZtD\K
%9m"^c?r/]\f1?4ASg?/3W+7('$(N^S5d1qEbEF/5"(O4]4d%=SHS?pE-'D>*KUu;+!*=&Mq*n%RO[9t;A;^T+%icDHUF]9?N2_nS
%4((KdZtbg8]T\Vr=?%)fWZ$MrVW9R29O,q-d'<^0P2oR(%Sd2uS<m(9b`QnQ%S;26)-Dg.]O4t_lirIFZ@q]a-a+2<&.'qGa2#?*
%&fD$dW"Mnf=Vn/Y1jGe%9=cH-h^%cfF_Nj.ChdL=1_OAPn6M%5ZBqAR;+1MO/EmS)h9'Jfp50%7LhLoaAn=o>8JM,4?,a'8j3&6p
%!Xf0:=^e[P;IHFkQIN(3,l)$b]*m=oOfusc(6Xh;1,!?r(MJ@sU+[/^)M"]^fa4&,H1X?c4OK,m$<n#=Jo6RdnM.dDbu3S;L[Z_A
%39B]GoE1J5#-VOQ%T_)l,Ssjf"!'aK&hbgZLG4XdS;;frCF&p.[0/)\XNs5^S_1;G1!*P8YaHc)T8<p4kT%MFMOB415%'_DjCO15
%LU(cc32%;>.s-"SgdbK<9d!Xo2=Ers1!0Zd30U4c/L:O":<EE9SR,ED"It-KF[haNB5I8+eBPimP$5FH4;q]Z\HbVB9!l`G(Sj*t
%>%>#SfMk.9#YYY0SIQAA^rR?:.5&u"!0:[0`ig4BV.]pF\>pX:2(QHQ(=k%lK>8V[mNg,R&IaQlZ)&n-8:WjF=<100W+O+``["RO
%6"Iac=b2,r23J$[d!=0?mK$!k(kU9DjsHRuXU9tE8i4$rRKeeBl#;rgBZ&%8NhqB$\M-Hj>r56#@:#n0/)@f9ktAKY8\.eD,7L'^
%</fq+p/88@;5SiB_95;.?BP<oQ8f?$Q3]">nleFHZTU.Ao\'I3a;YP>P%qr7kXMlVC^"rEQ`Rn_J3tFi(Y!Nu!e'.*90j)BV9fc#
%Ga6G72)*$O<bYIJQ]T8ipEY//ldpI9l^?C1aiZb&WKKbbq^cPGa96^i2GnJG@^uejS]"?9NE_(>?kof\kY<]P+fSSnj%,l*Cll1'
%bhF-VpH03$8HQM?eFPScOqZsKdJ)TRrfT)p%h;8FMf2I(@.59?]gsW2Oc9eNY/2:aV@s0rKZRp<':PFiPf;/#"!q\a83c".lZS[I
%VF2+s19@01C7qp`TA$"Wqk\XEH^Zr3cBE3Njl&I)7DN+\2L2J^'=0&'j?)Kjd4hDKJU52[(ga36W^<-3/<A.\&36=;'*thR)m%m@
%R(B>Y%"Z6FP-%4/&4qFQ,g?Bq*^OgYF,(b?(Pubu9?o)1X,Ou<87aMd_P%X)qS"ip*W]cJ]n89s_U?es916<cH/#Y-W']LL$G$QT
%j&8t]M(6FY,a`(pV6Ps)`@3/E*tUo#@!ZAeL6hf*)>oNTQ,Aue"h5FNEfR0r,64Q-O'XMtdLeNL&Ej"o&)gV&'"s$]7CqD1KjHaN
%&l'8+.$*U?3G<$7I-X>-VAd?K=^f1s;i+p28Q>pcLL(pP%M'f``;t]ZTpM<&#!:-WWeU-GE,'F'F<2X]Y^"p-oFS[P'Se)&U#(^L
%cft&M&^]GE0<aicZOAa:WH=,'OlT=aMT<oHN!7.u&Th:_"aUn:SH(*)i2`')1dO2O)M`p@GI3"^KH>Q,``_-6K&*q#M<Q(aH&-,$
%<GXob8eS3gpc'c2Q97mX/k8o4<_'gDCE:lNTuO'Z?q^ldWoo_u5t]+th\4Y(-lJ8*89"2jW!!EjK\K*<=/4COTd)6ba)F0#I4DZ8
%)P8ZE>pKH0.:cm%U_YkI^OaA)]I<:QV+:#c=oE\U615h],'Q>%Rh_J=ohuU`_@p'X2@L.tAk_bbIT&R>d&]qoMZ>mS0q=,:H[Q>$
%d!JAC$Q-n1lT'5Tj:#GYK4\KOU<\(NQ@\8*`!o@#`&'$FBB4SY8SWek0)Ol2:m+MVWn,5ALMbOC)G#GE'bdZ:V^*(TgkF?B)^mYi
%1aBPpWE2^q\eDP->'#!uK9-i=KX2)G64O7F$sat/pp$A*=9Sjp^U;^t=cF]$^_D"pO#WlXPp@EW+]o!5)LNC3S-fhXjVjQ8"%H?5
%pJPNlnfKT_7`2uW']O3=I;Veir&m&j']N<EWk:gT5\:K2dJM4nSL.OV1$`O'aH7d?6*N9gaWT)8O:'UZE'/Y'((Dp?YsU,NE.el5
%@\?`C@)slL!0Jl,p@46Q():K$P3IuE][hmp:6J[*Y916,_"%[j0=iNI'\%I<mEtOW_<GGHa=H):N*r3fqct7N:*iSio7T!k9/+']
%V)U9YC*kI/=sBoE*2,*\/F*9>Q3,)L$%hB9\8Pcq,;e`=Z];QcB#-K:M$VSS,e)(pU;UBk-2&=HTN8:iJc3r4O@*iP4025[ZV.E*
%J;d<k97d?*cmo5`VUpZW)GSX-&+n?&X"&?:f-Ij?\nIr@7].D_^71>hBA#YhX/6>AIUf3.2'R4n*I(qV;?K2tKIY)^oWl8KIViWo
%]+id1)%5M'kZ0EnU`(Ki\S=R/!ZONAJ:omk!rAYL(nAZqo"Z3b0.8:=N8^R>d&S$a+uanQM3Sd)cZf:*Q<*W^Fn?Q.n+.RQ3Hk>P
%[4rX3&j`X_1lSo?8d)!3!gfoW5+ofYR:XKt_mJ8rLC8ei@R2BW#[,-fpJ.f$6aB>)C_QC@UhRbb6;r:eg;-aWZNBD>08La=mjcE7
%YbE/WjG"_5;li0+#TumWqS!diFF=qF_ZX%%f*MZS)`a<m:a&a\?FX;u&Vla"X+FTN4,A`NSJp=:P@K:54JZ@oVX:5,X-HRVFn"bl
%C+k3PD7u8LI6fq,<[E2,I?:Pl!$)2:X,gV_1K14E!5Bka;d]`u1_"7V)G`&8R4\M*4F2_"oNHDQka\uFa_u3oFS2pT:,0md28_mo
%8n;:0-7nHB#@9?T^*lG:e*&bkaEnMC11fWakmP>-acugGnj#G9MII:4[8;%pV9m3C=t$S5LgmrG2,OI7fR!s:OrV6A#K]g1Y(61"
%crr:)XY0VJn`%1\>5S%955SQ0p?/L>:N#T,^\ms#p3(_&`RH9Y+3q'eoKW?RlK\"^q0[bS7AGA1a=KLWp$fSc++8593pL@]i29it
%r6KT%_QWuUs8#6\rOf@Hn\sM&s2Q[^[g0\FVG4;N6]e\'G'L0@DM>O>5aZG5$Be.b8.Mq'CghX>qB7nBE<QH<_0sl5#OMQZ"+i?O
%J9sSu":(rr!?2a29!pPm$LP3M,ku<DW:g/Gl(a<Viep;\,Wh$sZ.EEop^>#s`'CK\r#SatRgFV!$H,pGqN6>"+S^_Q(1,ldm<7M@
%T_rlC-/frbH.\p#\'%TV!(Jkl%9GP3#K-+dO;Ll+*8`oTrZD]VI2rmlg1Yn*Ka*A7fDp,+!4WfGK8hfUS(t0$K`A!r2Q"cPS@j:f
%jE(k$p%OQFK3XtiMtaN`(L_H)^Y>o?lfPF89jmGC&m+k^s4-KFV;bZOXH+o*><(9Bdk@X_s+3X0C2pN,cU7>uT9kU&qCb#mn*A3E
%e0e1fq(l_iG_ETuj#=T*1d(QiNf^s_E0MuQ,8-A:+X%D2R1/X-;Le2L*MLU@LI'(oNe_,81`bZB<8&Jps5B[hcGBOplT+/J']=3c
%=2XhC)cu:Pcc$"bJ!c3WN7Y7-5u0Dom,0b5Q_\8Adb"BO\G34o-A,9\NX.oF_-VC?W=O%9l[<[+am1T](KYmXP&s+d%!$J?.i\4G
%908'A?$AW0g-rCAK<g&'pBg7_01U_G[@XqJ.UDn]GbG'IF=6_TfX31#V=rsq]pI55j4Mu\4BhN_VYUdTm%cfhn8:X<5H19`Z*3nJ
%[)U^)XtI;Wm(V?M%>.oRb'Uc7\niu<oXA\mhTnR]Tq;k"EN<B;JfdPD'b#!P4HXRM,P;<!ZT`o4V%_-!UerN?"??rN(85-,1d(P^
%o`9?i0M#?uOXmSuVLr-Eb&=p+,#Fn[H%#AYc2#oWq:-!G7ngt8@f4EEO1p!qJ$Xn/q"4Ucoe5JEXfFr6IA6aJr($YWh%qGG?9_fV
%^HXqI]03pC3kb@^/V!V=n]+uh0<X"NO4jSPcG.-+?,$;_nYat-Z^[H5eM_%ncS(mI/?c:3>C?"NX5!VDpn-;J?S1f/J,JYOcT\sc
%p%%aCrHRkSe(43B&(@C?SR1)kg[jS=["2EoS$Xn8UH`U/1=hgW]R:\_T0L)=3FaDkDGub0rr+"_ZeHkZG?<,F0V;VMo(JKb^hrf>
%X7P)t1ZgW1]r>/[=g3Zn5#17,m@M1u1T'[-[ND$+bOZf^hThLF2#Ph80lJ",FDq0n=*L!<S_]n:[%)3a`l=KOiN):B\*(55&+R>A
%C9Onu\*"R6ju-qeYnQob`4&P/qpX0?^YCC?pMP8!2Wm3*[,9BoDXVJWJ,A;EQETa0k+#.[\B4!j?*mD=I/B`'WOGVo49&AOD;R28
%\)4jADr3IV@Dm*`p)@/#Vq6,OB?S'HSA';pIPsP-]UC&P?>XSL4ZL5c'%a=Q2lF.:2`%>ZRr1/(359e'nsV1ig\?%S^:nu;rVHG8
%hJr?VUHf.\m0!.EoAtnLV`UZrKnCk!I8K&)rDM96Prkpb>K.=hYel#B[p?#h$q')APM6:9m`!Fb3sld2?D"trk]5FroFAIf6'j[s
%EkAKt4^%ck]Qj;Do_J1+qr+%QH_f%0\NS;_k"T=>opo7?lCdSS9#:,FQTq%5_K][,"_7-uXYP_iB\qGFJ`cif]8(:(Io-g1U_N=M
%e%=58cVLa94?U7CQCI%hbLZ-b)*HjQS=Ad=#-XmaF-q#'4l>2BFT(4<lfILQ:;[R6ori=P4*et%i.?_t^9d-`l^RqLq;oM?bN.7P
%ojWs[K%k/:c*I!nCdp8%larW&Ve=2NB;b@PA^Ys)o6U@MH1oeE6g&%tNIWfA;jd45`TbY;p!rB_e#PL8>(:'mo/#tcpuc!j?!f2@
%BnH;G*E>(f%b^j=gV;-#B7,qnDGV(.ZY$K0$GE">)"Uc(:!+;[?_:]]T$5[<s7G9)nW]+"$-Nc>.J1iuGd^p8fK3`]rlG<3BWTl_
%0?:M@J/QtUNt2P<j%;S3c#0W]EGV6'SDV&n>i*bobYI]8)-Xk;F,p3[DKBldF'p%E;bcBc[X0%mS2pAhc/I[[p?U3!#IUR;]HH)t
%)Z/>rNk;4m^Per_>qVsJ0'F+pRidsc-$N8@REm_`F$2_N-k9*<mk;iHq"jjHaj"l%cP\p&m18`lHPGK2qafF#MDJ:LgWc=r6@]Pc
%9KOLsbqU2T4#bruQmMWS"t[X9l1=MY3P8-+DJD)UcS&&V\G^Wol7uk=m96%%(Y:UL?=$uDs"K(PDkS()-d$qng":k$*LPH%*0gWt
%qY./65%L5.b-TfBmWGlIdBI\8e#j_\*KG`B&Ri4kM=KKL\E(,k@EmcBgWm(t*26i\52/qjJiQ>7BABQnJ:]AdI(k(Yk2=%Rs36ap
%Yn4,%Alrk-[:7FQg)80n99ORufT;(dj-pphV;mo?='*S'Vot"[ffWKXqBMJuhe+aX:@CB]og^ofgO+JLqUNRLg%'0/Fo0/BX51F/
%p&PkIf"JW]=,pG)Ihli"[$-!RIBrXo3JrGGgt9cofR>o'4'eGdmUh,>m#jbb%*?:l]P1hZcJN4NFLIdUbt08<7J)aGQd<,3m5[8p
%6Q'jPmBi::m[VZ+"Ef7W=FR4)VNuAEJJol30E2YtnCG^`[,9@YDjDfecC!M\kNB>;5L#Xc2Vlla:+q&[rH6+TCkqEOoOd6jUm@L=
%dae$@S5hU3]=Y_&K+iX<:.+&9:$^g:C3_ib3T08rip;Th3AKAXdnNOdcIdHhk<M=1X,Th`L*1h+7uY.<C;K/Rc1U1gTO_lIWHl.D
%)%$?&r8M0lK_<<=22fqao?19al;&L:"FC-mG'8[0fa]%\W9ceqb+.:0Ld]oGKVb4I760+X:m>+!GM?9OSqj',ET+eqB4tpok(d''
%/\QVYp)t2_00&V5flBSl;<I5ES`*h[7%$CnarqP^hf@K<6S-C55/a2>\i7+sb'?V[b'q@)bh7G,F#tCO;7;S$*F_n6'hYqZ(1l(Y
%ZgE-ec48Sd'CPbidd1F:bq-$f%NBJQCUr3XH*^rd%kFo3fGhH/&0H!.RiK8Yi>6s'=<u5LZOq<rn#q-A-_Fnd4<Wd&hBMZR-o2+B
%p+C_E*Ve@&n[06-HJiQD^:'qemE[_NEY-jrO0.f5\@.&bHJiNCY4ca<m3&Lt*EUuC@I:k\%UACl\D$-YHM3q?7Wsp)c1hGAW_7N5
%*.WfSo^9aJ+-+a-:N/9_LL[];N4qLUAU3h=`TaSPp)tCHpJK`qRRN_Y\k$?0AleQ`cuqqThtbgojbr`2LMKmbJr!_b:N&IiKjlaC
%h:-c>&MD>_p>c7=k2*'X5\]*TPkGfUk4L6TV0VsVFpaJRc=)8cJ4a;fp/>T>2R`WCMtZ%(gV;MCrNuN3Yt)nA2p9D1#<CPq,JIu`
%B_;89'%Yeih#A<Mg^RH]pSFVF]Zp.s%ccI+A_Hq9p##i-K<&Q>q%;5FYHD4kXnAa,).i2Z-@tWV4dPQ"Btd/.E%L=_P?_LMe`b&/
%m""+g5bm-p0jDuO:2eEr?X>@'k8]\VibUF;aZn'2ofm=*?=M3*H,tIqR7#WpFa,=YCbc71*G>?RiV`(pkl89,,^7WJnW%thOQgu1
%o\0`Qmlk,`*rNbXs6gB&o>1I=WMpm8^BaeBMV\U<mg#62?5=j?(]Q/Fgu&3Vk0oa-pqc.*0r='koA-oAJ+3:%JdqV8oA*"[nGN4'
%Mn;!boNTWGp;D=Vlgj&pqWG=`jPp)mQaa*5d2?>HcC!,H!umHQAk6XC.?C[9Rf%XmLE3HZZ,O$of(F,3T`(\Z`amL8=7"bfMl+tK
%S^t1DVWKb*qu'jDgE%nV]3leO`VU0XZ?rKm0U!O$AA;n9fq&oH,rteM+)[CfX&#5O^\kIp?0=FWJ,7Xiou6Lqe!oIj:Tn\3Y9%ch
%+7*VFqq8^i;)?*H]=_glAt#9F[N"6:A]C68s*9'=GPb3B`<d?IQ5_a2I"%)ji<dS")i[SfS.pts(>s@Vg[BumV-OZ0Ch;:$Q2UBV
%j]RcTDtY[t@SS@_RJAq3`RZ-alM\f!rUV\GRR6O>'C:c"$nhk'bJE[g0YFL5l<nis(g[],QhPJuJXM3#05Q>.qochFE\P-G$nqX<
%A?cA:(^C/kLG^2;AVFcp/P,?+_f*43C%(O<p=$s#aJ7QX:,"'cI+uIap9!o&hP*`g6#&BP9l.ii[N05Eir&N9e+3f]e@Trkc4:(C
%>`N$0::C+AS:=9DpYs27p;=SR(&-]OTJ4K5h^8Q(G;ND!mOlOcoXDTQ5!>Pl*RL-2[7rm_gU!e2:S2"oHml]">G.=+OYb7tfK,h7
%Dd4/>UpG!9b.K+,aYW3f5(AB6:'*k5g$UlE-lS#'2KiNBGk$**$`Drqq0XOTg9ia:(!c@DVuus`e_O#4@,"`E"1m!*B2K-Wg2:V<
%qZ)XlKDEF>Vt'BSo3'IFh!TB]DJj!N7lJXpZ8p@m#)1$APF*RIDGXNDIa6nt\XXI(W"!t#NfafpN#g8%%sEo6'S,qrN`#McN\P/V
%#<TrfchtV>ENiqhgWCN&(^E.B%bWRS:M0j?D7p\Ei+JXVXj.3?]=PWPlKn6:Vcc$kA)g:cr7O7NiQg;$:st)k$(g"FhjuuA-Ce0=
%T\[*?(UJ;<V"LT3B-,BLZhaUmp$sapbQ#7[?Cf><&6@M'o+B]Ed*3@cVi<!.I!L-(-aA5oHg@K7qd!b0HOM_fkJ/+RH1%6W!M&=?
%gjfWKT'IBtkLgMb*qOVG0r3Ri3Hs9OQ:k:4DQYYUBPQ19F1hAD$lei4$pWY+h0a]rd4Y7N1^_OV;7BiEgH3cG"$FY[40eZp..%H,
%fgGS&]4>icjq.0m@mOIC(2V/]^?/*tgB50%*Lu"[^t4N1M4O5cm(!kcm&q<([b]>XAB;K5S'LVVc.E8,mU+UX#Arnd4e[KdGL5K$
%K/P[K3]q(s#Arn%boO1%IFmUnV!fD4\a@i-Ah;V$RG.pWDY$^s#BfI-c5kEF9qR`(3qi[)\c97TIf@70l'sQ6rOQ5rk]/b^b8o8!
%d,sIb@b^Rd=bl27U<h*..,T3.3((a>@8r*^.3`iKQ.S\4kP@nEo"2gFp&lMu!;(O:aOi(pN6N3`/t,[.7G%S"qhrq0+$X$Bl2&rp
%g%k$=s"V^lq>0g:M`I([DRZUY34$'kf!FS.o@UH\oG?/)4*c]i,>R@jmq[8e]a1id`nGpo?+MhUgK0%"[dgj&"Uql2\*]#qoCL..
%0EW+rbP^Qu/:F&;l3!NEh[H"jhNQ"3='._:NZ,;$`"p[Z\FJ%Sdog_aV"LTs2'^'.p"dlNe$J/kBhb(8C0n67hhRB(\*Z(E1[qN4
%([]gJ47U[@;eq>>D]]OnXIjJ@:]G]hGrNpOW@^%[5(.m?/GitL8*NekEZiF3:ACF98SRT8"7:aM['05g3u*2")>/-,9ICL'#Ea0-
%Oc@V(`hb>`rUV\GY-4/[1r9145q(G:U$*U4*FtnR%-/k0iLLaAhQ[djQHMaEBDUI\U#?Q2]nMtaL*ZNR6Z'i.J4?$a=Sid(G'\4Y
%qsnbf$UfKBpt?.Un]*Z1r^XHRF*K*hA28qEh/dfHO_ccX^I`_Lp?U3!#M#t_]HHB!*Y4Utesqq@^DuF/PJb)D0qJ8^05ebB3+j6A
%pYrr99(-Gqptabc]4aJo'H>h.U$'<!%(ihe+*82Y\KggR`7oakhqi->U4(%JI4Naj/dcD"@%o77jR9D/[[u[8L#N'epFiAUIAZec
%3S[FLDJI1@D,7oq6ho+_nqtW>f%g`CQX/S`QlGe=RjPT"Cgt0,1%n&ug[?ujS]AhHE41bN?odTV`l-757:PRK-GDNk9Pj=2Ig7-6
%lOWsN7Fm%7*DXnhqh51N>?Jc2cr%(d20DY3g78qUhsE+74gQ**1F"u%f<3Vo(T@)m@YMMhh2CC>?d<RRO>1AaS\f8!_p`^SqYeD(
%s3<LT9j2IM[;ccTA`ER0h::1;439r5kCm%Y[b:(bZbPqj2R<X#[S+7!a[UnM:rS!Mi,<O/Y?nu2;b:C*p\_Wp2-V`0mA9K.HlsM+
%mbEd1Y_23#hm"^Lo(LbU`BhE;XXETL@ejG!/3hJehQ[@7+$TRk2:)8Loj!Cu+Y<c[fpC;l?aj>QSEG^m:R458?]BP\o[0#/U`]Np
%dpFcC^V0^Bj5'+ip!q*Dbi5s!+.:)l5<o#.ma4Q)h]9r2F.dmas!.%hhu*nsrj2Rh+-$!c+tUH1r:g5Y`Uig$GMg3ng8g6S9($]$
%2(ip/DK/5n:VTZ_=138Ljm6JiM#b;pV0VE$eXrNdNi=K*nj+>8?hSKBoHa1kc!t8M6Jg`34\T@!^J7f6fh&&`AXV%sa"%&Br\JM3
%po=kjV#Sk?%mAmIVI-,^rrPC8kPS6ColBih*rB=Q5%r\8IE$8#4)2ONC"`%*l7ZckVjJK!K0P67nd8b#miYui%Fa<D[<3,\@a\WM
%+#m"b'(+BXmNe>tUtHUL55G2i89[N>qoST:,QIQ5.l\Ws(I-]F5!Nt+n=naPYVD1gCf3=tG<Pa&^@4u=s%t6R>0Ta5s1:r#;dB,s
%cAO&_%mK[IJZ%3sJZ!HQT0-h#kO4HqWXJF.`8T(EIZ;PJ51fR&5O<g5<Yo1]Okf$=\B0k9?2T%-LhrdFoaNe7Cob=j]m6lgi4^l>
%\@p.3Uh'9sL0qj\=PZ+"(Hm+iO8-3OOnR[sGY&9c-[We8r$_m,,PO=njFO5_ga@HED37%FCY.t@<1s$(ZcEqUj4+(oG!.KsY.eWJ
%qXs4b3cVm!46@("_P2IMp'h,LjHFMJV\^%>#(N.b:nM'a'>Rb_$3#6lrqudIJ)sGZK28YR0<fa"qYZ]A`Ri;&(X'-h\f^p!"\S]R
%g>&fk%PXo#DMN5bThB6UrVZ?Vr&ICgIs;1Lg+t]:J,FQ]h1(E.*8aHa>ujZNqYhC*\ZK+<GC39(Z-+r,WjX`14J!P5rgSq*Z1n7K
%mEY)@rp:aC3+]Di$U<Nm^JJJ@o5?bmo"1NFhC"kF53Cm\%tL3j!*l2qR]CP/8"^Gps.&&U_a.CSqT0\J?9Jcs!FqL^>?MiQZ8/Jq
%='">>hlC+(rB'=;9NFX8k^@6W]%X_7Npk^CfpJ&^pAWr]ATp<4gHB`1Wp!?VHP'S;TR4qblo"Xq72YER,ac:MDqJcFY%&8n1DK(m
%\<'ek35(L,T7$4fPH3=+hZmcBY.SM^pPiIs)FMGm,\*;4B^cXW^e('qpUaB%6C#8Mn?OR&r2),LH,V8jID,Rc%cfclrUr8Cmu?Wt
%?(ToC]j0[pG4F69B)?b[INh+4XcGj(.&4k#e)OWciIDs0+.$4tlET;f9f4SCEJNFaF@+/\CF=4dYBjjZS)8G@7BiYi[&o,C<pur+
%bK9YB2a00ZCM8KUn"!29a$Pn63BVT__#9?Zf#.jk399/aB@Ea3jur;&V2oK7EKP&CO)k<phTg1@Z^Ue\hu9SAod2hVri'92D2<-t
%oaoupr?l3B`@##!hgVmo]=rRIL.IeLhN6;`_sqAhq^YJ4gDAI#QP+%/>I!SGkL\TET7-FBqQ(.k.?n7eejhLOZ1)>=HbTJ:h:o[+
%)@M5EOC\Bdi'R<cgqqVn^3Bc"UOC$nGQSgb=[rU@NpU%p3f*#pl1H>9dDk77k^;?T^26#ql!_I2F)p5Z185`?#S.+`(E:eSLb>FO
%mG_VSEYbCQKnqqi`*42E%TVIWD`Y-[[`1`[<p+/+m0sg'GF.%WDp7uYY._i+JW7*:!V=^n0Z4lcmVS\Ne+A(+D$02h\5h:eg1b2?
%fd<?CRX1j@Or]a&1nKN#.3*_:f(_3acPM$:<]N?k#+(.;]Z#f7&ZmG2YXo))#`Tobm<e>R#&4KS_e9B%G?Jr1>,745n#rI]H1+-Y
%CRh/Jqo$ZnJpsiM^4MW`i,BFbVQhGsl)%V@@E7tAL+=?!NpphlQaVqo?k9VMgt()[DgU6i14/-tnq4sHCgi?<F1ZTCm"-fdVOd`"
%J-30D\"Ec1?!WErE,Q]J71h0A:lW@34dj=dg6`kc"hM?\A)P)BNuPjBEg3#e*^Uq3]NalI1g6kJBT\6H\UF(XlZ?br'!6!I(85Z*
%VH)q'LpFB:n1Lr!,Yt5`^2@/M-J/.^C3^8kEoV=g0X2HJgT>]RZCZ&V`7r_/m!0,K]0e,1YR`MSm>W0F8\>R]HTMmHokU$!M;!"Z
%+fmQHc:\\q4!p8XGmrB7=Xa/]Jla9g;aZa-:P<$_?&rq]n3d8]/O'oDVkXbc!09KV%c2@%i@QWP>GigFGQ-PPl/HPSPOm!_%"*TU
%`Lh%4f(!,"*'3n:RHu/CDhnLdH!.Q134B'$@_4H;&YgdaVErd9+u.#4r4nQO2rpBYfZGbQ*?"j*L6u&;[=(l.kYb"#ESJa8b&%a?
%"PZZbIHu&!1W[;C@'j8%^26\I[XlP/[;fnZ0&/E44m&FY=!BO3,kXmg3&t2ZCU-r8:Kq(Z)[ps6EPTqgJE$_HI?DEW+qZtSC/NPs
%gMD6eiQX9&Q-5E1QUhTeG^d$@/'!oZ?01,D(S:hW0_t[<GU<\&HG/3+6\[Ldf"_$Iq-0&?S"0@HD""37g_JEpV=paEC+G9*fMVo7
%.HJH9DX8p2PdtXY=-;,F>ddt?F6.Bj%XW/U6SQ#(.DQKlQ$1XoLq.Yo$7\9IPh\Wkh;M:BMZML?DVNt[CMd=9M1$.+A?@_@0UPlZ
%kJt<-&a$0OBXOC^aB*Fs(UEB:&0F^cnIZTg?%["k(_i0#UrKd"C;p>n)dA1g-;cR(`g/f@E<Tu[%3=r[f3M_j\6YAdN.5d4,DWF'
%1;dTWo^CO(Y%[BCOpS2]E.2KQdF7d1,D=7iYX?:WP.5MVaIkn8G?1emXCAQL:o1/hdR3?H<HN2e/K]Sg0h(QmpghS*53B]uA*ZD*
%G%piQ#efW`^c$iaB`7O4"2&Q`e4cYZ1.Z02:)c,4.$nIY@-rm#L37I<.kRALg-K6;`'sfaGRgq#7Wcq=&\21sWH&5<%SO1Y&HjHK
%Tl'33nH3F[nSQ$1>b+t_W6BXLP!qqP*'_HaG?h&HZ)(XA98n0*)dMB5e^l_#nbr@IAA6CpY-ArK0Tb3UC]fdQ)LHB!GYN"t0`Ajt
%)ulT*HVX]@BVTL$&B)$G5ogRKLfe4Q=)A/fP<l=IEGJX?0f?P'F:3H+-/k4LV8EqNJ7q7sYAkFM7-*[)/LP(2NNHaDCOF+/n!$A8
%C&=Xic.>,tldq/-JJ/pBaoL>WG\Tk-;&^CE3`(=\-/!P<+uLYT2">oVAV.U?"TB/AkG_%c-GsBK.'n,Oe[85qe^O:qj%Wo!CP-?Q
%IbUbAjLDX=pHI<<i6VW%p1ugf`A`nZb[8-T[85r!2V%L)F%CD,j1RS$d:'U`aXk^[I-'e]q;V(jdoX`3,mFX6lF1!&n>tNRn)H!E
%,6ur(aF*KHZjY02?gU`$/i$D%B45TC.O&`>?'oXW%#:((XRnBa(!K;1b1@g,M86\g3s3Uq"lt4pX"qk"=9,Th-bc_:P$$`)2($N&
%#")Q^gY5bGd>`$WZ\6=C;tZkq[bcN?qME=A6"Gc&B^<++r#uMJPghM:IIW"1QVt.pq^+'176;bQ#s^[A)]J5X\;lN.2[,F]gVma;
%(Yq)t1.8TQ218\TBY,tYl&L-id+ug1G%6NNZ0?VrQUj4PPBgAB\'in?^Hl>1625dtTeO69RupEcm?YqLq7A1)gei1j2AILY"lm6+
%[$6ONl17Ue.$<bSKQ&'rP'Oo]-Y=\`;;(PH+):#+S?!?O!-`U`f,5</)U["+SO':cgoW#+^-WLUg(,s;2q<SgasQGr^msU]5dZ62
%a-"N;@\$:C(pk0ILaj]u"[`;/9ha!)HL4hJ_/Ggj`6`a3PL"g#VRDG#8?ccEkH/aVVN/#T2h':&4E,'UJPm%EQF!5\`QUj&'i]pV
%JE#="OMs8j%,4X6dni:]\E?^cgtI.m!qq%h6Y-c))diJQk%hfVD(>rE!T`hFR3ru?"k%3B048#+9/THjEgKk?rE(Ph_pLYZB"nfm
%/l5RbigFbsN96k.D*%q+PRf%>7+K!U3JnI<MDGj9@`Xh[9_QD8i#l./;SmuV,\a`Y)+*9[K?SrA[ZeCa>`f07$sXI,');L],7j4C
%m:"TiH:q^\'cVFp6]>7^XeT_)8_=[J9+][dc=5-IfJmpU?$t?nd4`&=(#F8L>R<*53*u!FK,+WV%"Fl]YAp5Dk2;,4/.@n-fXB/j
%fsYZ!R@&.b,dS0T`]u:QP8Ka'd(Z%Q;;OP,CdgY>[M.4+ZGou1JGmL>5+2B'"H">YE=i>n0Kiff%pJ/N($,KGP/Z)%/W0!BN4)kL
%_ko*uDc^/^[.h&NU<pQp`omPZ$+6f89uSii/YiX!]"g4WAtXL$"UM94,N*!2ZsRV!L(YFQ^id"lc)fi?"Tc9kpF(o_^bCjCPaKOI
%q]"GhAEI)n9ILmmf,0QSQUH>('KP&6CYK[A9qI1L&#QeDp2/?>NHWM#[H7S&CVO0SEr4P7o(4)\/K28W.-BGu[nR#blIuEA(7MWR
%I]bZfq"T'*4VWDRhF@tQQ$`JBE825>^olUJR7aBI$l$47RDMb%;tR'@\8`RfOWT*nU7L&26#UGW)4QE\g=du'"/UV26sem@Vs%'_
%hok_8,kfoYkT@TY;`dF.rm,cTd17*m!.4?V=0M%0=#[+(hja7h-j8C>Y-.+dU.f_XQrU&rF.FLNh6T3?mW)lM:D.6E-fG,sm`BU/
%4S=0sUa<?LPM,.AmETeM]+]Zeb^Q8#I=6+erqEJ^s3]uW[P.n=/=tYP]mdNeiq2O.LZQe?X./:qRucJ#`s)G7q"3S*r!1AuihkVA
%=am[GMc[BK(Z0bBjHK8F:"3j)9V5u2d@21[l^mrd:OMial,?jKq"FRPm,crnWK5Xajmfbc^Ue0<o5aEgn]TCNZg6(u`R3ZubP'!<
%NO4I`Ud!LIhXfgWo8B5El]2jCGnJcI9pacs0'E,g!r#D/Q?doD+!V]h-OZ%YdjGP!%kt1_()X8b<E:s25PYOB%F0(JPVhu$_>d=2
%207sV)rFH3#^/2@h7*DLW(<*Y,Q*%?qZhNC0QhX93-"Nj-[u)@IJr_H#30P?IN47B:j]=mh^#Y2?!!ZrT<%:MYOE?5;h+_ko:M>p
%rqc9I`@#$$"$nATm2l.=WD,SPJ)%_MH[7]<07%""oCR5,B8jYg9%o;9kFAk5_8aKF$.VuIidUU5IS8AtkF.ep\'O\,o.MZ%V59H@
%2Hc5#f(Z?B.2&^c,GM(MbZ-8R=D#k6kDpX+Mkua^*m56Z[F3,PmH.('qhH0jUV>><PNUfY;uG!=2m4Tt1If+P>7g#4]ABAO-@IU#
%o$;eRAqnn%hccf"EG[9_^L(f$5<W)VfdQT0h62k2rPLV^%s\$Gr-]+7Uf5D8;/,B^c0m>ri;m!Q%"lJf>5@gj]Af9IUc9(g=qMR=
%0le%D<a\ec:*FRq'D^#,pB,I'pW2_(oJ]VD5DL70kpkcuE.]_SfT,B#nAmJ!5?[b^J1;e_jQK%+%fljqMYj[XO/(f`*+eE#7esfN
%Uj6;*59W<[V\guTm4mgmr-q[<4TM7l1q,g//$g`E0D=\eRpgG_<-rK4#O9P*S.)u-D*nenG66NbaL%_ZY.,K@fE"%D:egFAe\>;Z
%D7&onb]ZNCrk4\]1U*/lbs%quIoc:?`Hm5cE.*iHLVErebggYHEYDq6SGrcZNILEDJ*`Lc_plo`'5lKmYCDV<,'+bBJAKCM^lt@L
%?6>=NVp@anol)Jr3NSJBqcJF<ksfG@J@e*S,P@sA<9j/=^\U_3:\n1@./DJe]%4#`)Z?)<TZ(2Cg\*(`(&]BO+3=Fa*6\qT<!:hf
%!=(q[#"\%*cetgE31kjFplP,4=8%1_R_;)I8Y]MV5@=jF?&oR3TUnT@_m*KbH*RR1.'sgjMTZPmUfHnM$If=QU<?(NXt:<U1<Z7R
%JoZD`9jH!9PbnpoSNMXgFLJLEV+i(*&[(4,e8*6fU:"5\Zki/sZ<j=+q&4g8B9]"BLMLu`)I$DUXS6N+QL.4,Z://h[D5YTZ`fEZ
%C[iPQCB6&Wrh[T8TuC9q.u+kCniWc#;P%Z6I1]S)!2(@!;!Rc+nc9O,bq/b.JF/#sq5+JWbJDFH]p@(UBuC;R%ZRSFfO)f&^0F-p
%gL&-D?-Dg3@WY3cc+:nc83lri/Xpa@NeHB!I)cm]Vht_-9-5p*OHUj%#Xan"oQe<[E5hlsM8<@.]u]/9!\GdijDdFN//C!pUG6Bs
%o,79Nj"3p-^R"Er0Yp_4$0BB9!l\WuL2EZ[L/U,sVj/5':T8;)L<]l)`..n=O9'F:9*f+._htVVdj`>cXQ!AJ+((%9><BKl"l/qQ
%i4S-O(u16-"dXnb%VaT\YNBB%&s5@?Y&+]O-%&MXkrc,/j!i^i[GE$!-9d#-+Ie%I+Z``LTse_?:kuQ=/2`XDBR"(UeHgfKdF*KR
%TVn1ocoI+'i(aR-@F3cgTHD$!Wheg/pMj58U-(1>QL+`)V$>XKqRC/B9)+u$+F/4Sa16"t\H/ak!9>0I2?Z_#RNA*N$fSD!BVX[I
%W@F<E*7Xs&.j6qs+$Ytq=0EW:":G>H#fTRAjS?Z%63OZgOYVO:iWZuGHA&_>XV/d0"^+:o(-spQX7'2_',]QhKo+-,*X\1%Y6iYo
%0Gu?GirB!e/hq+V74?Rb_InV-Kle/<17,k6Y=kp#I3q7`p=_:I)7W%GOAlJ&V<Dp8S?J=;8A;0U[?AsqD&@gBgqHC#64=(9=u/G4
%1i"nn$\\K(1hb-l\lO'PTPk]Q-AH"@1nA.@AmU6&a[C9Fe6,NLH,-L^6I$/D52jDpFp6+8M?RMrO(>PLa/]MG4U;lJ4KSqr55)mF
%'&R@=%u`=fNXq%]],ln"5jUUoHQ[;`9:Jo<Og`^8=BYt'NEW:Vh%?E:h@VMXTXu*nm(8k8#:&EKin2'@*PotfHR,K4rLk8hP]F,<
%2sVqYbYg"sX@]oj%G9[`9RLHZkWkgbp5nVnoF6<NR$cno_fUM?+C+\nV.cN<ak6reFbkG!8s7%'N*o<4b[t9[j(S[M1XJ/b)^?Kq
%2VTbD%#]YsKupst=h.,dHLsok:,$4jgsAk:"#OK!fQ7S%9O_,?HAJ(0F9KLOb!8nS[lrg^\,c6G0Uhs#Gi3!gqu_u_2-#DX>U\38
%M%)Q`*IlE;:m/VDBP!//j"eCM`rQaF0g%]T8WW3-nNGhdnH_&H_f2GA)'1I3gS++>>$mbQ)8e)-ktpFrgj,o*o=9[#Z\L[;dGhX<
%#*2M#=_=d=01U&r:A;dd"uAabJG1!CHMR0QkPGqcj'QF<L7[S0JtCY^1e"Qu0Q)f$>7%B+_eT</A19BHKsRGs%dDRQW5>[uJLU,;
%QuFsIT!1R\mb=t2bc!u4jH-45eSJEK>`am*dFDK"N1(oHV3GoB\umn;AOp5AqCb`^(pg.C&Eu1C(]@Q8QT"3Wd6m%o3*LM3+TqL9
%"G'sIPSd:)?JC4HpXt<uq1B1u0_gaQnb95P_j?&RJh+8$cX8'>d^MB\fjgAh\&d,\XJht+m2<e6re"?SZ="n<O@*4)%ue(IjigjF
%_O!S&39_XX8sJi^o`'nq$2>>5EhM")YHhuH[0UF!A9^.#@s<[d%tT*-+^Ec1?-M7BrAtuV\r-.hmD70m.8e]/kCEnI"if8Q&_!_=
%SF=0NSIT@+p5d>N8Obl],Gku#(N"h9#iGLiiS%2!ATi"QOO50NRBFKZK$BaDDG&1=MF[fGlMk544I4#_#j_]m3s^7+7%*D-,,^dZ
%#\Z"-`.``Ts3Ps[/.T>.lcpUs,c?:=QcEa8^mu!1TrT9&LfGCcdJro-9_O`6&>&kY/+.$S=djdlk3qEk[qhQ&8BPZq)?2EAUhB_:
%]^ZD'rBDN$.YCfq%DQ7^Ud\\\$A/"0?*i<FTUCGqR\ekVV:!O&]1%/0h$e[O".faPhE(GRf3c;1O3@(U/Um^ubPX<do$tqW#"AAa
%?aht>2`'"Jh#1)dG8>[U;^+rU(I,W&\IVDIo[!R';:T><IX[n7c)Wcr09u+3ckK6GqmSQC6`j34J:IP]:RXp=F&_DlnnEPmd,F6h
%SP8Q\8'8=0UR]!o*@bgfB_dp(r.`Z"^GEaa<sf=br*Cs_m_9"Ej.%D&6CP+X#3t[W.#T^"MPt.'L6<PUSl>Y:jQ>[hT:u.SL?F&Q
%.!M]kqD[@$rsLZ/#Ha-gCM7WjQ>$O$k/dS&Q+Ki,U:H]fDkX^k51bk1PH&j,2`X[NrroBNr7+aNi6Qn:,Q6am:R0Yoe$#!cJ*Oef
%g%o"!?_6VX8V-EtG,<pKCY'VWI`FPQoC8N()[CsPUOK=o#0hGn*ZbG%[XSZE?7Xi@R9Zfm#%3&_1,.a"P99T8cOJ.MaRBC>rH>!/
%C*B4Jf8=A\)iq\l@jSG<D"V!#F`F9bWKb64VaKD;iO<Uqk!QD&=D@HnSa\Qqh`lMDC^iTjqW/k7_!oqtjM'N$pKHpr]GK*nWu7MV
%(#d$3@QBC]>q:<_6+Kug%Ns+o([JJ*j?a!7Re?@SO6MWp]%:dg%Z?lqV-WuaZg2(D,XcgOenN]nh+H`/SSU]gGBtXM&Oa5*SYB/I
%=JPM$jKVu@7ll96OV7DD-5YFmLM!esNY#17G/TEJqe:a-#_GUJfW);mU"<V!nC+7&--()Vf?60AbLp5tq^lIl6eq4\^5q&foui&E
%-\$^AQU\=Rdd2*jDR7[*5=.(-Ys#D\I_4%-[/['mORe@kbI)6XTiS@>6R-CTAE(Ll6YX[Y)h/P`7g!MO>jYM5[GG][YX3`b1C\MU
%l2=9i$[#^OBb3!:L2LNM[po5_ah_t?.\3J$?S^/ep)3#l_'=<?DMsVK_a>M/hGJ'1<2m&;]*.nPZW+".^^a08gii@''=KCXNSMV1
%iU;g>Ug`R#Ha]9JP/BKfpQFA]o]l)\AZ(eO<"=?R$$1nn[?&I>UK`Y<W#%Of9XKO$&dQs&NCp!>AH*bg[W?X\asIMYfkL0;PiA`-
%MY@FM<e];iE<GM:8i-Jhh16=_eU/8.$V%Mgf5%X[**LK)@Vs"@^sYNP#Yp@q=8o/J5N2%VcJ.<Dp!+)S>G5"Qs/<;/8Ett+aJ$do
%_b[Y-d1UrU3Cr)L:)"YDcQmE'R8U`LiYU(n/,qp3l&dCLq2-n`IJRLXqJ'?o;Ze,<4!ZqZ_&^$Si-"f(\j*o;pMV"pOAiUPctT7i
%2KGF[eqoJgfe]Qk)F=>J)M9.2<_EkUKgp,KX@TIe?hgCG($e#,gQDF5;.T,YBh&m_VIVucX<GsL#_>GK&@N78Q\OQ1N8Y"@I'_aL
%1alc.%O%T4@J4>1%C7`UV3U->WTN$\#k.c24=]TLE]cSUmH7]UG-^g6I$:XqAf-'=qnA]$':A7PoR9\@<t!8(Km/&q^Tief@_W&P
%gC0KsJFh`fSSm9!fkQf0laYo1-*0+sC&!#*84<6t@a/Yq;sE%o>bt'@</s*=)9K9XB+Fs-eGHQ]H-3i68bG4Vg-aeG7L%edOC<YB
%jk4"E4*!Y0n"fbojtOfhV?"eTV;3!9!T1bn+8C-?<Z/(DWt2<pEi7p'kK(-4='.FO7IUCA9LX,Z^R=`LHm#(D[E$:k>PmZ*YK>-T
%2>LkIW9=+s.aDC:Hq2b]oh)E;^3i.dkf%6l*Am8(jKn(1'F?.$It]:ed&bg`+(N+FC$frQo0F1?j;+=&)UV=Ck9Z%G7e8\VU_iAT
%9#&in_iOdeCKSNh>eIrJ`QR-MMAGLL=s-2q?YE2M[_>n.-9#/jhG5q"c(ATi^4X'e`#rn%O9YXX)=69dQEpg[=8@RnQog21:Xm5@
%lV$dLDBgUETBo(IhB(h$YGUqtK*U3Tq"<]k3SA6/`B$5@+jI*O4b%4Ts8#cOo88UN^-08)\@t!^W@dm;_qNK;@W1sX"sDXNQb.Gi
%G,ZaZ^8!RZme!]XrF30!^/G\-X46?\DqfdY,"oW%qA)!5ldk>'s5h;OrqKp0:8q5HrV7*f7YUOD)iKQke(n3:r[gp$9^p*Kb@qDF
%Ub0?7OCdLN8Yu-i\qK7RaSOL,eaN-a?4-em6a?T\*J:_aRLLH0(C@/2VXg2CTrWCPf*^o;4K$Tk"7K!43Vg)8Id-bsj7Ll-Z1CfX
%^)$agaoa=]':Wa3Rk30@:hK[^L[F=Z[XO"90/daVX3JYn1rHt$n"DDgmcTn24rTT62W^VjoLg]A(na@[Z.S0XkjN-6D&B9^+/I5*
%(JX6Y(!Dkcj]e=0eKaE=L)eE5f7F5_jF;Q^(A[@d-Ha[,3EbBd.0KSXU]&jE2"C7leFnZsT2C1eL>pAGq=d(*R6$QiqI1W];8j'n
%n>ApB%K/:d)Ms$Z&e$@Q+--:-"YgW@r^*,Ek'tP3,KogBQ!CZ6WN`(n"-\7(_BL!a)&Z$Srg:4k<]ejt5@CP`;JVCVeG.<0_RqeK
%Ek>7angfC-T8J`/f_s[Oa1O)j9ek&Uca.&OL1gL-mVqjF;8(Y1fH=BWN9K5ZLsE;RQP(1]PB)-<k=!b].5:)2H,h0#om&T8B[0/[
%>gEb,q^PK[PYM/TgPi[lC)[PYg\NA%#^gl3F>"*shqh$kp5@a]:@D;;guRt*]g?/Le3ZGm+([AhPb01/.J'#?-DSt%^)--SB'uB0
%.k>LTIW%AO//0JdbF,-jcM4i[\/UF9c`H>p[sj]JfLp@>>%-Uj0=?#OHR_^kD7BN@l`XtYG+X[^B;`eEd@&66>#tIRq7XNIs.aG*
%:9&`H@FL!g2Z>g6bF?O5I@*-iJ&]uA-<43t&5>;rJtG*;H&L(*l"U,QIp^p^`1MtcB?!r0X8$a3:HlKD/`=qfs-ZmmDMp^&N+)7Q
%[+^#4d\k_Qr]I&peu"Yq3Vm5$Zc3L,-=:q%qD>[>a7ItfkBJ%t18oXSH'mgBLP3q0(:'5!)u_t9T8ELEb1d=g'^;7*cT"]2D>mJ+
%-6Uros#QNDaB!5Frt:Zmoosqc[`/YI\R%>]DQh?sRJFdMqY70K=ib5f*Q%Qp:&\R1i@7p"?D#GYp"Wck)WT;Cjd?2?oQ^#Ma_eOL
%:2]'+_7Dk=&-)KAW\r1!$*dW['ZZ&g9.(fUAEKLj=5kAtk]-NU#n7N=<"0.H?S;$0d'j[*_TqonE#l^R5s.p&Rrm0EX]l]nWJ-PV
%(-nV-48NRLDud+QVTBetXXa'k2efI,/hR[`LZR'c9R_HG@u+`[O)MMtgrdf\I]@ZW]9]uCpR.A%nm(JIU6Z\VW55cdi&@`"KS&dE
%b?OhNq:I2K'fPc=fIEG(CWl#Onbg\@SU+Kla`r9HYUeLc?KnZ.k$L$UU@FLd>8f%M2Aae3F/_X;p/o<T$i,+^P0?oeX"o0-/S%`e
%]?`/%>Lg52?a&g[GOXrMDKOJ(ndj;V0>2K_?6sn]a"rS1i$u35hO(2%1A+W&c.)^6#:\gt<B&_dD:nBFi!+cgG-FPbD`?-8^$&BW
%PBX$BBtKplVm=b^BpD5Ljf4/Q2j`4N=a<eF6d`Z9RK&/)a6Z39I(o4k*@n<X8#*UNO-mDINCHu.]7>"I&1f_d1DYu;T"d^,(P5e%
%G"l82@\e51#(MUKAt$m=9:R<nnPgn0W:3dg9HKa^N_S=\7*"J2]?pp4rXbWb,fN^*HTn65HGNdCcE,U#U9XVn1HN.UR#K#q`\PrP
%e(`>bi]@)Z9g0h3dJ:i:En#Ek5D\#6=c'`Mh2/)b3tY>>C2#IRk/M>7d_9Ke<GKR6"pJp.\o8:qN@pOlKilaaWA>Dt=kVSgY+@71
%7T0aX*mH7[k+^P0n[iI`W]^qGm(]Bkl]\I:kf-qE4M$gAV5)eaah-d)C-39fT+W*jK84P#HF0s;78L#VPNZ`LGq=9uSBFDUn!9TM
%c1UmhN8>W*YG:j4r`o*So^F845&X.`X6#W6kYnh?NP8(hld==<MmmA@0=_jH/"O@B]5u9o=EL=j)]N^,G/gC7j&9GD:Zj*8na*85
%QKV$!O'+Q``A-!$H)5Atr9&dY0ss)+1Uag?\/nkB/hW-[g)"[;fr)`_Z,5mo2n!_4;'4Q,?Jc^V/+7^mL\6;>fLbi0GjN;AKs&nt
%Z*Cp9khXn/.rAQtgi18J-a^\TGjAtC[BDKm9m?G%N/o!e-cW'seYhq>mGVkDE?s,UD>-AVqbqB[>eLn7j%K-)ea_/JoAt47GB7\M
%rQ$IIDkF]oO7-EtGiQijbDGbIn_!L/:!adt0CBY2j-@Z[fC<Kdl^>1!D]EA]`]I,`a,.(7e`t*F>kW.]I_5;1@4c@[:\`>$f88G^
%mVQEEWth2Hk3V>hFZ5kYfSQ6r'8LY"jb^>)_V2s$r9=2KEFJc[U:R](2">VDktSOrCWX]^@W.[CR@H=qh4BT"VQVB7h-sklFOTd%
%V;8,9ac'4_RTt2#GadF@>)l;ua^f/W@]Xo?H!>cDRk-eU`8pOGrVg?.>'c`sQAaVLoLo!f.QR1URe#OlimbiZI5R:iV.XJ2WAS\,
%277N)d[3(eRTlAp4BQrt.U"]JlET>U9f6s(af/SjFuDM63D3$n.eDiPhW[aTHLYD5H9/C_oVOS@NloiJf.3oNB=4/YoPO&2B=]QF
%imY*c)gBceQddLliUk95F=(-"c=]Nf(1rl)<Hfcs=?N5/+WWRagc1ak\\9\^B$-UFm?r:?&i8@felZ`L;^o]JZgn!]gtl@oXkn5a
%Z*h&G-aoXp.EB^mZY-Q?AooP(><0\]Z+%=8B.%b=n_*!QebH5Uah>s%Y'Vh.lg@/Pp0an'S@rT:DJ.'?^7KbPh-A3JRs.s(=R>Q)
%m\o8RHuXT$+eH<TWq"oU>WmPEF5Dona#]FSk8fhHGK11>D)4+l2kHFY$6-Tu98Vf]>eX.8c0^cWj)Z"qqsI_RhTaB[5.mC3`YulN
%M8\II4<YLRksTjlm4>MBY;R&lrjA6*^HUCD]He#['"u=Y.iHZ<m3K[#6Tpi`C13Umf'1C]noT4m,$E\^=\mU-)tj$39m:;8EHq74
%YKGo)I($M54288OFltDR2K.c8*W>fCrS%QmAgY3%\L6DjeuE(.=I\.FEU36OG@iuX\A$LdNU=iIR;LZt[Wc6Qp@;)IakeFL48)6E
%3qe2sD;(!BrDRA"Xd4.#jls:]d`g=6XmGG/F$?'uF39aml+Cko:V3me;8X,Tm,$"`pF#CCb\XjL_*lFohL8G\f\)ibgN`>GCtr6$
%P#L6"7=<<@T:P1lQ&CKZf5W0!If*cclN_'Cb[8P*-iK8)]pN/!4Bha=goM3rZ^Fgem/(p&aNP`_j27WRnPGjWMmqVR9$Uai63a]8
%!>]S?G3`D)XuJ)?ghtE[:)V&`BCAMGXfo4`<]9!;bE^%P<SL,/#NL.[-ZCP>qa"iZZkXSAT9b*+aok;M>+/Z_X^)nt//6*uUqTm]
%(+q(4XbGL!EfRS2SCji#(VT0=@54+<mOTFBDRLA)B:IA.h4f&#ABg)19<%9!D/'$L['<S0f<M0]lK.tb@eCqW]J<]O/ajII9$;FV
%'3iY^:#B6E>MEnr/E\'l<d(ra2cf?!GJF81X]fLT23GtoXKLouDcZU9g\\%j_H^udh'rW.q7X33<*Hl^WM>m'BWD",dRm#JDdLk0
%nZ%o#QS0E/B9-]Uo^d1p.5S[0nsg!rHEWa=QIX:9B%FsXX`c-ggLQM[ZYh\gCp.B1]%tVIojR5E2f[\)kN(K;-b$XQ9]g6<T$k1#
%rQ\8hIVP^Fc`#N!ro?,/cIZZ80+-0@c^hr4r)6GEXh:/<*qm19[HKqnH-K-`gU3$n0"+opR4Ra,]u=LKFXu+eY35N50C.dsq3CX)
%g%saKh!rt<7QM<3hDi%qAN-35[J"46kNm)h<6!sf8&nCaRnorIQ*$IfX3T;ejmD:J72l7VcWYO>7^XnXQgYpL?/7]5:=!fBSR+JJ
%`9c^Pc:T[Ph)RZu3BPQT`TV2E5!JA27K.&rbTG`uI9jG0m3Qr`MgN!=bLsKGlcnh1j^4nZSYtKBrl45GDuZtegHCAL<-nkMcl>."
%$YC`"RtGH\`"$GBpT;>5pK8Q/Wqk2_fA2Y8U\W'^ajJi?iPX(1?EA8h*P7=RX5ha,j8F\"^#R.Np#0GiF?4l6\_:4H\NEJ)S@"=n
%?V^RSAc$T4Bk?J73gG1YMe.o2g?'sb=?S[V<0Lg)mHR=C>ccgFTC9a3(=+(0G"NS@q[%P1]/b/H\@HY0A[GR??7n?WY?i9r/Mo+f
%o<I[5]@r[dg2\9RYKF<b/(_&f;Y3"3=hD>\IV>k=6uS5e[*?kTm_ZldahcBu:%PkIDnVk^^YOfS<c;bop>diOEg"2lR'GaYl22uZ
%+7hC:pXt<"EdrGd/JTWk*j1F%WRJ35ASV7Df\>%CGZ[)`hg[U;TC+qNB-.UVC:AO^gQ[^Zp/S*&[8AK5\]<n(6-3l.?Vdk7'lVRl
%/,RMVR7]WSGZ]+?hb)G4Zh%MrV4)EH?,tcGgcLt9H[P'7UJL;DA+=8_rq5o_rmG]9]^+3ZmGMO6Wn,hYL1C'2p.H@N8([:_kLS\5
%nk1Z:0>F%>ddj7+ga^mAncu1DdBb@,A*:$GYGn@nf@O6)Yh>D8$)S[;C&>J=R^\TPF#)EcDQ^Tac)6>^V3YWYNOSVBmd=<(G]].X
%GuOGfrnH*qENC1'PEg;@H#q]RS!@c[fOQl7IociR$"kZleV2FBNgk$2k\PV&E6@.Wgn?pEId5mj;/DdddC87$ftU30c!5,8lTNP6
%2qsJp9EG'tj:&i\cP>l.\eOBFgY_^#+?P+arEe:JfC^gVbcQ;WSI.YBDAQNZT4ThYh#3NV'Ka#/JEQW)5ei\e%p&Qcm2!u!'Kb-W
%b/7qqnuo8WIJd(/<$K;)-.74A6qj(;Uf6O;hK^L>YGXu;dOG.r@MKgo:c$,;Kf!A$.<b3WGo(Y,d-iS]7SZ"W0`BbRc]'LRB<rCg
%e`kIn,>ouBn-t#D(Oa6&EGH$^>\&YQjs%0PIt7fp5LOCXTi*17j)1u.UgDQsrJBB3U/AU)dS62O]MOsqhItu[4^tX_hV%6cI+0C>
%S(.O)[8*OLGeo:nP@&9Ja;)(&WEj<<PVX@(iSb='1'9_g7J(^!]C^5*qloY$K-^&l_8m$tU48b`r,";FS@W'TXDE8k&.GHX[qi1b
%&:]ImYh=8W2=d2oZGi-t40DSt/X61HY0/K+JF3n:Rr5!:Zm\o+IZq;0cf'iEQUf_C2O^J?G4W,),Q?,8;a4eG5:n/QFTto($FBqU
%`kRu0QQ]r74h$lhQ2We>Famq?6?;U7B^29=7Zd3>4rUPJ^[lDW_H.0WmlBTJ\67&QZiE"Cr;kb6d(P`oB`@P>aTcL.nEa2XdD$LU
%Ij%"jCI%n=D*raEhX>%,]pqI.&O.9Z46Xq7ItfTu>\b/Ur.\Ll5hdqrQN%_9Cm7N^C=QM&U@e1JjnH?1'N:l=4D\VM^/-PV+R9,j
%H,!5e?Vou'3\juU2]mq5mGab'^'jN+O>Kf,h]MK]7!puYD[?5+Q2X+jR+WF<&m9k]MWP_fpj#O4(]=<Nh$<l#kmnUlL,1u7J*Cn!
%,4eaHGaRg2ACrOr)h*:ojh%'JZY7,)/FRiIA,5Qu#Dq@Z]ls$`_&N[L>DmpZHN6d/NU@soo..[fX*8[c0"<%eR;:$en(Q=+p?sk7
%*Y2P@q[EVB`Pl`Vpo4#acm[K1SR34nGDnD4[P%XYkuuIn)N9$G@F@Yq8*N[Z))[E)Oq3G#,%R.:m:3RHE;l`ul`KSL?,`/UQDYOW
%kB!-\e6X>_C9P<7/NbqcRt^(]b]L9o9Qhc$aa.9P0;M@o<d).+L$e3jSQ*4&P(gQTUF%Gd*k/4GmQ(#$B2,0;Dj.N,V7BVSe_,!*
%Bq*W3G-i:8g?`Dmf+5;g94$^.>?bD_jc[aM`t*N6QS3#>R4Cr`aNLu/meJ3i>pe^^YKcH0HK1t$'OMI4]gC#636OG9Vt#+3\Z3(5
%nEF[$18r@EK<+>1EAi+=orc4((2d#C085nF67;RIcco2X$8ZJZ.W*)u.bp4kcW+o/,\hSe$e<I"2u=jRm1G<4:ZY4Bp029GFo"cb
%6pPt%[u\!mqD@l"3aae.:sTg>UVqCE"*%WupLp&SGpZk?Qi)K(m#uY&\<NS,VrF-#\U,"j:C>cIDg(5aF8TaW<%>W?;_=TEDEmBf
%D/6j6gU2n8L"bp+3E)PTSPHQPf=ghMdF9*F&5+Tm5+upH(/JjHksfC`286`03%nXBQYRhba9B2jA1>"@3@2nkl&%TEXn"e14's6W
%gH3S7M7H6U0)&`G)(r?F;q[/,n[&-ui1l$ogUImV.l,klNA$igY83X`nJbeYV(kP3=qS+$+Np$0'*eu>C*iHa'+)RLVr_d=^)>hM
%bnl_D$ISW[)qtXGEQbEP'\^QQ(u+QTO8)=Uaa@8QbAZY@ft%$o?Hp$"2Md"3Xn^%2Ia6';4t`=YcBae4bKmf09[,c>[,,-/&%A68
%RE[o$2ZjWXRH6f[Wd$Yg7l.\;7Q5)%T"#K\V=\cq3M*:sDnY7j`T`5<GW7\hp*\0^dX0ZkI]durHV;'./3KXhls1UgBnTfMnn%gG
%Nh9proCQ?4pO%.NXZ_U<`TldM@j,'I[0_U=pJN&uRtD1#dG*tfH>e.RX,r7)[kr7p>\aoO$ZoUpKD=_GnP(*>7As[1n[LZH52PZ"
%4s',4Eec=\''$VF%@9+"$/3Rs.%@t&:Hgi69<1(RE1M$;&!lXM$9@+.fsu@));Ms(f-kZpM&R'pZd7o8VoO&!BnfKm\\4<CgU*Ae
%QK#$cqnc$L/"*i3N\?sU`9i_BA/$8_G8O9d1K1DXp.67<jQ#":_LPub%PF3OCl\'t0PZK@lZJ'p2]g.+534kHZ#k#RQC#nMHTLMs
%f2"mP+'Zo9jrT-#a:c-b[^*87qKSnX-Y9Usj>,I+0;$)(;hsM;?-"K%:Yr@H2/hY&qfMQ?Z2ON.+m32nnWgM/]SLQH1ce^;>0,lS
%R1Y:h;q=*'Hi8&HGKnCi[q7GBh=>?YhDfALO.X]FBT9-=It:XLY.<j4V@rGLI9:odVT3SO1*XI2A5m1M/M)M3D*D[!Qp3`@%lHE8
%Y]Y$R(/g4:kKrtt\HhTf/:B9VlAX#X8fo*]e^\_(Z,G@5?l-&l?p\q`>0=M%Ztb;k21&q+eR'BC(5L:([Ui!PgX\_F5I:922R#=4
%^'-mMFQF_J=?6436/BQt2`asehkb<WA,#7il(e.#XSFbFhkudkZUpU+InKQFHR`N4p?p@!]jl!M/Ph*rUQO/-]<j8g8N&,uo+t'#
%HeF-9X?Oq^&%<p#G:GY9#A[u>[Hr&DT2r&<21+#V4=mSfF#2M"rn,BO$//uFQ&"mB#'r#I:\(.;B\PP_\'+X<E/-!a14$A#;PG<4
%7./F4]56R`AVhep:DEg)!+mp#GHd1c"riT*Om7S6dXP_gVZ<68L8f[\1dckh/5E4k%'\glqT^h8(4!=(2S@%V/;6@(hj+6.YBL[u
%dsml0>/UP-aQ`bp4J)Z(Lho1+*qYS6`$k"kZh09*@"D0iI6uik">Sb1,2>XP"FLXokCYIg7PV3mk8O9?X7`r.qZM`)kGMJYR4K7i
%rmY:QmlL<Cjp`/ZYLql.hSA4>rj`72ngV<J$S_3CHnF[EZ35ju=WX(OPP78YlT:6rj)EZomG1>O/IS=hXH%mrm;K+0qq\D;Gp%NC
%kQ/dp8@pWb?Ch[<Ud#HZ`BK+TI5Ra%Q+mU4!3c:odJZ5W0\.,(]Q2)-T4pYV>[Ku#*]%Q:oOZ.C:58=9-p+lXT/6jn&-a6V>`SZ6
%Zg$N!X[XHk>recAT]us?O!*7$lhS%r\DOi!-q%^30P`Y:$9`pX"SjjaQdj^`a^_c&H^DmA?J_QdD&`%#r9jR9iQeY\&jPDq#LV7=
%`5A81*YYeYm1\o+`3'>7D^6C1``&ea1I:`6GBfP1g3UpN+";848KTj2H`<dpp;9,*p[QcTh'UF@`PScX^KX=c(Rjg-SKEbq;4r6h
%b*V7Nk;-Sm8IU<=G37a<=..=:%pU`1TJh/5!&qnZ]2j8GdG;$>61HH,i1OCi<jg]U@=`K\*_S?QG7Lh*!"9>Oq==OHIjK@87HD;q
%e:02tq*j?W\q>E#:#KtOYTAX_DdN\\N2e8[l\5lsP:spm3oA/cLH@cO@&a0KJHs6M@DoR&S_M;CC"aa(O?#j;c"7G4Dn>9b6Yjb=
%:c05m0__c,X^l>0=V_706f8"+)%r_alghEsI@T.UfcmjP1"ABIJE3bu6_e`lLtTK^XC^\VnVUfYg1Cm;Hj$j_QWng)XH8qm/0Xsh
%U/,jd[FWtt&B#Buh9gAS^PH<aVN%la9-;\_EI.QQbq:$>mQ%81BOJ^1j4Odulc&`E3T+/VN+\ccUC.4ph-J)'2b?&L&m?FLZ4j-$
%A\[O'"_@^S_enPT=cO!+kjuHp:k#NN+P#UF,V:d*V>PJA^PXSthTUurnr4^/e!UVNQ0,9\M>8YJ9A>r(KDcKeO,MUq")@:614?BR
%FGc/Br8R(r2/$l&=n8E`Y]"BfP4c6.?D[U<lVK_$mJc"V2/Uh*bX/>cIQI!7G0X-6LIH!$nK%^=euAr-NM4>c>+,&Bf?7:igdrkS
%6AMVrFKi9?k^RU=]d7H.*NeGd;XLa6otkN]c6Lk^7KLk@\O#BCYY_if7A"O"2mr9sgIRkU`2=BBi^Yl3L;>[PqiIu[OQoqDj>Pc!
%pP.-\nkCsUU8R]2H"=>?M6S;R;f!(,BCh<4]7W6-pL65f$,i4*`F^u3ldQ'8*thY1en4n5qejM_A-7S;4c#7U&&m0IVe3!T;\j0a
%779t.?0lda>8MHcdrK_L\""t`#'1pqcAYU[^M;l9lf6\Y-(<5HUeVcjCtmXK^JMJ5WYe^;n'>Y3a[;O54_h2S6JL]eG>H^_rpFt#
%MSO_#VVX);1OTr1eE9$D_.$l:O:c<E#!M)jjtCMFSdk#S.h;*/$/^2b"!u9:>">@]>YgVXDSD:Kh0ZXVO(Ap7V]*aFimr8+RgBQq
%'qQlA+.3#_n^Q"Pa]*0<[<@i*:X>6hKA$4Do\jd0J]HL*g5X=hf]Dh2"/?=LnpG?8C3p^;a<=>&?+k@P)>NKAC>u122a2AHWtNQ1
%FYtn?gRO,FYfeiL!pj5U:;.9P"CmA?M5-tEG4iqX*d7,E=]$3JGG&%'/p!LCS`k7o>Ak1C+/>RB>rVsSqo?gsaEQ*1CZB/HafNlK
%\X_:-H*10aC=<DLjQk'e$b;2gg!:-e1=&I/lf(Y1lMA+qVmCEQ[(,jJb$sHjp;2*aL#'eg>(3W"Bp5"XmIZNJ\641Gc;%m+F'mUJ
%i2,rRfp80VmG=q%o<mq&p2osJK:(@_4*j=Jp"LWe3qYDl2O^JD,[pHV^T56EP>CD(,XL6!@_)!:^6G[:qZ@)V&Ft!,R]@Lc2m]os
%$(q"IgIjJ+2O^6m'%7&t\(<1=Jt;2>S_dSlDl"4*X^S]o^pZ(`C+"TS1it3!Dp#]&C2cD0^T;OThOucNDGM@<05u9#DEdI4!bnD\
%e+]U3cg(W,"P2kX&?Dl`$hlG0$!u'Uj0T4)fq5q#<=_,EdTUE'Gh9tDg%<O!+e*d?>b>-,2q#P?9D\6/l.P7Ll1%6JYa"G`JO=a/
%Hn;[E<d@B<<r7nUR@e:_1#FP2Mg/t9l*k<Urnloh95F3kfD(5.>DKn;]3N#4;p-JhRI;9;Im?-e4I%t0*qtC)?P/d@>k5+hi%&A+
%Sicml/B/$VX=;utjn::N+`?G-m,83VVX*hLQ.u0Ih%aiF,O9]ih"klcPFHnIjHj<hP:+;2(N5_n]bUPldi==/3IA;I#AVYX+f4?r
%Oq2b!T;s$B.3>jrY=#%odCHepRk-t:;XO#/DQ_]0-U6SEJF)K0%)nq36FOJj%`BcSDr<?@Ui3[,<L>aqY$$ebns!?_RB2M-&I=r<
%/Y-3kqWfaLAi@eE#XGSe/^AF&V-='8^%`^>m$ERafpS5ugP]_*/?M(5p[!i3dJ3!"C2'M%4tMqlG=8(Go0\>@3cgWsji#??rP[7f
%</1@n2EZm`]e)4aT,O]6_KI/2nf+rY+rU7\?di_7Zr8).>jSAXl0?J/gCX(fe5pG0OAf^R0'pM^ZE;/Gd9has#ko:lHmJdk]Y2iA
%EB\99/SDJ15cf*Hj\$D,5F5Pl]nM[5RW.nPk,,PE<1V3nU!"$ThRqV`64fQYRnR+b-90F-"]9inKUhEqFW<"ZW_;aY=bh&546nUO
%;m3[uho5CYS2Op#+7]rnde'bnDjD+6MfcX75tti/`?$OXf\GoWk4[ZST`au9l[q?0Dg7bNHtc:0:o"bA(\6j1rOiI,[XPa2iUgUP
%F_Zf.qe%X&OZr:BG"@,GP>#q3o8TNMGa=EZ9udQq[u'S9XmD-3DGAL/L#clNdl.0\cVdF/6>Y:?J%s^bf)c4\I`q0AK6oL1nWhC2
%0Mn!1SN,0jbX(Rs&^9ZjD1#d6pq#Fc_HhRrOMV_)PWXH>Vq"tKMaD`a0XI0,c.XPKS]/age17*d0K-T:b1eGYQ`Ql^99iB)fh8B$
%f&MjG@.ekl:g>@qY\>[iH^4;O7GOEXbmutbY;%ir+Ns:e#=mj6*u,-^7q21ehJr@(2AR8M1F<YZljs\u3TQtem=Z:=B,`)M0TY?h
%]s0YI3LF&?nW(`44uFf-n"j8)V^FF$9!2dXZVOZa0n`qEWMK^k2Rg*%1tJil^OHZ@>+mp@:G(FnO@Lc2ig)Cp<[+Aiq*J]'g.EI<
%rNd*$>Wbf)@cq73X\G.lIlu3V9Y6$R!;i,Rpo`46g?rW:]:=6?`RrUDn%'iHhIc?n-I'7>Q3nqUP^Qif=&Yf=1-2OI@ZLDdpi8ue
%jgZ1Z+M#V:UN1D^Y'OmC2DN://sOPUiru>?]:Z&Mm,PMFbOYqcVOJIas7DQ3gP9+orhfG.2n:qn8i5[j4XS0&_(GXL4*+\S5&j'A
%5FG)%*ZdCk4ZB\-Xn0\9EN!ecADL2TCN"QQ_i%)aE<j1n[t`AWd`3a+G_!Nd-2"oFLOVH+8TOs^pLe$C>#m"f/a^!$&ughnbk0>'
%DRMH1>+3(Ub,!SC#1f9DiA<*nI6ZsHm"Y^!Y$[cJX@t(V\$_7-lf/.&iJbQo0LiLFEj]"3CZ;(-DEe(_=i^im>5n6nl%F.Sio60t
%pYo`PlIdSTmDAO_M\fjY`Fch0@X_o:(9>Qs`^-*sp@i:f"7cV=$IcrD':8O5KmLsfB5V17"_tMfO6P\0B3)Z^'j$_NJtA\"CWRXR
%YeS=3l8OV3$ST]6S(bjV&A.TOip`RVd-FbK\-L]b<&p)qW+XH5\H/";E'7Npfub_iB)cnS3J<!H%(bZgL`0`%5Q>\mpBPGRAEulJ
%'C05TFGIu&bCJ%p*(dbCGr.alO>#HTc_VS]dJ^r\b`)^u\B\q\X4@9dE:LQp`JqS(6a:TZnj'+P'TDKO$to4PVM,.-r4a*9E'9`S
%(CT7^^Zo"nK=cAW-Q\BA`TKdXN]['bauV+s1=_g!:@_I"_;cCWBnC1B3W8#UqY7&>"dGd+cSh7'OZgGUdM]cBf"XiNrr(W^=r,uB
%OJ=HB*aWUVmI5at7_4]mn'#S4H10Yd4M8T[NPt%'IJ8Wa<jC&%f@WmngHOq-X>O>LSSka_m.KgcKl7CRBY6b&1S;Q<$Q==;bu+"l
%b"f.sXgRGZoXgG"%DTBms7X\pMk@eA:sStMlFUC6S]'uXinXPRqXIMP'*%,Zm"dgqK@;T3i5]s\r#fjpa6<675Q<IUZQjWEZJAoY
%&a5kco$b]MNc:q0hpH8"'^LdVTCh%7%7'COUXj/WF8dij]8(k?5C]ebUXn`1WqH1[phQ'W4k&&u,.86>M-Sk=On(a$b<u6t/,mFN
%.R`,RrsmQ"+8j7YVu"_hoYUWhhj"t7J':s'NlsZTlRSTWRTFe9s/N5=IdM=N^OX_:q+%La8AYjQr7X$DE3+RR&h7VB9B&J.0d<h;
%NC_dMok?tT8$Ne`Jtrep02fZ^DUO_4NB3AhZsDD*Z1.)DH3c2;C$\)1!uZ@[=[+%CULu;r.9d=o[\mf1TCa_7T6+pWO!rn.0k;X`
%?^`?BdW/TD;*QK]c]-k8j*?Y+nq@b(O@gu]YVg5hd&@&Nm3F:0epDXDd';i^^4qY33OG8c'6<TSa,D@c[EPC(IU6>ge4M4E%-[=g
%WUr<rFhPjd%%!?3T6$]70#r#=V(P&P/"fL\9Gc#L3m,?<._q+f7ki8PK(j>MY#!f_.Og(L#<Ycb%&iJ<K0TTdeFt!-F84A0oi_h;
%R"k)Lf2Cg,M>&hqSKJdUQRDXJ">nG%8PcmCROsfc&VV;NV]hHR3]_Rg,.H_k6&?BZTC>3upn#Mn.N,`[U"1GV&LK5#*+_eAXQLr_
%r1nK;'R)]/&:9T882qMs+tYD0H(_dI6#d%48kGf"'*_k/J>.]D+d>9j,B<^D)#atM>X)s"b\/mhY"r^3?1;TP,r"WB-d:g/NXLRb
%0qfaO]:^ANOe,O6"38EbX"0098aH]/YbH.\Cc%sW9B.isT]'OiJ`+<Kf@p9j"sJF]EZ0$+=Y;*n+-aRD?plA]2'A8rOkf6"Lk0tY
%O4_e]=NAJ.h=H`g#C=H7hALVJcs&\0!\>6:.==X(7d@d#aJI-O,ggRZ>Jo\j;cm.]ABe*Tl":61WprW-lS3^A7pQF0-i"u,)t!f4
%qpOCH!,OLQpqkPu$X=bDP0+OYfcJXq_5sk'CeFa2?r+h.^^jJ@0BnRi*qH*RSa\2(EJ-X4C`sM9Q(JI!,Dh.+Ba9brR,Ji41u!Z5
%b0_O:I\>KurY0f_S_s`+.5qQYFp,'u?kH/19BV%W&ClpEEGNK)?BS8!:.EYQ"@a?XW,4?F5R4e7-G"jH-9ht8*eB@qO#`%d4I[[/
%ktt#UeZg"8P4jEfe$bRhOpXo1#nfHng(#VP8PBk$RXn$7",mh6A9OUr8LmnZ.m2r*S$f]J9$)j_+N.lcZjA^oWdHi<=g88)KWA3N
%Gskho=;mVcYWrPb<.a<0X<+#885hh55dYt1a_XNWWn8B?6tqjDgOrY[FTW'ZnZt+hartY6L#W7:dU]d14X(SmJlT#pkml-;:kh@E
%/"jQU1JMrpUqd`IoV&T?fFj)i'))LK[^$4[N$pt?K?&d\V':)&>eOV)?scKQl`mu3F::_@128rh3!R>.=G3o=%oFS)-RIb?n0NXB
%&ODRLju7l&I\:n-22CadZkjAqi40o.G?Y]l"cO5NN9qPa&Y9(-J/&-<.=`c_V35N7p6WK?jEl3o+e-P?Ucob]6mg7-VfbT*ZLX@?
%;2J#g=9WLdCsp"E=Ro=:2QML5_Hjs<'$-YS@p=Y>!2G,m$K`c]Za*-@!#)1,%*7LqBZBNJ(e95F^m`WYT"lOt>R@"Q6W/b+"(u>a
%"To,k0YdsPHs!VR+I.j.@V)2EFI0-\N=Aq*eQ=/+K$Z8'8_dkb"k.9WPjS$t'`)&kj;PJ""j&9VgAXC1j8A!2Y`H]UcfH;r=DO,'
%-.mn-<=kc'"jhT[Bi^3j&i[n@7oZo_DDETnG^,m<X#,6\P=au2<eu<lj(c<d&`P&>3pOUDcjRc@jFt/g99C$BM*tln-jX_t[QBY+
%9C]1G4oo-P>t<S>js]A%9I(Z*l6qr?>H:&a..O]QE>/IfLWZsf:G$oi5Q!&Efk*:.In%QoMNB5TjH8eGP3V1X/\!=N(;S$g:t7r:
%V?T*^Sd"2;m#cLFW.Bm/WuhQT6<]qF,99j3)H2`*p_2#r2I'6P@QPED3gl(g.PNGr"SPi7;L(\j*hXJ"KQNaF+[S<i'D]QZBL?76
%ST&#d+Icp78CGS>]kYI+)@Ka%,PI26OqJ9RNCYL(m0(%ebFk&R,8,^Qe+00cE(ldW7F[*."Z,U?@O[C<=kXi/JWt?BQtlarC6srC
%BSYgg.!DBl/%u9U)CVA;HqS09P$K3<lYCoE.T<UY9#UA0(:,-(%Vb4DAp$^T9c2L=#F$3RR+`G^:cfd-KmLJA=V_DJ%S:XGRl_6+
%j_.`DVgufs^*-G:H9s]CjA%H\\Su?Na<t*@1mgH%d8u+"L0b*\#I^Pp6V"I7AhRU*)@b?p2'E8?/%jV8m6&g_;NKPY2LraZclHLN
%TnHm1N-m$bL>:.^U.p:r'7K(<GZIF]B">]Yll:#8k!114D1(#$'9"E(CupeHCh(tMok,Tu@3bX?VurUZ):f::IrnnAFfrtQ".;b'
%NX(332$a6hAS\ftZSFm7R[=-dZP/^'AI7:e/;unp5nQj)d2,9:cX%)QOUoD2^kk:sV%J#X%hlE:V8;lOY1QO7%3dU5aS?^/fe1Hl
%+H/t[9(r0;l<2R1f+`E5&W6Q!DK<6[l5<?S$OuI.:84FIknoNS56<[84_hfo&qeh1:=A^!T\Wl:?$;bMJh))nGZ:o>0(c)-d-nhb
%\?:D/'*ONB.b8&j67`+<T:[E![od9HXMkH/OtMN$N[M\f_iSa"31HX+:WM.k5_S><ruQ@4'c\Y0mBq!X1BaumDoiUfZp[nuks9@5
%,;'R.o;N0f9J#Z>MLXS\PHH8<a"fB1KuD"^7cF4.+9AWt)t=24UjH)YKokUiPU"YXbRh#ibIiUX6,:^d)O4F[K,sYFF$LBBIX0@/
%HGe2t)U>BGr@DcFX6F)G%G_#2B\+.H%!J;j=)")<[P120UOqk7*,#nFX:m]47P6\72A$B@9?CqfL<H8J3_h3L6im"ZB*li2j`o#S
%<tTo'mtSsR6C^%3\2Nm\NWtp&_`XHO@kK:Y2Y%M,s+3'[Ou5d/E4@3NP?;E2Kc$-,d_o\7]u19o9S9J7&$Z*h+<1]W,n&\,V=cQf
%bI,TfMq!h]g6HbI0XM'33>tD`OGF:Ob`EAC'D[aE%nsU^;GQ.aB1\9&-ecAO1%AZ`aLd&PEKNn63/-J273JtK0]N3"3oj\i(Vjd:
%cQ7TADq`b$VI6rZ)CY^EK1M20#hYK=H/riC@^6#d1%&2KC?D`k;)%iO;DW:5q#&hSd#dQdXW[rhNdd9jDNp%_bFnLAJ`:>$q63DR
%=2gc3X'fC><67[O"qAlk%Qs-cG_e7#e&94VCRIH9K!&K6<X^c^"(%YmZNuSZSNmZnlY"=J2acZed_6e@j6oC]`1,g=pjp^[\h*:k
%'WXu3,&Di6OT"\$Cr&i1/B>i!8BW9,7%gq:=X&H#-a\s_,MVKD#_O_TKHMmm*Z1W(Zf=gc?!(o5M(6Se\iQ"90(0ap1ZHK2ZX*2S
%ON&n:iWMnq#2g.Ia'=F<J:%n*$6J.LY`2.j*_!P)]2ItsZ-4\b8>3pt+*rZ@$pnu1#<lZ%kul69Pck02!C$SrgRS)$H;r8pRYZ3Q
%@mh60:a'6>+o9LtAi]e^aAD]T1X6m*mBI]X"#%%Y7r4rf]&\<4%8)/`6<5T=3ht&s4rZH-KgU2-20_5m(*g!c=]=pfO)G\f:]s*&
%;LJ,QF*30'\W?n=VEKqE&UE&u+/)[:`FpFm$(j0d&.>&=-;T]8&=];7C_$CT%)MsT?Dc$i#Lm]9>ujoqaLPoW"eKasYd$2FV6GV:
%BhM%Qi,[t6j)YH=OiUR+[O,1.BU\,kO3jEK8%oJrV%l"Lk0\]q$V_mXKM7^u'paLN[$]lfaE'[(99f-;C*;1=h;WKN%R]=WO[KOe
%o/T1\BN?%rcn1ap"0*X:$gSScep.kgo,R-7:`'jZUsL<%]Ni=LE#<+(Pl\.Jl^QZ2Vch**&rD"]ik%72+f*E4O`2IjC?p:>l3KX#
%KH-O\Y`Nh?&.GSa:nYa7e.%7kAa+0k6_m.)dh%qI;#H!p0Ir^H-FP3RN?_h[2@+]$O75sJ^bP&*dWoY<AqJ]'oI`gJ:C#<O*U:Yp
%,m)$F"J9<OfB&G,`ImD&IE]tuY82B:<kGHl*N@N:A4gZeQ@)qACE)gPaY\94L`&0\R7AD@Y#.+<%M3m+<;K93a=0Ap&c5\S/#9+7
%mqIS`VMiQf4#dHl;G?$6b_,Cm:!&GC%[K0CXt8I,#Vh%6#:4Dd358n9!:D"LL\/5k;919@G"+596YV>4Y`88c).]HZ>ATdFR"b_b
%OfPk>op+@RP`?7,fHD@(HA!Bch6G!2^BOKIC8J@IUf@$$QjBUF,J4#1%Y,2UN!.,i%cTanSk`^X="KIsA5n]ZF#c;Bgl)?&;'aSp
%*;T;1%#G9R6nDp/)BbH<@:'91/rVra5rn;"Ond[=<DZn>)ANi&=T`O-M;Y7=!<61)R-5hVU$3])khl`&f)lL\"Y>od6NQbk^a*e!
%P\;1RdcV=-O3epfjhlQ"3kg;h@RNKEc#J,t3"(0;d3-eK="`,BcC*!"//5-_ToWU9N-,.%EFB.f<#DA>]L-B%O?N=?PM;du;Hk9a
%JWK*[@#Z0L&+oq*U]J@?%Zj1%T#4k:GT?qm2V!U6+l#V[d+QKE,oTZ0D(lr3Y\/b34bc?KnZ:CMUQ3=D6oLKEn-KQnJ!=@J7I1Kt
%9Y@D_48CR:]J#Fnb_eRhZo7d`,i"njKB)=/4JX2d%t:jnH[(e1!VYmd6#b]=E;5!$S3kZD%XTNDB2ObSYu,8S[_t=pF?SZD''_Wa
%M$]YB]3.Jt3A-Y"\.FR?*O[6pY]UNa`D3l+"?L6PV'A3YG_T0;$*A,X3C7B14`H&'Yp>8Em/\H/o:&9KP3It=GJ](i<_PPtdlHOS
%pftN)\>J=*Vo:s/jcL6Kc9&is,!Su;BQP)$Rj@f2)MoSR@#UJ)V=D(H`(C[UkR543jBKJ0.:rDQ=eA,;TsO-XT#\L==$mtNP:U.D
%.4V@VPE'-\ET-Is8/Qge0af2AO/L5X/eI4pcDGPq*g4G"O+PF9R9Vp,'uC=p70duZa?Y&6,Zq+`';SH!.q4`:\ASJJ8OPiua`Uk6
%[39hU@L0\4HSY^cC,@+ifW]%JILEjo!$pA@(lM0e6KAfI2.9e9I;6!GmXNd/KL!/I4rdSCjfF*PQ3#kd1;epElQ3EfA/tYk/gXSX
%;<U>L'Lq!BC;8#I-3E>iSd$%-PY&E!X60kC=eK+<KkOF8$dJb-0KXAd")'[P`8_Mo@NcD\iM"Xa(NqL[J_l$f'<X'l!pMb4&&8?u
%)KIQsebf4>a>D&m7$k7(g4>q@=Ii5qenbCW[TuY>\SrjC`[m?"H0Mb7)a\QHKDRQ/>H:$<5&dm7juf[b\q"<cCi(FK=:dGWKO-PA
%,Qkt2C_!89'b6RF^!P3>3`AIPmD6DeIJ(#E\)=VRnASqDh]DlDfb8F(@h%/q&?i\c&GQIYSG%`UlWVFR6+Fp;-Dki8@5(FDDnnJO
%$"[f7UZ$g\EF&.pOMj&N3>;]C+!qfWHP.cEeW?6.Hq:C$RuB:\8-_.`U.72s!CR9P:.Dr,70L3BJ9GuSSKtL#WQ^cJPe]9l+r,"]
%B?;TDTgFhc0gi0Wcr$U6BdD%H+<A\)'sJl(KOSU%5U79mc_tuC]TO*,KIqY@OT%=Uc$i>\mN3%!V%6QP;S:pSJ`[Bq1[9K]j?s.#
%3*^,4E$%)eJY\:'K,p>)LQrTDD,r8;,pTW:2+E27<Wo-%2AE+FCB[&-Y79(+i_edTFjCA!o)KH7Td!qQJ4'nKkJHnW?Hn1]a.kPU
%&R;f"=PDD[L)_g,EBOi3#RjkQ16l8o4@UsF3&9W$<Hc1sZjA`MY/S&6nhU<h,<GNfBOL.2%7YL1"^7Ik*Q8]65@@"n9F!\S*,/l(
%$P<Ud-CuIQ8o8-UMaUiQ*^in>/*!>2Jmo/JA]>`1/gU/T=[1jBZT/p/O?V>'Y']`e#UDXo,?)l"#Q0EDPK*pB3E&:',72rnObM6R
%!.l*LLjdcr4[&sV,S3#[ksL8KgPq9j(>3dOVSqU.$hYni]*;<a'V9m8J;ZZV;:"7I&fcO`Wt4[-cR:&)F9Wg))0Q`+rO=oSiM6@.
%l&@C8-aVr6"QQaN7O[5GBmgM0,HE?_K$_4R7Wjfq6OE=i0bjDQL3!G;Ac(u:/C)!t)Pgp:mW4119N@26B,U4[/rm1mNAN=S-Frdh
%m9`6.CPZg;`RlJk>=7\9W(N!]R'It$?ZJOHF8DS6f8d$&^baSR9[nD760FmQ7-f!JI#K2-`fS$!%r>"9q+qkkpUuYI_1G03%/ItL
%:dU`aKjl,9Ju-qNn:hp2<_0b?Ql9E6pXVj#La*5bBnsmpWiKdL#2e%d<*2]0l4T&XK*g[Vh-:&'&,RqT9XJq1^a3$\KbhCu0W.o=
%@u.`(>Z5&?OQmG!")He$Z3qsF/OOCmf7RmFRhRIV>[7Cui'][u.N_*&huk*nm4tPlMi<Fn!s0EqFR3H#RM-%N+GS7-d&9mACLm+@
%>Rga,P37\p4k"aFZ@NQ]+Qk*l:4&-/kNgt/^h2i2ZYc*niP4-MBr!#s8_1/B.)NtjD/q=k%#1rcV1_ZQ2<$>\41lV$Sko"ROCp1B
%/eY%JaFg8`WYLW!X8Hqrct5PG/lJFPjroL[!Lbc,%\J+KU5N,;3bLQRD+>?[dd1*Vas1JNF88#T@VHaE5[EMM_Cp7;>\$+-dt^E>
%NZt_9QQ)S'$$/SV#JNsWC!Eh54;g]u=rD,f0Yj!PX8-RK3+7a5#Ra'VVAoX*lJ<t'<)QBI29Y"uQH)-^?rQX;Khd1LmFO+_65aL0
%%-:>E,fo*N-Mu`:#^sX2p31]78&Xdfdtc!&`[aLb(V6LTLdD(LX\;TadR,(06S,("(Y7n7<%ri5\5SQS$A9.fpfVPc2\)MYkEt@a
%e8;Xm5T:0.]f5PaA:;Ah.I=#K^`E6U6n(4EZe4Xrl'"Z`CLRqb!>^F2Zn[*$g6Ojs!hFg=3[3NqaaWNV0Y2p'"Cas>W(noN']K6+
%fsYc6`dDWWIDd1eCGt_0oRe<dR(;/YU@S'cSpsUc!%W(g'"8I"b1EA?!ZpZ#Pgg7t$M$C&5rH'e!"-m[i!F?Gf&kg#%4p5(9ckUJ
%@Q;N7h9)use^@AMXD$6trtbK8T(_\/lE^#A)DbSp-jn]`$p`<aZiN'B>U1Z'PN+17YqUl5+-DmcT!`Z^7SY/DO6$oVZ$AV!d=bgc
%Y"9&+eRBO0o=u7EF[hU'TMMB,#0>ft2l3-85iJ-N;sl%<8sSG+2U_Yrob#B^+H=]e\*\l'fY/+@"Z)e[ee(6"o"G.UeQse]4BEWS
%laNU@]c?H$6l[K!4mjP4pUKi"T+rCq%&'k,E*-Oar'H7pgm<U\/7cXgZ&'-mYST4I'O3'@Fj(CU&fR0ZgsE9ElQjF+dW(]`P8H7t
%A;aY7OJ))+2j?=\q4,5F4cQ4^@ATTN/H$t'\F/r+IM.%D[[(/'M,kMP:)B9oh$aiI6ZH3LUD$d$?h[aAM^54VUrt;c'l:os,TI2t
%V/T#RFKMmXgn(A\Jh,?0'gR^g#:Wh)B;;aYd\3;[p(n_=T*g.66J\#]5N7,rkXI'+mAPB,8@$@j,$1'qdto^Z(I^(_/JnU;e*gMP
%Bi?1Q^tue7m][oCeVlcf/0Znu;lDZS+A@9^LV,<*$D0Rb=`>gA[$F%$8VQP15&0-crhth`OQElmY#;NgYHp9ucMoES7(26J&43+^
%^d/L0SeID:'^22g'Su8;'9Y7?im$#V^(&puW"u,E6SSUP?W0@4@fdGt^sFbZ')J)E6P)>iJf^%N5/&&gM$SA\Nhh<#k^>Td![Js,
%nmu3DDa$450k>>NL-34^3T6_CB+&-sd=-ZZ=,'^:J;t5feSu$jE4TR+OX7>]dkC'])D.(nZ\/XLCfCZG"LsnfKn_3M[u->$8,jE$
%7[R1p`Gg9-E=<6d9I#GI6Z7LH2-oTYm.lZuW"AYOo_f"\3!/8FTt-4E%"Xd[ZmI#0EWj%--SQ'e$ZlXj^e:SM;`C?L0QL1GPUdQ:
%4r=o[65M_<Pg;oo338d469SLl+k&<2#!Ya1>dlZXG'?!6LVb,hJ1DL4KrhYaG.JZalUQM-Ri?9/=*M;*'PgClm@e?mi$9f,KT\[c
%G$9UjT^-C]=-.lbSm]lFr?2F[77"YZKkh2[6))^nAQkqhh[r@dLife.3Z$$kMF1[qoV`"n+7lhINr#-L4V.=@;!Jt'a-!FGTF`3#
%:$STBTV-+,Bm<`&h4Omu6[%fVqueE3pg<d8'B9r#E5o\da[_=cbIXl+c0]KXrL4;'-@.#p5Qa\>ErsWj\fS^2kQDXO=C%_R4WkbO
%4l[@gHDYltKU"U_lu4u'B/RLC'-?]qef7q+#'7YP(?VikS)S5mDZ1d6+f<,q0*W!DH:2pF3nt#ul_+'sf.brO?_Ggp$(theD6opF
%Ajg]l69Z^R*O)%_i@'?]JiaA8DNTV-61-T;:og6bco[!N>Z_SD`.Snf)QCdrO;gHB!=:<[.3f'Ia;dk/X=c>>#Zl3m@$KDe0^&UL
%an:'@*(%bQ+tG+MA0VtfY?#&*DeUOp0Z&F6<B;eu_(R%QjWU`-d%`$,b>KOd`lV-6hnhN=alRKuQ5$Yn>#HQUdReJ(C.`hfUs:)&
%^`UcIba!91]7NanNgWHZPJX6=95*V%\fHNc5_@)2a5s`\g&jo(p'-)qJGu5c1k8[OhHaD'-R2DJMMhmjD%()D^5O^)nK&=3*5Mnn
%</>$U1j)hj":Q"Ld@Z+pQEPp[Ef^:/&K1udpt/j:Ag71%/eg936gVZo&STCQI"$bJW6YfI_T4jFXkF.!g_T%/OH9Sd-@/G>+QA!r
%"?3W*$;m0W*C">/&0Fr;_a3on-tSR:!QqKq01&e>RZ1gcooVmZ"3a>_TgADF71q4=d1Dk,m"+D^k+4+f/K,4g^JQW#r@jn`[#@97
%,5`.rT^0rBaU+0ijP)L\`VWK5,(P`ii,KMKq,2>"Ga;2MNX3aZC5FW\+d$o/*9m[HXuJ%t(6q>VV/k6^d;5Kq>_TU'(,G7i]p5+a
%iq+I!.&;jp-n!AMMEH;O;fXMC2KDHq3jBAin*!IW#EdZu$CgMnE1WhAXb8n0Pu2OK!Dt%N_C5]KEX2Q4O;-0R!FJ@^HR+\&ErA/G
%NAd:NU.ACL6cK=@_3!h8:>cJi6>HrQ+6dNE'15Cg,Z2>)VhM"a,Egg0Ks@&[,E1E07maQg'T",Zj&U$:'HA#fb34(Z"`mNS&h.sc
%"+C@e!<c-]X"W[X7p9/ZCF`@d04a1^`'m^[$&#5`aUj$cX<?jWPElg$I^>%$CBjmqkh3Q2MX*JXV!.[jV?KI5mjaQ5R^m^beTP7i
%ZsBsDa!bhG#e8="1)GlNZ;1P(%c$?'>d-!"K9)`Z',!_fTBDo8cSlUjFN5N3L-d(3KfI&HgDbj-`#M;-%d/uIVFl%g368a"U6&sL
%1mWdf#@F*g40=b3N9.Z$Juc&?\T#a:%ZkqLP/amQfC@Znd?oqJoI7Qp+DZZ"32.orp^Zk/r-ed);Vr(?5e8^)..BJL-qeC^Uo@]l
%`9*rCMihm&:[%]r(D;i)Ke/BgCbE.nGXq<-Xf^tSo#Q5sE`LcCk!QbD(*hT?j$tQ.[M!GedPh4="PPGi/mk_8g;lU,66[i:mUk5F
%FPAk[:N0/DcW\aZ$\(heF_nm58d$21?j\MEXr0fQPUXX0Tt*5'-9Z89(#"q;4sCP[;)uW`<2`_dmbbEH?tGQWZpu6]V$9,IJ7XE!
%E(oeV;\QBnT&lBg^Sctl5Z=>'F-hosKOPk,q+=?c<.-%'b`s420Q#PU#-6u=a\k3dTV-/VVDDRGp7\$o_>,C!ot+Bf$"Y`kk\b2A
%8Or$5HE"W]K+tn7M[4DYm@,X8$9G=DS[\*5@-scXP]BX:,gRBpaAjkU22'78n?/([-?DqtG1a6sl]u$jBJZH"fI#=hPT%W<f$C)N
%_\>d<;H+e.e@1]rD?bj:R;A_gl`Nr,2l?NZjU<4l!]NMp&`+$cY!_F2&8;4$$+I;C?lR1\.ecDRXceEdO-:dO#7=i?8V;"I.]7sa
%H!MCT*%=S5Z3/\sgNkVK.,-;eP*mCtpHfcuWq`/@;o7*;\PT,RchS)^O9OCk!-a`FX\!n)PZGl0AZh4&h]dM9VH#QJEOO(FPgn=F
%/GT76Z4cn!bY&m7,o<dj#Jr5Y#$];Lm7>^tkhDP[;6eJbMFtqhGYmWt=@c?,XbXTuKt3BaQoI>TAL8slla0O]Qaf<Ikt3kji]r9]
%Nha40Fk-kc0sE7J6>,Z<q)47gDH5f$27N^\Jm_O'h-IlT2MVZ_I"-r><Q0,5OK>Z`SJ86HZ/]j;+%jsdRKProh;OF?)I1[#XQU%O
%k^R-dNZ,UFmYst+:E+H[\%74=6No)m'pguI`J"@$D`a&"q"/De38pH?_@NHN\BG0g%D<pTJ`(Q&haKs&-opfCPqJ?+J!<CS"%H`3
%TG82S#l*g_TV[Ds!%D/)np!%1asOTQ3/Xf:BrlB;X@0e=k&N0P$467D<1m4-\NS_82Z<CXh$^f\+'m7o5_5d)FaWu2BM-(SA9EUO
%*kKcT)%qro9L4V>cf9jOO?(IY854ZG!u>F[NWNATX@\NWN!.r8L[0Rh;W!m1RN:KL:6>[3[mk<\#skM/*:q#YJOXK%\obP!(mc)[
%j4oF1=*V97U$72K=F58]*aILR7XE>.9p?ErO41[N6V'X=F%(q\9l(47j]Y.&.Z)ZFc\=/R4J#;.#\f^^/rMQa*,r0O4*.((@%!5f
%3uE2d'F6IX2IFdbX9`$G7YR^YY*<l/)at5XdMJ!MLmQGgEINO1Cg0t8Ofbj(9cd)S3@XCZo?<[>I./sJ*CA@A/\VDILUfus+;e$F
%1h=fF2tZ?&4t:521.nRp2FD$>=QgKDV>D2&(0iX!>GcZbI>S;*'_J[(A5F*5ZkK63)[U>%S\sV9-D#?>FpjBQ173BS_]:4V8hR[<
%L,+oO5L:9Sg6c>=p=I]!MmS_fR2sc.(807Z8IAa>kOp`6a68Ts=7QfLTAP5foWp]@"a-cbfd>pL5e"sVLPP"1)`O:7e)I9A:*O0/
%^kA+lJm#b]?6hFJd%&B"!UmDCSb*1gOhS.q5H&J&LZ]'liAk>I@G#LMis*q"[m"=:,JJ%R8%+gW%ppU?5i1\Y(IkEe+CjR=*Vp,s
%Ng+A<Et$8oN8a)B=&WL=fgn@qGm:cOADXm?E>KSD&=S"19h$R*o$n?,goita5!R0VkIqf:atOM8cXcj9a1HenXen2^8BD/cE2)a`
%c:'_!JM58bJ$tLQXhPoamLW""P-G+'Kl&CS[hLe]6qu&/.<'nDJY91[3:Li3/-?<^'ppE*;*$'3/-J8kf4bnTRHRP(]bFd$'Ks5M
%;SQoJ0,Y&fb@t'3Rd6[:CQUWpobP"!YSU,Wa?nRkV:e6,5\KeemhcSmiB%05`UaflASOLpZItjX8u%KuYGM,9O>1d`glOniHD+ha
%,?R?S:[2"?i0"V]m`bThIN8]O&&.J"KFtN^m1A1o=r*S1qLoE(gBA`^JqAYm)TDcG:0cd>EnJh)5^b/;gG/5\"Y]ZbLpQq+G]AHJ
%g!Ml-Fcft-TcKo1Ct/4pQN2-$S,bqB]L#4XlP@DmaqRR;6DbX:JYGLYh;qid;!"4!FV46q'.-7Y$:MCHBSE!a(@qC9KbHFSOQ!`4
%jLVL>Ru#LZFVN_<i9k7OR^!%KLqC<eHXRB9:ClbT[VrJBB[G*d-/A*uOBa+j[WKf"l+RDT0<+lRXk5DJ!8JUWQQ5K&6-sPE3#(DE
%\U^m=_A^4Z&a&IeQLodufg,!6^WbZB)<^D3&AQEk6]S?s!mpA8]4;Xc"[@Al(j$"'lR!:(8(f_K+Dg:dI2A%K>h4%K\[)DBiU`lR
%o)]H:UF97IF1dNlRUGU1G'+AZie93MLVji6Q>t[his0S7SJ0cq6#cmoWrK91Ir!R[l*g6"H\)/`g_<<+;0"HO\&5$l:kR\Y(2BOI
%Yt8e)!bIYL<DoTAhs^/qkpuA[ObhYamP8Cg^>.Q"%eDBoQnrgWc^1@OPolHGk8q;RPmm.04T7gC]?F"-Yb,B_Y(9tTZrEu'PDk,Z
%P"[KXm;nM-qKU+4lXHs-K'j4MCgaGWr:k>FLQZ_'aQ*[<:0Ilm34fgS^'^8'&8&)l=tA(LJLk7#s(T'J32_]"<ZC^!CH:G^JfS6$
%*qjYK4*^l5;tp+!p8[:SQAB`0)0ebfm?#7A%IQ/;U.]9tE3LP@`p*Htdu:mYmdF"!@Xn<$<r>;C=]`;>)CX^c_>&ss2LTU64:iJ+
%Cnl[<6rI./.$p5FC/l^,;8D:,JHP!";l3$C$ShDP4Q)$5#p?k^iI%4@XJ%Vk*j88F!2oT:eF<96;I@Sq[Eo0q!ELu[*!"^dL\Eme
%C/1n5c;Mp2EJ:0l`9.?M#+";Sbb?GC46c>s#d)1V;eW9f;j$(YY*/[W,'=p^O?)/2M7<J0J:HOY:gR:#YU@4Y0)5P_;biE3*#8[\
%?rtCOfR6TJ>'g+E*e'F!iR5]Tb%kk809N-#6'5G"+s0Np]N?]3e$[1KQ06*aOP*esg;/([Xp2sq$&(@8)fT'hX-S.1=d^Ar)49R#
%$W4Dcf*DS=i#9Cl8ne[M5:)]&8./q=AA&PU&"#QY\SF9+0G'hU7$/;MjXWlr=roFBHI)0FO<lu4Z1I^mrBVhtnad^,!=,emV2Zk^
%27^?3f*5*[hBLO-J-Bnej`56WC&uX8lhc"W[+DoKL^u>=od#&i9E+3OPkkCI@A:2d-f&2X=.!=!+V/UUp1,CG781K2[&Lg-:VSRk
%ruZei.+&JZ=AZ5n(3d_k/2?hl&P\[)b2s9F%q/lTYj9*M`7dPi\?:&dA;$"OOP>K5NZtdk1X+;F\#qEXgVY*XA!9dWjE$]N6\.FK
%DW4D!@.9lpq/CNR0'O*[hVJ(\i?YW/Er5o4j^I^6Im.'k1O3^"/ui=pUrjV>b;hFD0*P('CQU_%dlRslXqXJ"(;<.MCV/^\NhKR:
%JIidN7:2\bj7gC,iT)3)3`4&t4uVN7_D?8uB8fD1iDPk_ROT]ojN8;UIc\Y"9OP`<:2p+p>"SO=^)oANRsLa)Mpek!Qg=/O$T(VE
%GjE>sq`"X&qj5j8c"Hi7o:7pUc>ap0aS)U/15HaFI\0I;r(HUN.ZWs%NWp2NT#ZfmbqQ=>.6J=;V#23s&iI'Wo$KW_8^!N88m.#t
%JZRH5kK%l3I*GAa@8s,C$@7]=IQ'7tZ"[34EL@,A1KT/.a)_j5*.g=&2XGRN'98JTFBD"*/BYi>XO9_5"4Bu*o"_1%%U]2Zg*Fpl
%%NZO/4)KX/6'_#6!r?2^%?fG@"[DVD_$%Z>c/g^pptQ[/QqBQ-o/%;LY=<B!$4C2Q(@soKb9pPt`Oh1=2U/QXc,)4<;SJ.,picG]
%2d8&$OhsI5C]6$tH!e;O@[2!`:duXJVY5YD^rM+e(it:kh=sa6.ehn.+Wf$H]Chaq`,n]-+sY&o_:#fHTD?4$K@F.2G@&Mc'$iZ8
%4o7u5;/dKO-+AdT.+nY$g&R[:HMS8pb/<&rU!*Ms=FS$4jr(4SWI219Q+6X-%e8BH6SRWg^g6^PV_.8aVb4q!S/5fNXE<Ap(2`]s
%4!*;l\Nk;T0_u=qf.kffVWE")g-4*MFP>:_q4S_M5$ZOoKRgb/A;^?LOo]k"KHU:47:N$SAS(ee;8+^*5CoRO6sn4=YoDV]=FO%o
%P%m.a%sFA60gUur,g\:6+=!0;h>(@5@9]F#C#cqm9$'62"h.>$#keoen!od*bMm+]j^%L4J#j2@'-_N.6_Jhf1SJdD!VTEKD):O<
%+s.o*fSTEt=#GguHj`45._*`L;:K'OLLeK8jhE!@nYT?JF?+Q3NGsi]G`IVk_3De&YAjMG03X6NEt*)TXFXcCUoF6k@M"T@j7Rmq
%"+RfLrij1?!*!4+/'mC=IA=;/AYECT,1k6EMo_0JDcBfNXf_"Q<!EtlcM!!+fJK/=I(b))=0;b7Gk3oS=`/bM@#sKl'.Z9$`.`En
%Lp!Z=HGRYc[u?_4CUTdBRF^Ti<aYs"DHM.t"ZO*?N3"66d1*1=nfCBVgO%_AkF8=qXp/Hi[B%S"kFcH`m(cdEA&6d`SK\%FlQt/6
%rm?b%,D<QZa8gCh#XP]3Vg1H.[tXFugMaFUT:ddXL>RSFrgX3qqi"PrjKaMrWkQN(cMq^saEe@.8<QWc]#B71?,^sai=Udc6)b@:
%6e:',)l8`JCk1Ug`ZG;'&SYWbqc)<d-uB.`B8iWV^(8(Bo!]#@<8-BSX#C%+7'T$@/](W"5=/b%Gm/7)"9?OD92n7hF\G<J>#9JJ
%$d'L&4gl`p[]Puo!9csM%FLMTpq(NmU0:As9@N::MlF,W72FOOLd!'[6sL)GHa=(Uq'>%[mneW`BtE7agARQVgKf_I>Q4lJpRQpA
%>/Os-l?DlI^*@uG7M.nR5)bQS::E"@=SsB:+LECr581b=S=BDUq[/514(Nhr$D\#j@u@J<>S^E+7sIWJYB"8>,,D?a6Zs6T$q2\[
%jT3>Hp`N6J.bmB3M,V&cUnq+p>Qd1%6T8pB-sZXd:&0j4H$<=EL<XAg),\u&.+4OUGh)$!UI&!CQXdL;_Dc@j/@@kL]_P?2(C"!!
%0kcfZ#G)bMRASGRPdq24k!U?c4).A[cq`,>ogahona%^?$BaDPqi9qVO[ZRV&>h%u$T*ETmn7n,]RXQBG_gLB0HrsM)O=)U@]<_k
%j3.9b4aP4mI7u0A0O4dh&sp6<,;#:I^:W8-YroZ&Mh]8ZOa-*Q.hoKh3Qq`^b7[dab-Z]Lr#BSPp_.o_2i)bR*?>o_hS876%H0-[
%Lc:n=VJ1UHD%gIdXqY9Zc8r+.,\In(RlV3$5fpt?gT)=7.@mE<Q)ofE3MfmALCge],^d3jC#02aia03oE8Y=DZ1[R*^)5;1`H,#@
%r&EO)S+&F"TZRRa<t,HGYk\E=5K/P,E:AG";pWc?.YGga7#M*E"sK(uR^;YM?o1&J1cXcb\<qm"8"I1(>RZk16-T9^OYEbe#mHS3
%cO$;@',(/lKMTr[@`t/R)Kj(F4=aT!PG2]GN(7irCLN+U`L/\!VD^I$.-GJg8u"'j`;S8ueIacFA61F4*rpB[3EW3>.IX1l`>#Zg
%68,P&oTgoS;E+"cX&l[Gd](81!5.=>)Kq:j\4PC_Bkj9uFJrD"M0P=bLDCT92EotOc8gd-+BacXr_ZubM*_-p<:pS/iSE[p0TT7`
%_aM'?5fM2Z=5lLQh.=>62t6]279gC,=#h*I9*l$_R@[@d5^O*!`CBoN=)Z9iT?6('.A$<b+>6es`C)Cp.QQODk%?=p<i&:G5C5!W
%6Z@N%15J>2cP'NRe5?j"T31(rek'&4a-.@6kp@RbX@MFXME$#QNfX&hr*FX&9<a^(A&u3J?<T)8UN9Hi^(k)k>,VNK&(mp.9A$pX
%C&usHVr(!eb/3NII6BS8*s@."`0P4WMtABdbhm>7^KCN_=j8#!70K2Y)pR6._Z75Da67u8_e>:Q*dN?9])>`?&6`TNgfQ$V1.V._
%&#CC3U,t!J$mNYS2a?<&Dq2P$nI:6BWWp"B:aS;@hsme8G7<0Nci<#AEl('XXeLc^'>a^?&9=gW32.bM&hej&pT;E:-X(D3`ob#4
%=+K0R%?of1JDlD'nIH"^4kYF\.RLg)U&BZVjnm?CqW]O@BpmO`8_L@0H,5t2iEn_G0>'(p]\8hYJ:o<Wm]Iq_;)+G$#:>CPmos'(
%cr<t_Q$bqFDm=r,8ZlTr^.17\">?IPqq@fu=OYb#Z[T[,m$TLTnDbek(TI'Bf!er,Y)nO5R)iGb*^%TXH<k;(Fk0n&5-OCHB*[Wd
%YWl&kL#Kuq+ur/U](#I>i`tR4V](OIFgCde5bNsHc?6i#2SRH>eA&BE:]g^e=QV-,"-FRB";DhQnaP%_`DE]20.r&8;`u9oIT/GQ
%YF]P:U0U\9i@dAT(6js#0aj\$A\!:3Grp?N]I$X6]TtKrO*+eP4CP=WTcT"+%Lp(eLQgUWgo&d:O1dYNT&sI+VrITS#5&&B@h>Do
%*ZsDWDOr7IQr?h1#hNlbPOKua^Q!a7o9B0,<'!528\,7&4Romq25B4jYTEP\+Y*&c&CsPA&2DY>Y<T??1'pQQ(iG]kJ.AG%0[icb
%?RAkplMgd_5h;.c[ZEfcO,KIY*4hW.-n_3#6"2_/n0VI7X^Wc:O>d1H'eP9hnbm7#@LR3+14T#Sn!UC3"Q#AI^ogE3KW@tU+>0K!
%M5SYJZc]bfHNh3ojU`b$TEXY)%,POJr5C)ab-t5i_o#idM\[T^\5p;XBi6X<,cA6-5E&J&6VJd\PCikLeI.93P\q%N3a$:JINbS7
%fa2YZ0X],R.oIlR(uJ&`jK07UDR%@Emob-kkQ(-8eVq)YY1K[X.smAAB;/ZZ"!Hi2P^f8&@+s>UFQsTFTe^(I..9duF&Hk>hW*dN
%H]I>gJ!s`dbH63P+eS'PHLk=Gf^mCM:3eocO7KK%Rr,V\:*^1MA-dVpX[+p,lHPIurg%CGNN#JK';f2;_:=A$cTe6CYl#q6'1rLZ
%Mg!Si8ac$IA,H]Mi_8Kr<;QgjJ'/0+<HqW))uo72^daplZ_2cCE=I2&T.cl1W^0!nne2DncN6[OjuM.UZH(l%EY*\n=TDZU^Z,M<
%20M,D3KbpTSUq50*@`#(e5,[?D)7C*NNVR2_gFU/R3Z(9q!5&YcsusH;]o]Pgrh;H/T0c(&<F]ZKC#t(&@j7-ekoYdq6H<S+M*!O
%VP]>9L1A4m#7kD/*d;`"(ceo>*ttnp*IjmQ;T44eL`\Ei:Z]AjY$t`I"i(`\os?58S2+tgWT\'a3fgft'VN7_imV6IE!b@`;hQ/X
%-rYmgRA7o[PMSsn:@:B?\Ch9C*A;[<9fRD'_c8!=:fckPQT]-I#bO]cD"TD*8d)CSH),",j>JqE9)8)A&=;D#*Pj%hJ$;A&gFMkJ
%M$ddM=i007;i7@PM44MClS1,,5DN*-6?5IWT4cMGKeogNrKB<s1C!e,8JF5*4;$26"<0ZMR8G6F\TA/E)/A;"3eHgt4926o?ZfEq
%iD%n*C*\pAh.iJ<P&b<Ej/fR[<O#Ch=SGKX*@9,:D.X^PpGRYP"!XVke*?/7J#N2CFH9M3QW!nh'c!;uh)+W.qjZ(W/#+$_)hO$Z
%<=aa+E!U@a7/gt)UV&f>ds2SFhB@`(ShVAs.5#XC\1[*JIbXWt--RG--WnnFCrE"b/V+C(4=p2up5/gfciD/=NuW3<fDQE'aF`ba
%?EsiQ4N/1&(M58kHYVRkQd1,mIK4i(oX2lqLY<4=^"k,c?J,q!d'WRc4`YnaEUDpg',-*jVk:\WW:N*hP(gWN\Ya/Fc=k_:[[emP
%rgmt:[XO7n5>l/2@!J38C$7Y#2O?TmMSuR`n_)R0+Z@\f1;VLpn&hu=m[16-Q&%=XpI@OMQ&1?T!`@:HR,\bi8U=69M*nq!+W(O,
%/bL65[tQ!Z&*\q#I";S,k;]T*@59V$>4V1jDVQRkJQS,^F$([p\jaqOFr<`;qg&Tkh3;HP.SN4IF;mZ_)+L)O@I!@ord6.V9`08n
%&p7+l.IhN?#&O5/I/8O7qZf@i24B1s32?_'>N'VYj\=UkD;Z`dT47980%fBE@s_D\%bPIV.5VMHO)3">Z[+(b&PtL>e&u%aUVIOi
%I,1+R"'d2B^X)5NR=#a2B&V.r/+pptVF:6uL\a/pElWI<H[=-l].03aK/InRBYCUr13Dr#---2^i<'-fRY$WEqE1.RHVS!5-,HJP
%#TX(fb^=b3?s47s(H]lY(joK8N?@XP[His:I9>N;0:q<#5Src#,f_^)6XD3irYCC_Q!EoU-XYeMqme3(2W5QngO7$Ym;ZZd'Kb#Y
%KqZ)0N?uH%9>.%An/NbW%@,M'+sON3EHS,Z<O`:Yo+]@*g8g.lgt>W/*H(Cc!Hj)7gJr.5V_E?BoD/G!;I2i7:!1NNbL*h9!&g#1
%m:[UE8q3kd9^<[O,[c,jLk[GA<MD!Un=Pf=/1s6l3A%8CF=r(r6="6K=1l6CXR4Ar8LlHjI3_I52T32on8mRZKkH2Im8G[]lqVUX
%+sOfUd)sRp<4O)1%b[",7<%a9W=8j8=f0)-Gu*L6@5^6k4ULJ+5[Zc\^gVgk9)CoZ"HS.=!(-aJrLBn_)Wq(=P5eIK,[eVk`*(s]
%PdM\r>r@@2_TG(VjN%UP'[)WBc?(*X%JWtTf/6<B+NnqdVl'F0'?"G-;b_iM]G1487mJSeE-EXdl;"i!h\=OCf*cB)8pC=^qWV$P
%60/\oM<]oW#lQ<S!2lVrD[#IIrSBJ"?;0t1!Q"r9kFA1fc34I2aWG:uXVF6<qTle5nG&F5=g4(mS+Z@is'i;.&%/I:/b"QQg*9,Y
%HcQqg&2uY;1q;jB^`6XtF995o\7NFE\#)W$at?Xo<*-tPAVDA=2g5u2O2MmF(=+m%W+s@Y4pX,*[fOmn5bu4/m(aEoad(2'$8F"B
%IZL:3370Sb/Mg^g*O,H:"9Z(8gl^Rj,MB`_$_0SLGXYCVYZ(\&8'3#^^5<0HS7*rmrZcg;##G^4J'6[YL,)`EfP<BS$$*&Uo\j!p
%F;3ho;i"eW&pD?&O1WQb%1L0@r6GjM6]0GBoJr.,7im\bDHs-h8ls./e9*dROGU[TK`"3Cg@C)?<Yd2T<DS?`h9RXmd].nY_spl`
%r2mZhlN5a$%8?@lQ.^qfiMc1,W]:\i2m<'5#D_#mjc0nqWYn/YI8J+?e^qfF2nqUPDk(TCkpb30/&B*B2n+M8TFEY!*4V3<Y,rr[
%.ZO68QKr[G9<O1>hg)9E&!#\jOY%lpJQi1omWbnCPCR<<ABGmEMT=BD5;tSLiF[ee(Y,WT?HSoBOkc(fk@#qG6#+tt18;X>8!V"A
%3,sQaFGAUWqE$-dke;VR$?al$<lrq`9QTmB)8+H/e/mN#[s6Z>)7WPITl@D"J)ZY!k^YolhB;6a$502,2,2$@o%ueNQbZ't";<%W
%9d31d^#WDj!VE/'O<<_c!-6;jTnTD+Qh='sIHL6`&&c\j]Uon^O*>ZDaJmJ.+k&\7*4;AAiKd78)B:$Wn"foL(n[A<3Ei9&*?<GB
%\Oa;j'4[ogdLj`AAW\bFB*8!RD#Vji\)js1O5e9"nuYt$`\ZtYXIK5Xq=E7-no^`I71"G),8j!742m+F#[UV3G\>5LS=j8od?@)A
%PA,1C!b(r,N'!41ED94r**^3o8(kWB]bZ<h6hu2q[\[H#TjiNDq;)MsQ=m^umG^-68fpC.h7]Qfb=J0`n&q]U1&urHlJq/L0YNg(
%s6VP,M!G%;.i`Da7*E,'a`erG_7T6N_mW=Ip.gN4V:'4L!Y/9i<>ELJAu;XX4FO-"S_-g&"n7D]O>0*ToXRS<b0Ce'bdSH;J\]i:
%En;0\"%122I1CJPe2%.C<e^.-I!fb7Gam,03]@OTNX'rdcN_9QE2@#klo[!b#V)H`CU8t_$M(O-2iA:Z"#o:N!gdZs0lH+pYt$+b
%qQ;^[^[q1PC@P&&',-m7S*`pucM7t*PN:!9PIGeO>$@+2;)@rNi;%17kE-Ns?)aZiOI)]eAbMR-!`7u7m`:dSodHq]DYrc`=c0-/
%i^r$o*S9boS[!"npBr8B%-IXlB?)3JTL%;TG6LI8I)@rV+i8?iQu7`h7qV%E?![?-dh9f\;?1t!O,"bg[E)WsGBbK_LJ`Jn8TEY\
%FXWWuJ?]hJkL:s,99X,;lusiJ#W?N!3k9PtKlY\Y\)-f^'Q#p!h@thk,mG>u<<B\9R.^Zu2e5bafTS5(@$]s+1no&./+''G,+oe`
%d&t5;1GKWm*mGrWk5nqr!h,Na/kJ]6-$X4N6k8j;l^t-\m=I3ro1bb$*f1;2M[<=OMC\3#H=5SP^Zf"=BNe1$qd6+-XWqbt`=;:/
%YI;qB(Cs`nEnq=JXB=nZ:n0[)3<SnD8A1bP]%W'.56ujW-$o!rTYE?i:,D"UNQPhBT_]Me7OI.)VB3eHG2Z_"+V_,-U8E:<]jWg4
%T3d8-K*B`!X9=a^N1;sk3lM#ZK5="j1;,%PF7Y`CTD_>(B6&@6O8G@.-UHVli!?geS2]fjcoWC-[rdgf.UU&sm&%Dogeu8CJA4;?
%o[P%q<R6'VV^J&ZI5M^dj>C+BoCI76CFH>a7c-+0F0T'ZKGD\@PbALLSP;qLm4,rRHU<f0=k,;e>GXg_XW20#Z<6C]T(Li1kB0^,
%^8fAKe$Qm<R!0]m]=I2e/#bPpg54QNl8&m"m7%]&N@a<tDob]dGMCOhWui]CHCRD?R#3HUgJFG>"P+V"`7ZCIWcOOr]J_5EpU820
%(]5L\MOCn9!..ih:bG!073V=F(*-B#-Do3$JK+XmNSs'-(?70*@(P^Z@*WmX;3uORDu`^O^N'lY5Vij!40UI=gm[a?<"he<bnj$*
%gst8?=^!9%%!J;785:K;_4dk5bRYDhD<hUrFhNa<.7.5lFiKJFlB01$"6;gaLi*bZl"Mbo^M9:DN\>1K+'Kl)U^H<M2sp@n'0_Z7
%n"=I?2=$I,&.e]'BZbYe#ZE/<WnC`U[j4r:-#'m0^iLEfiaBd-)l),_2#`^'4424kg_0of;mP6E=Zs=h:/5\p>$CC&QUa'+bB8sV
%]WLkc6sk0.aWEsF^i/kF6\hSnCUtdhM:RdD7=Nm^H:f3e73.ESe^km8CsOQGcU:$a**aC/S"Ngg't6LR%St^.X,s"Zm[[Iq2?K?6
%!eLA+3B/b\.jgJihRk+AD1/]7hY28%Hcg`6>BQ9VK]DWVNMqGU%5U=6L4l+n+7aF,D0RY'S8_Cu';gau3!Qu1&QE::4\eFGhuL2I
%>B%C/V=9Y-%uWVsQTtRS]HbS9DK%]=3U?@67LAhe2L?,Dgl),oF"m&IY[7`6>Q7+B7<N:\)`8%L:FGdAA8_C2IQM`K^<3:c!20?u
%5'W77e.B`pP@^[+7j>;MBDW%pXR#L;bHR.GJf;Z7_/rH-7[qJKqhs4kU%"t_W7lf8RqZeq;ihmPeS$1/"=50bmFd<:jl)&oBB?-G
%,e=;(B$k7B,Ag[Va+I;cOh/g4+['@KMLX6V8;&cdIAflLi1@kZ;bL&P(WGd/9^nX=^?RqGpdd!0X#./L*mi[``?toE?bC4GEmWAR
%>t>DKDk*lc_sX_TZ?tqU-*cg2TPO$W1!qc8[(7d8IEtgSl8I]Qi:-tu):PA;+dq4VW@D%fal]K)FS[5./mVm.4D*PB$DsWT`sL-8
%<L*1>I3(q\<OK/Ap\BDbcNo<8ohpoG%W0`@qFa94jgq*ZSP??]TV=HZQTD17#/-Y<"g[V-.Jm)%/_,`11>=3N<KOf\%_>dRXHKYd
%Nn3*NfaGOQ[b[==$2I-rSm!]*D7MR+:"<'o<"_!I5EJ/jpR(djnC4Eo(4MV8f44tq+is2tf*kj0k1@'D>s5eGALS[g.`Q0;>.4#m
%X`4LM.FLPJ(7YO9=dVIBThopcl,]fNPXF2Ze"80dJSFHpe%Y@]'l/K>J"DdjWZ7/e$CV3qgo,g20<&sg&AhBMQt\I5NE+U(0/!4n
%Q[eLC^Qts]%fVCWg1OBF)IdtgDS,hVgMVb")s^SIk-S:($-Re47<,7"r?cn+YQ6PX_?M@!?16ON0#atqeYQ)TF9J_rR5.M8I50YT
%XKDa'DQb.QlWl>P&F(n[iXpa9Q:*f+rQ]8VHJA\K^IG'\\72@0,.X_a+aaLd>mlQqW&tp'&[G2=`@-g(/eHjnY5$l_>)hn0jf\.&
%+TFe,GO#\1apC0QDgkJMV!k"ld>6tph;3M/GicNb#338NeD=<2'],)l2[M^G26kGUek89("Cpk>'dR]6c[X\*-nFkFoS"c;EmUcr
%-[)AN>-a:;"&%*eMhPG:8:CQ`-30E510uXk0o\Rn?km$;0"V<p73oBNhAK1$Iq67nN59UY,>h&^ZW=RN&*Fte"dFFPHdGQ.M%nA7
%Bomi'e,2kS,\Uqrj0:`m:ZsC;Pgh2e7)9SfhBg)Ncd,4n/`G57+i;k^6Xktm3uAI6,3)n]+83RK**b$g4YFtM#HFn/k]3]Uc/Z,H
%gVTcBYDJDjVC<qbmk/J-ir]k5A.g+:2q:C0m;_\'(t96p9qL4R-[QmY`NtXCV/LlNr6B>/HJh\8&^Um:Z,.&Ag25%2B)":;Cn!Dm
%6tjrV5B.\6BX?.2PRbR@;&j:6[:dUb[jc'8!8L+''SNo8r4'!posUZ5SsmclKH+@Z3G(m<?2m*<%>Kag>&ES3J6:@[<tHK&,((Ah
%1dlSG3?f+(0BU5,be.PGFcRD!j<;9g\W\6Z.9..G,<c3%-M65s+pB.+Pq@#U6R8`^)U%mL'?\,j<p59RpoU^'IW0JujNb!d:J/#j
%PZO@3,@mQ7NuXio=:WkAI`mnaA>-M<5D/fl('h1"on,Lf"6?)!lNGP!c?(lh35M3i(&+-4I((m=1;6hX-Df8N/4LOuU;%cb2E%g8
%9popB-"2Lg7CM;2LA4h6N3Hl[;*,A?k//b8&@3ck#DAjEId6[b(A^4dTi,fWQ,dNi5%cN@NFD8VMu"tq"L%9iM';Fd!5^S`Zr#sV
%U;N.EpTV6WIAi!k]db9)E,[4U=3;.P"qsP^-#"`L#bC8P;='rp$:-G>g*6BL&dH=Zi%^tHkq]'s`f.,0ouiDcUa)+8%*aL9o#^[T
%Ol7d!->rS&c9rN/9/u<&gX]_jnumE[2)r[e&I%`.Um*?gF6lEl\JY_$A[XuXj2ZeZM9";'fUObc.b?k$(N/tZhDI/@<adWlr4Q]D
%gL+FRaUo_(ZX)`$13+Usd`Cc<d]h[>Ih&N&M/M`g1$md^r@d*-eQan4'3T^\b80AT:B@6r=TYC+Q^M2uh$M-5@[F0l]!jG^Sj7F:
%HYPHYRp8?IeBW+"GO_RQ#W"B[$P[k5rQ3rKT:#K^MuEE</Tej1"%O7!0-:,5^Aoe9Uo'%c2G\MhI.%puPh$(hQ452j_I:O1/8&2=
%f,3Yl;DgeGf'`!X+!:4-idmSCfT[76p+2dA'=_[lOC45X6M(G\_EDu)d8."Y3V?;K*HCgpm;;II-PcYUC5D-,moHZ5OPro;?LYZ'
%HZf6?"At;uM?)oj]WM7o)d%s8O?Ra71O;Jge^iN2Rn>/O^s?r<ei(F<:FDU(?`/"Ikm10r#LbA4JGb`t&PJJ?FJY2f$(6dQ?);&L
%*_3mtX`O2/RKkLc8T:``9t'[T;.lS>aN@_\YE#inM`AZIHNiEEg3b*s!,QmCF^"p`I+&CRR-3*Pmr%P:VC24Cm"eH#\MX2og/GMA
%LQjK:SR^1\0Bs\R53W)R5b;[G:JATQ(5P8CLF0[o9jp3KP;L,lWGRgaX)T+H0]f_C<tKE7dA7gC=k2AOWig(fA2SR$(5Wp;UL:lt
%71Q,]X7U46`?iHX\/r=pIoT#3URjg&@*'7dRk1O(&-AS^Ct)P0D4/oto%JW?@":Z<"8faQ<eu-Zh1n5(V4]b[9ei[W5I,uK0Bu#O
%Ha\fZ%I3>Q&QK"=B+g9DD-dQUc1OIQl6_Fd:&`qe6,k($*+k^S;1JQ1g(S/PhJ'W4qbNJqeVR\l4!t#fS(6]3$3SuC$bO*#ig5G=
%#dSY)Es80CJ?%F$E\6_?cI^&3jBDB^o24o-=;W(*&++a;O%CDsia32s6NqZKA)2I@KO-3RPZF[<k-suq%k`ZkINf*Kp.e^=(UV]S
%l[CsY4'TZmcN'Fip<h`4bGFC[]Y??Q]L.oXn)>cm&CIu$$YIS*0h/9/MaP;l!Vg#Y67hU1\-/<.V^(Sjq7P$F4%t'KRtOCg^i`([
%F6aQ\:3W5%Y/Jlh!f1$MqVL+igor;FMaL^rP\59PMlq9F([gXiO6R3]C9F<Jm-,_[N9SWR@=(#[4g]pL8l_e8.+8>E>:,@ojT$#.
%G?!F<@[S(AI.C+E>=p,(0na2u8#4Ft;u/YX$8r!<ZA8(4*/X1Y>Y5pj'BDmtCjNPXSM]r2#0r+%ZEKHPCGdoh[MS5J,/'iqQUX'J
%XdBA6Z,eQFE[OZ?9V@ghnCo!cDUPYO501G3X*0>m*O=-B\!]Pim1TaQE(BVI1Stgh:o&+HhZdLfXs90#"o&n(VC1?KV$M"+7c]lZ
%@;-'q\\gZ#Q@.?pWnUJ;o:2>NG<-:c^Bjfd9tJc<]"^SlW*s?rLCQZU&L78jm_ED_k^T/3gu?&#n$DqmPjF?H)'rb2cH31a=N`I]
%P8@7'eW41s\m9q32h&ge/'RNocj-sr]lKs#U5ArL37@uG$fjZT47#sLSua8OT5=[jFC$WM#P!4AMZ,0B"B/kDekZY88HO7b<-L(M
%.8Ajc3H+eQNYiNSlJ!(mG?K6X2JB1i=0DQ(ZD+5=I$MZ75*-DQ(=THpaIMH;2/>=@DCdf(;DW%9R8gk^Y`,/S#qW&TbsD%*FTn-I
%.Po-r2Nk]18R[Jl#Jt:pYPc:MW_bkEM<.=Yd,3GU!\J+I7;0n9_4]IQe9+^[G<3'#`=,$u(@01+(G`oC>/`!T?!@=="qVKb2WclF
%EDL?+<*(PJ%6ACWgc?i-ioFCY]f6kea2H[1nTFCmisVG=bBWKcN8meA('k\4&CUAgb$k%a;qN_"@ZOBI7a%d'#uea)NYM2)/>s]]
%M-urWqmqVPZdpA<LR=0K]mA4>Sk@R=dP._LF8X]bB:JsfN1DPP7gJOD6L'UkbI:1ZDP]9WB2Oe;$CRUo/,5.fIaR++b%g,^p/q[B
%"*+LN;H0@6"]I=+?6g\8D$B04+j1_ZrebMF`$F=*!,q\7#4QUWRBZYqA/-eUftbY^:85c@>TT"5:;?e-S)HN0S],r_(P%@'5d3Jf
%;uZ"&;(r8Im-Al1kgK"tXQFB<N=lB3B1U?87qb%Xl"I&B.C(f[(#'dP#LYOE")A5n;/#KB1f`4c(i\WDTUW<$_.coHjBWk:aUsV-
%,HTRBC=^mT.MeGU1Ce7B%jeot8h[ZI'tV,D;W*eI<<B;pUn$tk9Jkbd/jfm?OT[jEWraqCpb`lAk,W13Sba)-\cMqQW(;g+,F&d^
%PuHXbE6:aTW:/br`]Ku.75+/F#\\_bUD-FA\dL>`@Web2*I&rO6lAYL^'?Kj)W3GKa=]j2BG<q'V"CusV3_\2Cg.OU;l0r<+WV`0
%aJ:8pfQ6K0IW"KRf6hb1R2k8n`C@h?A:<4mm^=YgO#N9TDP]J[X[1TKat`9-0\m&+052P2/l%NN\MP5A>"M5Id2ZM[?A@)Wr`LdZ
%8SPd/Hp,[?j.2ua1ei$Q;(rm@X6pWH[aqg;@d>8tXXTNR>Kr>rHRatt95?u=[8WYW/;D+n.&M16!ffG17t:&?oA/fb]-F.p7HWBO
%!hC[fg.!_58>?WAos-!O?\!N+oV3*Ud06[X",5OGoAEQ`CaJ7$^+t-_TA2UTIV+e.CM!CM&+@X4YfgeqMnBFD[Rfr;2YTsn11cpW
%\k/R,MLkG^Gd/^'m7tW,_G9iJc(K6l[g&M$[Cmfcl_@%KL?AfOo"Q$A)FL?Wmm=B7+Q1!^d5K]W.7g[Nc'mNi$.@NdBDSiY@]La?
%o@tM17,.H-3N#s3Sa$!Q4kEae]j"mFK^#'?GN4h,Ifr"/jIA9_h))7%O[A(Q*K$;Mp?<qH&N+Ca?S['q$s:;'`>Z,i?a37u[tq+j
%2R(6P,0-9k40UJ\R(0h*I%"2/F$f-b4N/`r0'AJ0/TSbk_F_(2I#poZ>A4CPBg<:@ecki\krYJg`sbp6QkQN'4=-l'^?eQXgWL[F
%0LXWk3/2s`QEs<#h'6F:ZtfUm?ht(ukdFQ=f7g`sX2=`&14M##IMB/d,`7O3E7W!m]ILF%39UE'$eBjk,t2*oIjF?5Qk\<`bY@Jo
%9:"CY=aoW=U,p9-r"P4![Ul8*U)S3X1bs_H+!hr7D>7j"&ka;OossEGGOtr8"2X5ues[``Mo$$&C6``k6h#tF*:bhd(k%1J7DgHm
%`J*>^o7`AkC$I`?R3)Go'ml$;[W["4'HS50><KGTCgeMrrJN,<K0^\q800VJBn(?Gk<XkYeXthj`7*KSS%<-M8k*Rgm/i5rNkCe@
%gjI9%]m<B\(uIWPmOO,g2Q<!P"37oS'4?9fft?]`I)!D;1!+%?[S4qpVI"f<!6!9n,NZRZ]'Q$EmC*c?G+-ej^9[Dn\$J8T0F5'$
%=gsU3Y/4@Z[4<s366DljO-2R$"lMT6*rbt_rU&3U+Jr04W=7:ilVt,D6aZ6-TQj28T*Z0?@@UaU>!l,,<(O2B^=)Rc'V0&j3c0sS
%]=s4/hFSaP:/_>#_k3:>ei)D"2O.ZBA*d]$h,eUI'ReGXPP!Q]"dK;`@%3N-nE#aFC'D`=U14ur?(5I1`]-A6osaSdD"DTc^Yg;`
%^qae!)jhCm<@KWlKB1*XW0Z>:%^Nbh]:R*G+Sc#[9h0_G92qm#BsCL+Z3dZqceK'gD#rM#4<RWPX-[G7kpeBZ/@m0tC;*$PUT1OC
%qE72dmWhGE1ESt5ZSsW:4N3RIf'@2cmk^iqins]&-`TXD<.RAYJ0&Jb_iKW1-#-OV`q&lu'nRK:&U9#[nG<q.mURSfk&.4:9ZI_F
%&2E'C$dZ0A$RIcul\?MTn<A#+T3)jY]9ZsnQq=_]&tYGi!*NGp4>:!]FU&EhNqMUm?0Z0.Z[$`oEnPaeR4XO2NVClJah5#V*(ZRN
%Eo!"a,[Hd(i)C%H"jg7pgmr]9Ie6KI[^elu%-5s.i#F&-aW,PqX.h%ce*QeS9D96;UAp9XV0!ZA40Bh]H8(XmrV$S%'65L8A7.k&
%SdO`o[eZut(89"of:ThQN)o1m'a!4Jesd)_aW(RI(%X:NP,(em50aXAr3HYm^VX@B:'BWt8>1cZEu1o\=Tm#/E1_=1Ao0E<GNfel
%9hSRqc_JU(j]`/$DZ9R5&;stf'_lj]r3C2#-eZ6:O7<u"*H7Tu^@e#VAOV*;p<]E\b$fbnX,:<n`"^Kk%l0^P7rdr3Oh;,:DqdU,
%91P!7`h9+1FL,eHq`[3Lk#-*Ra+s5m_pC7lDr1i:>;1lOF*N74&+>`'eL?NsZ*'WlXeH[4fij&$0D"=?:@K,fafDQk'A9@CWcO^_
%or^KI'(TS<ZTl_6=[c<i<b`h@U/#T'jl'&KnjXo;_<iI8:q\$t(Qnu(arL`P600DdC!"[gla5%sNCTDi4.IalmfC>ree`_Sc&S4Y
%P4,pNA32",0_fRXIhBJ#`[=]-nbb(uXG0R"Ss@5_FZDr7i`sR19:c\'?/ed)DiULg]LCuu*CD/BUc4%7K&eHVGkP3Rj0PXSR[5fi
%"TDpJP2CcG;CTG;`6/aM7jPk-ch>D<QHdEqbr(3UMrZ>E)mIr,XjF)bqCkKeHHp69$5EtEIDg%ls+*itdB^.kE)7Qa2`#/S;=1^M
%Bj=`\>"Q]Mb6KiE4i3R2DZ";O2mor5S3k$%i%$aG!F/_6HP#5;R$%qhQDctL+ah4^ea5n,f@lEgU/SYYIWdJlWM>hf(K,H_,Y_fH
%%T0V4=a*-[)J)=g=fISS[a;P+?ZmZb?68SnHL6;cZKZqlP?Xnnn>*2/[\KCZe>:sq<`Or8<E?/RW5P1.U<HmLGhJ89Rd&!U>:5(.
%ro.0[bU+Y4=e9_c?bq"ob,0R[:dKUY)4;oWOR%cCg!'4>9(j.&Tp#H"%i:]e]hl`aL+*Kb1c[U$n)s)QTbo>?R.%fkfe1CGG?NfV
%ZDjes?#dc_ZEs8?,U>@spLJonl0Zl5GZ4K88A#Gj=I$qojN9P*_\7=rH3sC_,Pnar,C7"nNkZJp0^3uYM/Jpfj.0RW)>G_FX2_Xc
%rkskFThEIc>;C=A9L/og$p,=C9KRc$Nl2U8&cB.aS"AKF]Dc&N.PV';lHl0b7<hh?6RhtZ>PAs.#!3.)-Yj]65m0kY[0JgDn['ff
%.g(!n0ur@VSkc<_S.aVh3O4&f?+/9.eF?`I\Nash92ok:XZqrrCQ[>5]GDGTUir>km$OWo>S"'?*8o>rU8:DtSP!`HMGP;P"Y!<0
%0GXV>Pa8U2V$an%q&$-0ChauC8b02Do;Be^6h%1dlTg(6r-PM8f3bq,p,38:4k]nO]^\^,c&=pTa?`<WRRcR"Hkj+a8]<jQ9!9$T
%Xk*)e8^ZMgQ&L;:,SC'gpL>ZU_b_OjI/Ah7c5YRG*E#fs=+k6h"S3O#?l^d'npaa6$N`:Q-(Y(GhB7:&Bc,(r(Jbtk$pggbH);[I
%klsg/8mN_k'r&0HpT6?m%QqV9-Rp(aVBka('.4r5+m?)2pHcZR2kd!C<+J:10GV[hloAfr>N##Ta!Y60!F>pPeoSuhCmO)FDil_*
%pAg?#!$A1815Ar$aSYAf-5Nr4]Z8.Y7\ZHeRf0/O2n-@J-t"hNcRp\2rNY_8FAfI#W?il#&[:F(:W[2(Wslie&Wb.-o%=]Fm(3Lp
%j6'isLQA"XZrob`<KO3ca#n:?&qsjfdt(U[iJT:ZD';)Ug0=%n]t2rtZNGS).fl[rVA;+!dO%%-8@:rP6HS^EW_3cdkIaX;4B]bf
%R"&?FVug*qrJF:@rW.U,cR[:6MeC\),=lgBMh=5aMIKPqW>4.,qsG*':ad&kA:9;"I(#U#k0L1hWPUZmjYdFFG+[=\e0iNPGn(TI
%(%gMuHL1=p's+JBJubYMgMr&`UBS9cP6caafdI(YWum=$>>[2<Js:CNU59@bKbF,UTD$=/V1(a)%hbLpOmQ[R;8)@.?-P;k3\pj-
%]9=0GQE.O!]<o/S#)($p=i@Km19E3..oSXVT<AuViA**e?VJEdm-iAUA:Ype&ck]$Xh.>h,D*C\%#a_uN@eUTWg#=',h57Tj.jp%
%T,buC1RmW'91W)opuhSE"p/C*5-u`'5Ejd/m@F/EeK$Y?fO.0Tj0@8f3/O7sq%ocI74"_U2:Q0"4JM9ah=k?5S"VK_Q"i4K'PhFL
%+=`)aO&9,B"H?I8mmGN$3Vq*SC`)cs^_FElm-jDG[3<W6l1`ltRsX6hmf;'C4`6lD4o``-?e*J(^%h-[XGoktdcB?n?5OX]Cm\<1
%7$]S6a/)CN14q4-8S#lnLlUJcd]Z?PP)Ua?[\*<J'2@"s7Al*(>L4=%m`490/cO3Is2qgU2<u\OS[P:pNV2g@<W!OhRq/S@VN]@M
%-#YNt^?aM>Ubj2cH%4XY3iO*Kas(*8!=2h>W>+.EQX&o1qQP%0OmG4l5r;!hPeDFNjZY"19dN8e-g6RX&c*Bur#Unt&V]T9]Tjp7
%i^$4jcA1]h_U(pWXK6fo?$l(SI>RocKPYa-qtFsfk*&GTa27)/`J"]<Pu'Wni=Mc'IpKSG[?0Pt4ifRg'f"\0""Wsr^<Ed.:\meQ
%m8s!$EBDe+PPYr@?benJ!&2BOiW`ZqD^R>u+1@5_V[ZVpJ'=uq"\J%15&l9]ZoI$_iac\m+;V;t9YMr)C(h_>r:#R^K+3DOO[&0<
%7mn8&F/I3NWa&,Z]\!-7kEk2;UY@Y4"a=&"8R&IB/cI?>*#&glZib$^NMZ*d/;W-Wdt>C^*uluIOiQ&am4^3=)./F3]R7=JI6iU-
%QWNkO8,*8-_nRIb3UC3a%1MNUM`(Ra,"ldC;_hg2m34B:p5LJ@pX5$`4e\%-n\HtY7Ro"ZW)3=)8]A,Br&MaO2-&h@!6AeMWB5lu
%_XcC3\s2g[9iQ$fE.F#$JOKqC>$l@hPa9C>h]gn"Zi<.n4bp4=kZL&ALe>iQY>FG8QV=:LXB!1Zd9<"8gT]rm?"g=].e:e9n.B[+
%;V=2-nNW$'0.am$,$EndQ2n[Bm2mGtGps)pJ=7QBPK6rp/>p#SfZEH-KU-/o"198W`:R44bbQU\E(:?`:"K,M,=sO<^SU5n\CP`[
%k@`-(B6a,a<5Q$?`mYDZ$Mr34^5rj^Go8+9<l3EnYLS8IV`iMciBs)>bA9/(A2?R_gE])Sk9R$F/E^0IdQHoFZkW<1K-u)SqNJFX
%FCqj_aLE[Zq%j/2$_QN2pJ3t7W=o3R)@.j+oLOT;K8$'ciTSF@E`Or-jRs62g[Zd[0ga\2mfhKo&Euf1s"2V<-5DB^0X3.^+))tK
%^7p&<?URao!KEqm12>CtfdCVS#K5mfHIhlDkTfZ=a;?:n!Z6^B,pQK%a(;uS8]!)t>W7??RDFBA32<%_p]@bk!;sG1#oAg))0NHO
%rD.O<#MKC)L%"Ut\1"Cm9*9t5&UeDkQT5/;rZV!G?E(g=7&oX\*<GW4"s=-Ol3D6U^7[?0YWVOETD(MMM%=B,mh;)==B3.B1lQ^E
%UU%6-6A/s]%gDNS,Y5*^_9!c$>.`R!/E"lt%(9IsMP3psK'Po2r9FD0VoHV]Bh_6S'-3TU[("M.6bBr"iWK[.QJsp`P!,oEnR`Qf
%EJ3a5%I0?^1H]YgK($''o2=)W;M$9(@!1d&-K7N4OO&Z'IXF%/p.nj2I,%@sNVBnSm!s)[+oG=G@AEjXh?c89oN00oF`"_]:q1$7
%4lk1?>(GGu83Re9qjh]f._ODDa0(<3Q/uE7T%6M59<C\Waj5r7#D`ET1hGDK>79b+qEL>FQ"QM0%/,DNG,@GJN4UHVfXc2%&_52?
%1pPO@5FTU%qYSlrc?_`H3$r1B3`TY/1Md2JAseShiS<em+eGTX1J\11$fg'q!ZmZqFdM`jh'!kKXLjk4]6"%XcCA@`n(`-ADlnJD
%Q3rp7YDoi6I3$-?DH_-_V[iN!_fTJu?R1iW,<#oli=I77I&Po&^*2bET9R#t8#8[Q5\hDDVnL`A?D(r5_%Okk?N+gW3#\Ghf@!I\
%0?tdE'k3*O%nLNDKc00=Y>R\#DbP_$$=G5k0QtOGm#$#[7#,OHg#L.R>b]?A9S1*tj)+=;Lm61`C]`a4E++W>RpJj27Zi2X4:10)
%_>6RZLd-(2`LFO@*3jpFSgYZ&]D??XiId36.i)r-h-Q3DJbDf#)nR3AB\oNl+oc)p1)FTL>a2fM>tljE)Z-^_rbD:'@k:t#qe`9H
%:Z7thm4*WnA*>>`&qV@H6(YTaJmaf$C_SkCG:W?:)kmDiSPSX'#QNCc.hk,CGMdOAb%IFOVohR)\"FJi)a8io(1=BF=E?uunOG^r
%F`t`ORnB-:K;\l>>[cP]`eQ3BlMjHt!^oW;=(uO]ZMHqFQ:N)j<rQ@)GC1-BBqKV]\F8"_4`R!jL*@Dq6"`OaVJYuA*<.)?U9jl!
%9ZJi^":h#:3-EgmL&Y8rkPU#Enu%`N0H<7;P=]fD6P1eO&Cl]OPtl-IMNa5E9L;f7^_5T>\/(Z`P7_V:%Q,h"JWIF)@uKkep'?/b
%dRMKnH'/Y[G6?JHIlK4rT9,SOm)D$n1O#r,_[%YnTbbFfWS$6!oS,1XGn_@]=euqgl*pOoVYa8/=2?H'3qP(/0:GSubYX`YMMZ;Y
%mS'6)/>E3P*/D&":#/"<[qP5-;!GBGEOJ+']sQUlKIYuFZ;-<A/3=j)(^f,\89S?`k&dr'W22a'B`N3Rd''$XJ`QS>diD">hXuiu
%[LG@UC;l<-70gQ*]UENH4n.fNU)3=S@>PU(XJfC`"gBR@#S^f:,pCS5JNn@%p.:.FfsC2kAsIQ_Q[Gn2E'[OY;=;7Bkp<d(A77B]
%VmRdQ"Lnr)'K2Wqfu'OC4/`L^?>FK)G=*iMOZfL;99hXgd=AnHA[T9T"2Fe<)E>(kr`6$89k_kW_9f6#BQj\djq]iUQ1e?8:=Vjb
%EQ(AQ$#RVNJ?+*'e"L1@XRt`Wb/V%XpY3`0ZqsqoZ&e,a6tH/UC^51^EaN2jph7YJGPHBi@V(@\9UHY(YW5K_,nK<O92eWu(-$EJ
%_C-@7T$mD@_>02bga_bM!Jc/0rq%:'+/ke'rX_nSQ!S"m,9F>,aseFtlqYmIRb]Pc+Q!p]rj2nSF4*g4\:Ogsm8eOK$DuoC,ROau
%jWj98b^-^O<K1K`+qJmck\->J/K_cA_qu%JE)Vc$[6U"HL3WC_V"fY*nX$R:s,sb6U!0:LDreU]]fGB/o.>Kr0-$qn_ar18Y5DHj
%X-sZe%PBW]]C_uf">;>9ZkXS5dgJD7*AZn,T6\@,kl`--[hJCA]p=!P8P@Jrb.$[f61,cg0Ud+<>Q?(I+'s.o)b:)'i7G3O$Cca(
%&d\-Jca9`P:8:1!:0l8-GSO*p-`%kBW7s5:Bi!-/MNPR(^R?]q[Ji7[)t9=pPWJS`985+ZPgfoKh+N*OHD;i2cN'qaYgW6f#lS5R
%n_2.c[k6>;b1]E2"[VXf\*Oj>=M4[=9g,B"dQWf(=2)*Ri!s+R"1BCGP%gm>C!'2R'GNYi9r")dk2#@PDAQ9](YrU3O>#)GHWpSf
%g.%AN=K=Y^XA!nWnqlO!rD5MuZ-s4NPPV.^`PnPSU.Ag>kVI.Lq,%+ip/6LcE6;(Re1H@22#o&'pbVNFQo`+.R]ajSgsEOj!"kkI
%*ZcZI'E;=7Z2HCHmM_4<:?%Z;(>%F8E?&O189qP92BkK5pLP_'HWM8J<FM&AB4e3%9KHqmWWK&%c"S^O?F6YSMTMa!gicqffC+sG
%&VWR&5$nP.-@He^?LPXl6UWl]m@"KSBTEk%K'k13V0Y@ii;r`;90Q8=LaOKlif1gL9h+PR83c$*6!GHHrLb3Aek`m=%DeNc,q^o4
%PYmhlpgafA7H]tD28MF*aV/cOReD$T,C(Pp"bDN(hf4.V%=L/Tg@%F`0\[\#l\tD^EJdi6H)Ag:;'VC&&(i#ID;3(Q\!A3"aIH>I
%nec:"0RKV^q93/U0Gk^?ULl/J8+:UhkBW<&i>_@^,s9LT+i/mhT-je%8j?.EZomW/JrFTPb/;0X1.Lf=CdRu<cQ!nY7lNM'"S`NY
%l%02rn/[kk`E6s+*"0IpE\h4&5/o2@ESj1[IeN8dSt;[hRd^k$B:*S_&p-R6kgRI2G4)'4InVh-QkZ!Ll(",YE]QGM>19c@nSmVf
%^u7X<WTgOOC"B]D%#\<TbdCNb$r-ANf@5X6]n9FUU[Zt8hY+AsJo,s;?7j963nY1H@0p)^mdc2VT)]=1]_Ng(SKjb[VG,6iY]>sC
%E$@OH(c&Bu.>L<S$&^2uKg=A?@WP_<8m?[^_@'#aJEiCm!3Sb]oD>9c%5dp2^7p*c)h@)GgeVc7UmQXm1#+"pDhG=r$:7,R>n_`C
%A"$l$"lGC?LX_FFZg%Snr:#L,<&ImVogdJ"%s(IF9)]T,U#j)Yd.fX9(8g&e_A_uY#DLc>:FQ^.qIC'IC0_7B)MeA^c<\(l/8)S%
%_sHa#n@jK+58'!J(a#tM+QIBA^baGN6`dqT'fBOJTqX(rqgCbEa$O67$X%*opCiI:/jJX<\o%M+cu@O-+)BJN?b\UrH=RU+NXXQn
%rc+sE.GUMaR$Ob.i94c+L8*%i<jTq\pEahqI#I%])W(NZg)?*7D<HZ2d$H%k_quZkKnofEU46EVMFl+tY3/at_E+\i#W3q,8+]6s
%V7nJ7MVksY+9O[PZta)\gW:qVC&>Rl.Q@ic8Ugr%Z$E$S*t2'<GX'd:^@S!&@PH*Bff=2!./\ZQca+:oY;CNGrNMhKTrgr7Y!t;`
%7*Q[[bfl?)::_d2#^8SibjR5_W(o_?[1hhLjAdPsG^J3,q6qujo8g,2LH'M1V\bluQl&8f3\O=)0l^-2$O#<NMK!?kR6UI;Ee6dI
%\H3$&-CY0jD>L!U:+#Mf8J/)+.K(QnCbnk6;re//Y<W;XPJ@g&k7F/W[c"1[>[eP=4kd*OhXbD!@Be@1:<T03i]\E*=2!o8NR>t7
%q!+4\#Ub1PO-2<OBo;&#3Mc)tX0JdZdt#%,-pe3,B?tt>'[jQ0J"i9f/g(SN:6ktoG.05ogIX^h=`;9.V(\crQ$SB;A!!,mV#?,l
%d`\C7.AYijFg8GHUbDEmYAZ,'+-3RP$6l>r)\>kYOgaV`ch.b_E".Lem%P!Seh+FtW<6r6H'eMaXhCLL]"dku7riuF+[#s:5RO,,
%_@h72ih9iI'N%XF1H8NgcdQrXV:I`W:oV>>*kT@o0B=\SUM#ZJk0oNp<KAZ$G_FXq`Z0]38="j^Jr6E@f<Q7cH$&-tIW-ae^pRRE
%4sN9ca%)e#TZ8n6W6\RC$'J-$q;BM6_DM5MF>H2SHp%grokNW(S&mDMOTG*%op$0ph<dZq@d5e9`AC178nliL^@#Y![bTpTM=AE+
%7:`o@]_U(tD_B*[q'.q$4c2TPW$[=:qN]r%1I&OFLiil&P.K;ro?o9kGn6T$6^b(&VV@:g\^3e66Hs,eMn@T;/)&etqh382r41_B
%F_!'&@S6UoKhu8Ds#PbL@Ra-hW*sU?KaQA,pkGW$"4Sc[:=Wj\$HoC-epkl.m7p,X\Ya8/Eh9bGg'FH2"i)g_[oL%,=E>1mi6;,c
%MMth6dn3:Gi<!/3LVuX21BKdrnY9D*U]s\RaH?<9!*n4cB:V26*q84Y1g;+ua6/qTICo_;$bU;`!Ep5#7>cD*HPJ`0XjW=ReX::<
%AN-B9@4*WXUU@]!.4n;bi`U1\e%^n&m;CMLcBFUCB0#GUhW^kIH5R4)Wdqr?+RBX[qu+t&p=p8?s&!,\<F;iCF8l1);i1<q55`98
%p.($ZV2S&Ii=d?jYKfBjMS53j&3Z/)2J/3'[RjCM3G/)g99H=s@lguYJF<)L<hG2(`55aQ>EOlNCt@IX7bu-,CMDG<Z145I7%-u.
%LANe`H^28Q8?S=C,d>1jV!*EJ9Pnsq5ea8])L%\Sicg?`gGGV8BulM`3<=!eg@^<cY3&Z?jc2*:HL>*PcM`p3YRJ")F4*bG7kU=t
%20KqIQiDYK/DE\nlgT`bZrKg%BJe[pj*FD&>F0;bo;^O!I',qS;j5E7kB.N&S=D@dV4J2iQsCY(1?unsC6c-Z1HTF^F_)\i5>FM7
%Kh/3.X'(Nj<M&isJi8<$L5lkB-oX+D'#\++So9+YUWM.ooa)t&'hh)2&q2;#!]N^dUPD(TiBt3a$>l@Fa*&92k#C_%m&c'3qZO]&
%I>X2A8t<T0+7=U@n8m7rf(>#d:%O02A;X6fq=uap[F1a5>Ai"Y\Vj&b<BjDj5T9'/*%[u6/lS>1&8:Nb!=,q62Rp$F7p=IeOb0U;
%W=*cT*E4O<ZP@[Wjl@K`1"hLUN1C`N=F0p<JK,-]KP`dmFM'p?Q.MMT$#YZ`-Co^09eCR6N?I*H_Hm>En&]uQP/La)pSr&nF[/Bj
%]]0AIm2=umg9</YhSbaEP^2^8r8DLtm_m#5om1"r*@mXbfWMIUSiDqr\o/l`,R3O?(5.0"eVk4&]rgmU]^qrVYDA$c`uSV^_"Z@p
%4ldD)Tr@T*\^b@"$6\-O0_tULr[S:D&j-54aP]<Rpg)n`C-^g=YbAo8]7)(um8"KUS17;4fn^X,h\e<eJj3D*0),?XfA0<;8b9-C
%#o\Ue>et4,$X[h\NC.&$8aqYq^_p;LdTn6gr0,)KR&no3N>$F4hcXjTo7(CeX5&:kN(QD=#(uPk=-uA!q"'mPMVi@D[?V0cg;V(l
%O6^hZC&StmEofe#)K_]6eKBu<J5+*`hG9Ng<*gURlo7@3OLmamHkHa<>h9XeRAVU@0mTf"L+me^86E+$45HV"4]a27(N:jOd9VgK
%C#ZCSljQZ$R0`r7-%?.*L@@7"20KrFN=r/9q,l73A=N!7=P>"AQD?9GX=2,FYCs<A/PpVZDiL`q.AH/erYsl"bQ%I%R%:^nepg@C
%2Om7hY?eRYk8K0m5DPIZ>c3]eK5nKdgtF('4qTimU<K>IG<3$6PX;q@UJO"H.,]Wj^SB7O%eIN[piur=b,h#)l[?5UIB_S\/n5Z%
%6A3nN"h,>MGl2!#WE=6(:GstNJ,]0c3V8)X$.JV*?\Da,&+S8Qs&KH998)]`rjG`"`TbD(2S%+VG"^`d1__Dnf:NHsNLhfslt`'j
%ZMnYWUq$G@k\lFPAL$>QiD+U5TF>"fE;RsNnQ/Vm6j(@[`0=?F&qX&G'rBZ?Ef_m6RA7:h[Y5"hnoM.fj0OnEG[:e4a>pU`>84;*
%%ggTWN?9`gP3R7U"qa<^q=$m'fHT)@fLulG!fERO6=jHAXS"o=*,@SmLtcV%J2A<.V_!(9UpPHhhAVLhoMK>fdS*n%\X0uD?H\lI
%?U%-BX:)LcC%tWlO"<(6H2,b>Dub*F]j?LrbU3,Sqkg;%>6ORW&enNn%OmA5U_Jgbbp?4a!EJEaB^)UuD=Cm^1%IiY?_`B[=;7jF
%]?6^G&jnuK@j,g-e4tlK2Y9#5AE2\PPORj.cI6fFgR5]'<,P3[&cUg7`Ciic).B.G]#JjIE@R'0F,QiFn[@ZfC,o=GJ=Xqk,!LZ4
%Ai-"PY:/qR%r?uYNMr\6"./5_hs'kPG0)GNo/dg?Shl&e=Jjh:*FI*k:K+JG>Cb@AkpfP#jX$<_3:8%G=X^D*bt*8[#q0?kF]1Si
%l#REl7S=,u)/Rl)#!B9tgH1M>"-CKaT["9%%W8),]sV+8CtiEGopQI\3W8go^Ju^K_,Z_`ROX!jCe=Y"!aJRjc$C>l@sVNGABjo#
%hbemWJ-*N/g\Ueo'68t?A!YAun=Ujk*0`-OauB\E0gu\b.1gZWVNhGtT5bTlMo<'3#s;KI_VNMB<]Ot6QRhNm;M\o/\eK$U<H8k(
%L).+3C5a;Xqt*rO]ie.3g)Bl.3n8[LT55]D$*2u]K?c)8Or_=CR3qOOZ/,<`X(8@0c!"J;'Eg+ljQhjZW$UB2jAH_AZ/$uH,J-$T
%OlGUOaYN\%'EGaX$=_SOXqF*Q)RG-']>P8.H/nrYa,]BC"uQX'ldW.#(3T!rS=8p&7knUD)LlsF^Mp-";#kF-i:Obf'"oqW/%t^J
%_Mh_c^CQHc!^<TY4Jj7A$`:Y("eOmK'jK/#lA'f>[?nES9QtVZ;^hc5Da*S6mb1@^o9KTVmSL$Rq21qXe:Q>]`j0#e]O5ZC?P0AX
%d`9_DY'EmYYldF7_SXBC_Xh6:$p,V0hQl_SF"7-U.5[udm39>s8boAVfTGiJR0rSAJDr7GGD]lAZND/_C53(R;D(3l<bWK9p#YP;
%%!Yk(anC5!"o`c0(1>ug?)hd4e"Jt/Bib>\Xm!fPWKfQH-j=>u;iJgr<IX&\O(n8?d%u828mB@E4=$"eftn\H[<n;;j3(2dLj:9o
%rN7TRa9]'BfL=>i]s[s%\sY@<lneSQ5`o)RHH]'-)@&DmIDJ#:)"G&,p9m3I;VZjV<u^@-6Km<:h,9QGEg!rW3F5gn/WFk4M2CXe
%[0QBhbdSD6c4BfC=h.ITeTB%M#Q9=`#79[q5KK2'X>E!:55U-iATS?P[taZ_aiA'p+&0.5;8eonIcrnV*6Yb@jilUgKsg"U]?HQ"
%-68)+W9R;tOtB(oT18)^o/WVa":%l^S#!OOm=)LdF2]ULL_L'pPEebg$`kQ#?RO<eoYh129^CepK>QA!,B1%Zr'dh'WAdQ'M!:/H
%Mq6iNdd07So><*io-*V&0g5>RGhMKM>.'<3AI_+pd^aV^#+^IXfi3HE`:Wb/[>dn%f7<f+BH>>*S&'FbS(QBc4G?=VaK-tr,q13M
%'t<A42'XNY!b)j"o,Ot4kJR3*%Y-TEG"+`%g]k=(`u<kG75qMV1193h3_%8=iQd^HM>LK9*DOn_-l>\_A64#fre9ea,f]I)b7V/>
%a;5t1D>OT'%1Ze"^q(sno7EBbkmb2F*@/HH/_7=CkJ2N\^CZN-^\`tFh3?G<[CP<J2Zd>d4:^AC2ddht#`kR<P3]T/.n_Q?^2PaR
%N7Npp4X]aR(%*.>e>1dU\mfsgL20tTLJEa92a`U5&mgqV>^P=6CuWTg.GT[D0.l@8jEB'60@H'9^"$fZLC[B(3I3\-D2>a;7X:IA
%^kI+@C&GIspUuYg/,?SZ"0c`OJ(/"#Qu^s)YigcG'nW$Fr]e`-?^QV4(tS*l>F@!RiC&+CL>3%MZ2)\c"N`J4d<X*<aqp+,:1GZp
%2+_j\<B6n$1S:8#LCf#DnImZ5PeuF;Bb>B/:9(a+Y(4!#'C4PdC>;s])AV1C`S+g>5-N<WLnck0rm\.k3*Dr=qD?30N]!iCT,#3N
%NgB$o1p`P`55ZH:g-AORS(mT\cKWL?c8*Sm`03,Snq`"&NKN%<+q&"^"<_!F<&-aWOM):<B#fd#N$Hj8W!_KXl.':554VB\"3g6F
%!c1hqNo(6aG/,Fa+lW%5[WFbs-;n,JSCpo)&-;T&1Z2>HND0K-$](o.F"hHM:P?ON6A&#5glph.SUmGJ;RnaQ3`d"qGY3pH9MYrt
%`576^ebc[CB[Mgk)i>X+PlA@*D"q[ICkdHD2c%VVCP>i5a+^/Tb=/`lT/e@qRGr3/R#kUs,HqgJRhd@R@hYY5]o]=pf/Y"Q.ACLL
%79>].?L;mjn/4e!i5PHb;01gN_.[NqD>YE>j/6L)([&su][B,W&mSS!7JbZbP,;iedc"`fPq\d$0:DrdT?/QU?NefRT%`b`VD@JB
%+4n_pNaSb=g3S-u*EQ3E?nQqdJ3K<"oJu;J;X=?P7UVC;h'[j&fn$%AJ+(V1ZZ?1B!;,>s+CHpJ\SfVXgHMEbI\(Sp0Mg6P&0;%8
%Q.Wp1<\Fn8YQ^Y<VVC-J<sfVX#CRJK,!h*XU+S@'Ze6$a0SJ*I$n7T/I\Hg&dplb(5/\kr"X=^//S:YmA8n*kP0%m1C6Li-lYKjA
%:C`5TGBP(=V'dP;O.XuY(WM8om',BBYmj%KFRJ0@'d'c%%GpC^\>;b"I79PH@GD>,IV5u)c>b(u9+:kS?'55!3'@SgR7Qb>2+%S!
%8.t&0iOc2GJjS3BSJtb[!s,BY'K!aTU`i+R]"?.rN7p^.,H2U7Xik5gqt]D+U8R-_<FVA,G(6(`^G9RQ9ntELg$LJ@8]ZCUrG;bU
%m/VinM@k8b.(&coVgr>SeJYb!jHX1^b7D44`0TJ@()K3$F[ZZJlTX^D&hRdS-n6jY@5XqVdTu8%LO,B!"mASS]\kX.mEr-TJVQ@D
%KF4U)PocZ%=*fs=qW?4g$8.plQ+Kf!,CA0BAuaV>'BhN^V:#0G:V;RW6de>b[\Y'\<UC+69rflZPncA282Nsc=)!%/+/Y9'WT-t`
%Qk?j@2ed!l-[Rk<rnE>1'/$ZB^a<S;kn2Vjfi4q$<<ED/KjI7`+)ORl;pG=pdhVlijj&"((P4ck'gCeURf^/MTI(#:mkSbBf=jj$
%LT"0h6fu]kTOV(!3"uqbWW$?brk]X=:bu>`<3gEXh=%TidrJ`K/[QqF8t?TFNMugsq/1+t0i?iCd>%"6HVFJj-?F[6Z.6u-%pa'0
%$#EFLps'2,[6Np'^nF;;0/QCu/MVTO2@fbL-:m>EilV/W>,`Yif#+A/;"[ko??XfF6p=[ANN-hE:)t^aX(R6,C]:P!qPg:bq4XZc
%5It1b2UYd/[DBo;TT"nZ?01i*XTchegIb];."Uacc]0EG;=K35A9!,(](PS\'f^Kpk?:;mCJU<F%.f[s*&]A_WXQsg]f\!g`=Egj
%19HspZMqr.'fl>>!EG`8!ac#J%E^qc0er[rVUL$7>BW"#J,/KHqZ$Q8J,3OPh7rp^?i6CCo3_Okg]-g@J,f!;j$3%fs74qEld$6*
%/GNLdrNIgP*b47]Z#8WbcbAs')]n'I\$F2N;8%^81\ULF%TVf[?WRc.[g_me\,eS,)On!:e>eT.ot:8%8!gL,Ree#lNk\7?^?2M7
%0j$VWchTZO5u'!Rq!Y9pb-6A6>(F*]hGc-'T8[T@+D?d`9/7f%1=,LXk>D.QqN3Z>HR\[pG<GDR[P`CiWQ3L>T`8>8/JZm.)BS\^
%O*tC-_D)O)`G1q=R?AJnI*MdFZEpok.^q3W\aZg92Sk`:Dt\ZAiI9nr7BRs.V6@Zn2D0Uk2(W$]I+Jf:QhQT)`q&7f\VJR>pJ/DD
%oC^Z,T#Gs3l2e5D9tR3L/u&Q>qW:e;2#1'I']<XLYi0bHb%,"'VZ"!Khq/s9)9+M$]N]\_:`?psa)TiGL20hom-(h`enlB1q<j+.
%[t4:D4*@nrcADu_G<t7I0Q,6OLOM=*NDFmk-Bo`!`U8i)HYu,$g^&])VfjSZQD>(I7KgsTZ8+"WqD3:,bLcg(*9,tMc&pH7"t+9B
%]<_PshtVVM9YRPn[-BtuIsBVJ\eO+YRO(hI]7]-JL"?<3^sR]ZlI9$!iI5]i$1:d@T5RGoBc[-(!XHoMrX_2lj8lH[*RQ8N*47jL
%Fe(qci\2IH2/IY6X#0&XfP@Tu_'sloaG+M>_em-pR@e$FE5#Y)%05p$f:"_SAo1"KlOHR9$[<3>NTf?$\[P1)/**YS9o.p&(:Moq
%[bWo;HuS=@H$55a_>*ktb7O0-'a1.iPquU;I3f9H>$sTAaPf_,T==-j_I3]`riN5c/.R(@Wla<eW0I&i_.j)]\E.RS;,s`dJ"n\N
%Ad,@,#rd]"<HJ]FG(+T[?)J9#2Nb/pGA)\;S&c44$G=sq'@p6]j,WW(K.(ho<,FM:Af-:k'>WQP*Oc*p:V[Wrn-7(@KE6e)(B@Gj
%3hM)l9(k?nj<TH4<sXTZ+r2)qCm1HkNH3J7$_qHk4'8:pA-`(?9kdB1b:A2+*=Kd`Sat%u3BXaEoYf9P[e*faClq:ZWo!&==&^rh
%9C?E/j31cmikZ3\^AWEpr.9:+BN8Ob@1+7o6'oGN.pM[+(L9>K$1E0X@G+T<X]Sb&M/gd@aTc(4s1;+o0fjVc3jII7SK&i+JCcM6
%$FSbkq&TJ"ZI[:t;N&S9'\rj0G]J6a#R3c4(dW?u&ogh5C#29TcYk!_ML\q[?.tMuV/N+nkn:d_f+Eci;+gu\GO!B,9k`/(T:-<d
%QE@<X*AF\U4tLGa1)QXSI('oLGi?0tBm@/'"h@.E:]@Hj7Aha':OJ9>AHMn#oL.*K@"RnSXW<=oiJuFTPkubsWnuqX75NDR"BObb
%=I\>\Z^Yd"^P\g5?V&j,YU:M[J!=UMaSTEZQtAj<RrU]YXliD;^g'<Lm$VpgP6#3qqYT`If,LM="I)%/lh)=H9;H3NWq2HJ/e!(=
%7?V4NHmLd/>O(.)mq1I^;f+abBH#20ctQ;_E,eA@;G,V^]bV+5/^a6so(BNq*N^&t&ebAWQG7oDCUU6h[Is4&VoRG.58oETX\PDh
%'5&`okRg:Og"/;LO.?k;;L+;AJ)C&a40=mXm"dT8']+.XO)!O)#ER7&ard'%G/9h&_D9,@.:-V44$Mo]Dk7h-!FMeY`md3$-T;11
%?1=9h5Db)5WG5-sO$.r[B&:M!DsM0^FpZgjE@;+^#\f7'"di#^9sQ<Lj(cV"K2odHc/rZQ\%7r#k6$]ORJNOqaJ`>AEEt88/itPe
%A=e@YOkn6GXS#Q;#o>p<@O7[k;EK$];=05><Zl57T@fRnLmS-sEN8([T/^9WW?\&D5+3Qi`b7#l[(W**j&Zee,<=o/0cN/j!gU.r
%$Wul+BQpTo<ULo>3JXYJ+'W$1W+PP9bo+\#\F]6&<S1!Le2fH1/7*5WWbG&nZ1@X,g:(35\.^J#Fs&9rDW@PkQb&#L:;L)-XD:f?
%KF@1Z[FQh7,D4X^nFHq+)c?_EBQP\GF@V7`6_@O/TKGjojMmfeV-cfY80cbel+@$frZ540#R#qB/d(tX,!j\O_oRs<C2%!3dhF/?
%l<O2Dp*q?8b>!`NBXHV28;MSN:%8??Y?"7R#kV=5^Wf>u4-rs?.fJ0O^E7!3'Eb0\U#KnFeQ1RO=c(idc'>p#$,p:(6j%'Z=Tc1>
%C/o<'9hboB>nsXm=q/Ntn\4<p;TIYEW`mT(4h+N3`M()B'Z2<IJM)RqHVJNj4n(lKG#I\p)o3KiH.^^i%W"LLq+t!sZTc=XX5c9'
%Y*(I/MX;.>,[;Ekr>57NY@a(!='D!@5R"5Y6(8OLHZZ/@VJH&KQ_H_Z`8=m0kA&sbCRl0c2c\+S%H%VCm][#17aM\<SN7)@J4uM5
%.rFMFn[mH&GPqE1`ZRcC$fBnEkr="'%j$$Im-+\]k?N6'@5KhSL<"o=;jEou8aS<d$Pf7RWL`o('oCbl$E+ZVZ%FTIa5+5fkDq0F
%>GYk*#b6]Q>-qE8B/6[F1[DiDojJf4Y_'.k+Q1:aISpHE=MYW\G0.5#QIpc7E812?_'5!%c&[6Q!-)[01V(f@.csWV^sP:u!X%H[
%SOmKgb&KR`qll%FWcC^=&Pq'qWd5]FGOrG>7&M42.iq]pXXlec!>:["`gSfDI/JQij(Aj<U8`roS0Gj7EQt6%H09X7KE[OC2p+]c
%K)7.N?"mL.a`V6^cg..:!"K,6#kf7KD:10jV2on:3^LdYP&'`Q(Q$.8Xtkhi%@nYd:G3msfea#4cN[_%C_NF>HNM[Rp$-NHjFH9R
%Vu)-N"_kJN'MXT)a'^!*n[/5&?"0'Af=>\nT-24Nrm1?!:-lWs-`Kj8e#`^u)I`c.B[E6%BCK#QjBAs*ZlZZuCek8qlAY-.\RAhM
%)q,SXP(@=M:cO;D.=(&'n;e1-ase6?%Y2+WO)O[\_!3Rr<.A/YJ[QC"\j*l79X?O!80;`iP&MBkJtM7fjb#7jf6$-!bQ:Os&qFDE
%:-h`6bs6pQJ,tfabrISq1MGK&HDjK%%N<-U!)LZMHYDAe3$Z$Pg@=P`%a/4YV_oX`,II9#C^9Vi^uh?N;L_OOolKtd!r$o;U7i^4
%[^?J,X]:>nG2QD9OPBhe!iD`?(sRt0[\U`llu,HA-)&DKITd>tj[n0*nksrNIETYpP:ZM!Ek@sQd3LoQ[q318:<2Nn:RC[KaY,"<
%Y(tZ@K0$<+V!K_*7Nf?Km:mG/4?0o![:;O?LAKr<37ALY.Ft'$8J3kI[Z!KFKtKn9T)WJa)0*mN![qUcG5;j0X4!kJU%U!7S+]rU
%?-FAP;,;0(XShR5[Ec6K&EV1TdsBH->AJmpVhN$V+/Up/D$]`UdsTPXe6=SEjUE[G]Gr@U?F&iFKoc\JAS_Z['((nd1GFnl@/[N8
%$@Pc_d/+=EfK]$]Xalhp^i*q!3\jnb&-.XLMs?'RFH+8Z?gCd>W`1L\+6gI",4i>cq6W;%X,,l.>p0Y\B@1arH?rfe"=$'K#7nsM
%FF27e$P2.BpIa2hbD,Oo0.S/47Q<KBVA1_/0.gm3Wi]`F--574%-"LS[`3?gh)["pW5YKfPHDXhrfo!##Z&%SnA0iI"AGGc?k]ga
%NI!oA%gY_CI4=2BE)/q7!6'4Mjeb?*q=YUd`@pR2s64Y`s7U@pLB%+bIK$/Ek26-`J,>$$lQ?/kqtH01?i>3Kn8J?sJ,#pkpg='1
%J,H5Er'1(fs5>(!c[Yld&-)(T;.9:@s8DQ(^AZf9qT&X*+92:(rStBenA"nuruW"/qRYTlrN#t\s7?9ici:?O5:hJ),Q~>
%AI9_PrivateDataEnd
